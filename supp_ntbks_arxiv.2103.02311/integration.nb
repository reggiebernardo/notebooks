(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    985037,      19520]
NotebookOptionsPosition[    978086,      19307]
NotebookOutlinePosition[    978440,      19322]
CellTagsIndexPosition[    978397,      19319]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Integration of coupled scalar-tensor mode equation in kinetically-coupled \
dark energy\
\>", "Section",
 CellChangeTimes->{{3.822399031713275*^9, 3.8223990669686832`*^9}}],

Cell[TextData[{
 "Author: Reggie Bernardo (rbernardo@nip.upd.edu.ph)\n\nWe integrate the \
equations obtained in the notebook \[OpenCurlyDoubleQuote]",
 StyleBox["bald_bh_perturb.nb",
  FontSlant->"Italic"],
 "\[CloseCurlyDoubleQuote] for a dark matter particle falling straight into a \
Schwarzschild black hole."
}], "Text",
 CellChangeTimes->{{3.8223990915274787`*^9, 3.8223991221324806`*^9}, {
  3.8224736774413376`*^9, 3.822473679492444*^9}, {3.8237511379238462`*^9, 
  3.82375115886578*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<bald_bh_perturb.m\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8223991430331855`*^9, 3.8223991617726235`*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["I. Starting equations",
 FontColor->RGBColor[1, 0.5, 0.5]]], "Subsection",
 CellChangeTimes->{{3.8223991683337336`*^9, 3.8223991708331604`*^9}, {
  3.822401801694399*^9, 3.8224018039440155`*^9}}],

Cell["The coupled-wave equation are given by...", "Text",
 CellChangeTimes->{{3.8223991728637657`*^9, 3.8223992050175934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"ZerilliEquation", "\[IndentingNewLine]", "\[Psi]Zerilli"}], \
"Input",
 CellChangeTimes->{{3.82239920681396*^9, 3.8223992119377165`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M"}], "-", 
          RowBox[{"3", " ", "r"}], "+", 
          RowBox[{
           SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"72", " ", 
           SuperscriptBox["M", "3"]}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], "2"], " ", "M", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"L", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "L"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["r", "3"]}], "-", 
          RowBox[{"12", " ", 
           SuperscriptBox["M", "2"], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{"6", "-", 
             RowBox[{"3", " ", "L"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["L", "2"]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}]}], 
            ")"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"3", " ", 
        SuperscriptBox["r", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "M"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"]}], 
       ")"}]}], "+", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
   RowBox[{"Kh", "[", 
    RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "-", 
       RowBox[{"3", " ", "r"}], "+", 
       RowBox[{
        SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M"}], "-", 
          RowBox[{"3", " ", "r"}], "+", 
          RowBox[{
           SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
        RowBox[{"t1", "[", 
         RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
       RowBox[{"3", " ", "r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           RowBox[{"T2", "[", 
            RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"Tg", "[", 
            RowBox[{"R", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
    ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"9", " ", "r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{"R", "[", "r", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "L", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "L", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["L", "2"]}], "+", 
         SuperscriptBox["L", "3"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "-", 
         RowBox[{"3", " ", "r"}], "+", 
         RowBox[{
          SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["F", "\[Prime]",
         MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
      RowBox[{"3", " ", "r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], 
       " ", 
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{
        SuperscriptBox["F", "\[Prime]",
         MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "L", "+", 
            SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "-", 
       RowBox[{"3", " ", "r"}], "+", 
       RowBox[{
        SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"72", " ", 
           SuperscriptBox["M", "2"]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", 
           SuperscriptBox["r", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"3", " ", "L"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["L", "2"]}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}]}], ")"}]}], 
          "+", 
          RowBox[{"6", " ", "M", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", "L", "+", 
             SuperscriptBox["L", "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}]}], 
            ")"}]}]}], ")"}], " ", 
        RowBox[{"t0", "[", 
         RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"18", " ", 
              SuperscriptBox["M", "2"]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "4"], " ", "\[CapitalLambda]"}], "+", 
             RowBox[{"3", " ", "M", " ", "r", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "-", "L", "-", 
                SuperscriptBox["L", "2"], "+", 
                RowBox[{"4", " ", 
                 SuperscriptBox["r", "2"], " ", "\[CapitalLambda]"}]}], 
               ")"}]}]}], ")"}], " ", 
           RowBox[{"T1", "[", 
            RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
          RowBox[{"3", " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["t0", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["T1", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"R", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"9", " ", 
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "M"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "L", "+", 
           SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
     "\[Omega]", " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"8", " ", "M", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "-", 
      RowBox[{"3", " ", "r"}], "+", 
      RowBox[{
       SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"R", "[", "r", "]"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
  RowBox[{
   SuperscriptBox["Kh", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{"R", "[", "r", "]"}], "]"}], "+", 
  FractionBox[
   RowBox[{"2", " ", "r", " ", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"R", "[", "r", "]"}], "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "L", "+", 
         SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.8223992125156937`*^9, 3.8224010990990286`*^9, 
  3.8224737454192743`*^9, 3.8224740577051287`*^9, 3.822547469476286*^9, 
  3.822905997088726*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "3"]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"6", " ", "M"}], "-", 
     RowBox[{"3", " ", "r"}], "+", 
     RowBox[{
      SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"T0", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
     RowBox[{"s", " ", 
      RowBox[{"T2", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", "s", " ", 
      RowBox[{"Tg", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["L", "2"], " ", "s", " ", 
      RowBox[{"Tg", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
     RowBox[{"2", " ", "s", " ", 
      RowBox[{"Tk", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
     RowBox[{"q", " ", 
      RowBox[{"\[Delta]m", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "-", 
         RowBox[{"3", " ", "r"}], "+", 
         RowBox[{
          SuperscriptBox["r", "3"], " ", "\[CapitalLambda]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", "L"}], "+", 
            RowBox[{"3", " ", 
             SuperscriptBox["L", "2"]}], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "\[CapitalLambda]"}], "+", 
               RowBox[{"3", " ", 
                SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"9", " ", 
       SuperscriptBox["r", "4"]}]], "+", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
   RowBox[{"\[Chi]", "[", 
    RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{"R", "[", "r", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.8223992125156937`*^9, 3.8224010990990286`*^9, 
  3.8224737454192743`*^9, 3.8224740577051287`*^9, 3.822547469476286*^9, 
  3.8229059971005754`*^9}]
}, Open  ]],

Cell[TextData[{
 "...where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "(", "r", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the tortoise coordinate, i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "r"], "R"}], "=", 
    RowBox[{"1", "/", 
     RowBox[{"B", "(", "r", ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". We shall focus on the Schwarzschild case, i.e., ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"B", "(", "r", ")"}], "=", 
    RowBox[{
     RowBox[{"1", "-", 
      RowBox[{"2", 
       RowBox[{"M", "/", "r"}], " ", "and", " ", "\[CapitalLambda]"}]}], "=", 
     "0"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". In this case, the above wave equations become..."
}], "Text",
 CellChangeTimes->{{3.8223992350444307`*^9, 3.822399280611969*^9}, {
  3.8223995801936135`*^9, 3.8223996337905426`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CollectK\[Psi]", "[", "expr_", "]"}], ":=", 
   RowBox[{"Collect", "[", 
    RowBox[{"expr", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Kh", "[", "x_", "]"}], ",", 
       RowBox[{
        RowBox[{"Kh", "'"}], "[", "x_", "]"}], ",", 
       RowBox[{
        RowBox[{"Kh", "''"}], "[", "x_", "]"}], ",", 
       RowBox[{"\[Chi]", "[", "x_", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Chi]", "'"}], "[", "x_", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Chi]", "''"}], "[", "x_", "]"}], ",", 
       SuperscriptBox["\[Omega]", "2"]}], "}"}], ",", "Simplify"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"KZerilliSchw", "=", 
   RowBox[{
    RowBox[{"ZerilliEquation", "/.", 
     RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], "//", 
    "CollectK\[Psi]"}]}], ";", "KZerilliSchw"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]ZerilliSchw", "=", 
   RowBox[{
    RowBox[{"\[Psi]Zerilli", "/.", 
     RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], "//", 
    "CollectK\[Psi]"}]}], ";", "\[Psi]ZerilliSchw"}]}], "Input",
 CellChangeTimes->{{3.8223996362779255`*^9, 3.8223997090212083`*^9}, {
  3.822399853686529*^9, 3.8223998749172754`*^9}, {3.82240130804207*^9, 
  3.822401437855603*^9}, {3.8224029259823*^9, 3.82240293757983*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"72", " ", 
           SuperscriptBox["M", "3"]}], "+", 
          RowBox[{"36", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", 
           SuperscriptBox["M", "2"], " ", "r"}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], "2"], " ", "M", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"L", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "L"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["r", "3"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "M"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"]}], 
       ")"}]}], "+", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
   RowBox[{"Kh", "[", 
    RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", "M"}], "-", 
          RowBox[{"2", " ", "r"}]}], ")"}], " ", 
        RowBox[{"t1", "[", 
         RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "r"}], " ", 
           RowBox[{"T2", "[", 
            RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"Tg", "[", 
            RowBox[{"R", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
    ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"\[Chi]", "[", 
    RowBox[{"R", "[", "r", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "L", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "L", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["L", "2"]}], "+", 
         SuperscriptBox["L", "3"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["F", "\[Prime]",
         MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
      RowBox[{"r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], 
       " ", 
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{
        SuperscriptBox["F", "\[Prime]",
         MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "L", "+", 
            SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"24", " ", 
           SuperscriptBox["M", "2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", "M", " ", "r"}], "+", 
          RowBox[{"L", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "-", "L", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["L", "2"]}], "+", 
             SuperscriptBox["L", "3"]}], ")"}], " ", 
           SuperscriptBox["r", "2"]}]}], ")"}], " ", 
        RowBox[{"t0", "[", 
         RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"T1", "[", 
            RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["t0", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["T1", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"R", "[", "r", "]"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "M"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "L", "+", 
           SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
     "\[Omega]", " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}], ")"}]}], "-", 
  FractionBox[
   RowBox[{"8", " ", "M", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "-", 
      RowBox[{"3", " ", "r"}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"R", "[", "r", "]"}], "]"}]}], 
   RowBox[{"r", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
  RowBox[{
   SuperscriptBox["Kh", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{"R", "[", "r", "]"}], "]"}], "+", 
  FractionBox[
   RowBox[{"2", " ", "r", " ", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", 
     RowBox[{"R", "[", "r", "]"}], "]"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "L", "+", 
         SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.8223997094264927`*^9, 3.822399876369238*^9, 3.822401136920804*^9, {
   3.8224014044478626`*^9, 3.822401438542902*^9}, 3.8224029396241493`*^9, 
   3.822458568982798*^9, 3.822473746000331*^9, 3.8224740583329062`*^9, 
   3.822547469941002*^9, 3.822905997611551*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"T0", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
     RowBox[{"s", " ", 
      RowBox[{"T2", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", "s", " ", 
      RowBox[{"Tg", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["L", "2"], " ", "s", " ", 
      RowBox[{"Tg", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
     RowBox[{"2", " ", "s", " ", 
      RowBox[{"Tk", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}], "-", 
     RowBox[{"q", " ", 
      RowBox[{"\[Delta]m", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"L", "+", 
            SuperscriptBox["L", "2"], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
      SuperscriptBox["r", "4"]], "+", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
   RowBox[{"\[Chi]", "[", 
    RowBox[{"R", "[", "r", "]"}], "]"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", 
   RowBox[{"R", "[", "r", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.8223997094264927`*^9, 3.822399876369238*^9, 3.822401136920804*^9, {
   3.8224014044478626`*^9, 3.822401438542902*^9}, 3.8224029396241493`*^9, 
   3.822458568982798*^9, 3.822473746000331*^9, 3.8224740583329062`*^9, 
   3.822547469941002*^9, 3.8229059976199074`*^9}]
}, Open  ]],

Cell[TextData[{
 "The coefficients ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]]],
 "s are the components of the CDM\[CloseCurlyQuote]s SET. The decomposition \
is as follows..."
}], "Text",
 CellChangeTimes->{{3.822399886570114*^9, 3.822399915797482*^9}, {
  3.822401500666936*^9, 3.8224015082737093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"NoBras", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"t", "[", "]"}], "\[Rule]", "t"}], ",", 
      RowBox[{
       RowBox[{"r", "[", "]"}], "\[Rule]", "r"}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "]"}], "\[Rule]", "\[Theta]"}], ",", 
      RowBox[{
       RowBox[{"\[Alpha]", "[", "]"}], "\[Rule]", "\[Alpha]"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(bc\)], \
\((odd)\)]\)\>\"", "\[Equal]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"TO", "/.", "NoBras"}], "//", "MatrixForm"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"\"\<\!\(\*SuperscriptBox[SubscriptBox[\(T\), \(bc\)], \((even)\)]\)\
\>\"", "\[Equal]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"TE", "/.", "NoBras"}], "//", "MatrixForm"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.8223999176407976`*^9, 3.8223999769321136`*^9}, {
  3.822401215106909*^9, 3.8224012607708063`*^9}}],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(bc\\)], \
\\((odd)\\)]\\)\"\>", "\[Equal]", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"0", "0", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt0", "[", "r", "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt0", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}]},
      {"0", "0", 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt1", "[", "r", "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt1", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}]},
      {
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt0", "[", "r", "]"}]}], 
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt1", "[", "r", "]"}]}], 
       RowBox[{
        RowBox[{"tt2", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["PL", "\[Prime]",
             MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], ")"}]}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"tt2", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
              "-", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]]}], " ", 
           SuperscriptBox["m", "2"], " ", 
           RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["PL", "\[Prime]",
             MultilineFunction->None], "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "L"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "L"}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["m", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
              RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["PL", "\[Prime]",
                MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], 
            ")"}]}]}], ")"}]}]},
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt0", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"tt1", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}], 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"tt2", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
              "-", 
              RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]]}], " ", 
           SuperscriptBox["m", "2"], " ", 
           RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["PL", "\[Prime]",
             MultilineFunction->None], "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "L"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "L"}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["m", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
              RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["PL", "\[Prime]",
                MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"tt2", "[", "r", "]"}]}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["PL", "\[Prime]",
             MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{{3.822399921280565*^9, 3.8223999263937964`*^9}, {
   3.822399972314003*^9, 3.8223999803219414`*^9}, 3.822401143731735*^9, 
   3.8224012612541847`*^9, 3.822458574399959*^9, 3.822473746068294*^9, 
   3.822474058398028*^9, 3.822547470189105*^9, 3.8229059978285856`*^9}],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(T\\), \\(bc\\)], \
\\((even)\\)]\\)\"\>", "\[Equal]", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"B", "[", "r", "]"}], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"T0", "[", "r", "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"T1", "[", "r", "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"t0", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"t0", "[", "r", "]"}]}]},
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"T1", "[", "r", "]"}]}], 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
           RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
         RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"T2", "[", "r", "]"}]}], 
        RowBox[{"B", "[", "r", "]"}]], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"t1", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}], 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"t1", "[", "r", "]"}]}]},
      {
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"t0", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
        RowBox[{"t1", "[", "r", "]"}], " ", 
        RowBox[{
         SuperscriptBox["PL", "\[Prime]",
          MultilineFunction->None], "[", "\[Theta]", "]"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"Tk", "[", "r", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"Tg", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "L"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", "L"}], ")"}]}], "+", 
                RowBox[{
                 SuperscriptBox["m", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Csc", "[", "\[Theta]", "]"}], "2"]}]}], ")"}], " ", 
              RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["PL", "\[Prime]",
                MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], 
            ")"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"Tg", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{
            SuperscriptBox["PL", "\[Prime]",
             MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], ")"}]}]},
      {
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"t0", "[", "r", "]"}]}], 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], "-", 
          RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", "m", 
        " ", 
        RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"t1", "[", "r", "]"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"Tg", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}]}], "-", 
          RowBox[{"\[ImaginaryI]", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           "m", " ", 
           RowBox[{
            SuperscriptBox["PL", "\[Prime]",
             MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
             "-", 
             RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
           RowBox[{"PL", "[", "\[Theta]", "]"}], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
           RowBox[{"Tk", "[", "r", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Tg", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}],
                  "-", 
                 RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]]}], 
              " ", 
              SuperscriptBox["m", "2"], " ", 
              RowBox[{"PL", "[", "\[Theta]", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[ImaginaryI]"}], " ", "m", " ", "\[Alpha]"}], 
                "-", 
                RowBox[{"\[ImaginaryI]", " ", "t", " ", "\[Omega]"}]}]], " ", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["PL", "\[Prime]",
                MultilineFunction->None], "[", "\[Theta]", "]"}]}]}], 
            ")"}]}]}], ")"}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{{3.822399921280565*^9, 3.8223999263937964`*^9}, {
   3.822399972314003*^9, 3.8223999803219414`*^9}, 3.822401143731735*^9, 
   3.8224012612541847`*^9, 3.822458574399959*^9, 3.822473746068294*^9, 
   3.822474058398028*^9, 3.822547470189105*^9, 3.822905997859272*^9}]
}, Open  ]],

Cell[TextData[{
 "Also, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]m", "(", "r", ")"}], TraditionalForm]]],
 " is defined by the decomposition ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Delta]\[Rho]", "=", 
    RowBox[{
     RowBox[{"\[Delta]m", "(", "r", ")"}], 
     SubscriptBox["Y", "lm"]}]}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "lm"], TraditionalForm]]],
 " are spherical harmonics. In principle, by providing the CDM source, or \
rather the ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]]],
 "s and ",
 Cell[BoxData[
  FormBox["\[Delta]m", TraditionalForm]]],
 ", the waveforms ",
 Cell[BoxData[
  FormBox["K", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["\[Psi]", TraditionalForm]]],
 " can be obtained.\n\nFor this notebook, we shall obtain the waveform for \
radially-falling CDM particles so that only the even parity modes will be \
triggered."
}], "Text",
 CellChangeTimes->{{3.8224011518705983`*^9, 3.8224011973470106`*^9}, {
  3.8224016094132633`*^9, 3.8224017824472923`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["II. Rewriting the wave equations",
 FontColor->RGBColor[1, 0.5, 0.5]]], "Subsection",
 CellChangeTimes->{{3.822401809022787*^9, 3.8224018143035192`*^9}}],

Cell[TextData[{
 "We specialize the wave equations to the case of a falling particle.\n\n\
First, we revert the independent variable to the Schwarzschild coordinate ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]]],
 "..."
}], "Text",
 CellChangeTimes->{{3.822401817176983*^9, 3.82240192961576*^9}, {
  3.822457286442279*^9, 3.822457297231464*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"careful", ",", " ", 
    RowBox[{"apply", " ", "reverse", " ", "order"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RTor0", "=", 
     RowBox[{
      RowBox[{"expr_", "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{"expr", "[", "r", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RTor1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"expr_", "'"}], "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"B", "[", "r", "]"}], 
       RowBox[{
        RowBox[{"expr", "'"}], "[", "r", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RTor2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"expr_", "''"}], "[", 
       RowBox[{"R", "[", "r", "]"}], "]"}], "\[RuleDelayed]", 
      RowBox[{
       RowBox[{"B", "[", "r", "]"}], 
       RowBox[{
        SubscriptBox["\[PartialD]", "r"], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"B", "[", "r", "]"}], 
          RowBox[{
           SubscriptBox["\[PartialD]", "r"], 
           RowBox[{"expr", "[", "r", "]"}]}]}], ")"}]}]}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.822401933871256*^9, 3.8224019955799236`*^9}, {
  3.822402090844516*^9, 3.8224020989262686`*^9}, {3.8224021795250273`*^9, 
  3.822402217466156*^9}, {3.822402247629738*^9, 3.8224023761866713`*^9}, {
  3.8224025504866705`*^9, 3.822402557265059*^9}, {3.822402590675901*^9, 
  3.822402598395194*^9}, {3.8224026294289875`*^9, 3.822402699838971*^9}}],

Cell["The wave equations then become...", "Text",
 CellChangeTimes->{{3.8224027683252816`*^9, 3.8224027738821125`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"KZerilliSchwr", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"KZerilliSchw", "/.", "RTor2"}], "/.", "RTor1"}], "/.", 
      "RTor0"}], "/.", 
     RowBox[{"(", 
      RowBox[{"SdS", "/.", 
       RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], ")"}]}], "//", 
    "CollectK\[Psi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]ZerilliSchwr", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]ZerilliSchw", "/.", "RTor2"}], "/.", "RTor1"}], "/.", 
       "RTor0"}], "/.", 
      RowBox[{"(", 
       RowBox[{"SdS", "/.", 
        RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], ")"}]}], "//", 
     "CollectK\[Psi]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "KZerilliSchwr", "\
\[IndentingNewLine]", "\[Psi]ZerilliSchwr"}], "Input",
 CellChangeTimes->{{3.822402792106667*^9, 3.822402882560116*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"72", " ", 
           SuperscriptBox["M", "3"]}], "+", 
          RowBox[{"36", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", 
           SuperscriptBox["M", "2"], " ", "r"}], "+", 
          RowBox[{"6", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], "2"], " ", "M", " ", 
           SuperscriptBox["r", "2"]}], "+", 
          RowBox[{"L", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "L"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], "2"], " ", 
           SuperscriptBox["r", "3"]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["r", "4"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "M"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"]}], 
       ")"}]}], "+", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
   RowBox[{"Kh", "[", "r", "]"}]}], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "M"}], "-", 
         RowBox[{"2", " ", "r"}]}], ")"}], " ", 
       RowBox[{"t1", "[", "r", "]"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "r"}], " ", 
          RowBox[{"T2", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", "M"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "L", "+", 
               SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
          RowBox[{"Tg", "[", "r", "]"}]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "L", "+", 
         SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
  RowBox[{
   RowBox[{"\[Chi]", "[", "r", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "L", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", "L", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["L", "2"]}], "+", 
         SuperscriptBox["L", "3"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
       RowBox[{
        SuperscriptBox["F", "\[Prime]",
         MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
      RowBox[{"r", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], 
       " ", 
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
     FractionBox[
      RowBox[{"2", " ", "r", " ", 
       SuperscriptBox["\[Omega]", "2"], " ", 
       RowBox[{
        SuperscriptBox["F", "\[Prime]",
         MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "L", "+", 
            SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["Kh", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   SuperscriptBox["r", "3"]], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"24", " ", 
           SuperscriptBox["M", "2"]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", "M", " ", "r"}], "+", 
          RowBox[{"L", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "-", "L", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["L", "2"]}], "+", 
             SuperscriptBox["L", "3"]}], ")"}], " ", 
           SuperscriptBox["r", "2"]}]}], ")"}], " ", 
        RowBox[{"t0", "[", "r", "]"}]}], "-", 
       RowBox[{"r", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"4", "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"T1", "[", "r", "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"6", " ", "M"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "L", "+", 
                SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{
               SuperscriptBox["t0", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}], "+", 
             RowBox[{"r", " ", 
              RowBox[{
               SuperscriptBox["T1", "\[Prime]",
                MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "M"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "L", "+", 
           SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
     "\[Omega]", " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"4", " ", "M", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", "+", "L", "+", 
         SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"]}], ")"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["Kh", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "r", "]"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["F", "\[Prime]",
      MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   RowBox[{"r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"6", " ", "M"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "L", "+", 
         SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
    RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.822402883202594*^9, 3.8224029470139685`*^9, {3.8224585811272025`*^9, 
   3.8224585882085676`*^9}, 3.822473746288257*^9, 3.822474058617846*^9, 
   3.82254747368307*^9, 3.822905998048102*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"T0", "[", "r", "]"}]}], "-", 
     RowBox[{"s", " ", 
      RowBox[{"T2", "[", "r", "]"}]}], "+", 
     RowBox[{"L", " ", "s", " ", 
      RowBox[{"Tg", "[", "r", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["L", "2"], " ", "s", " ", 
      RowBox[{"Tg", "[", "r", "]"}]}], "-", 
     RowBox[{"2", " ", "s", " ", 
      RowBox[{"Tk", "[", "r", "]"}]}], "-", 
     RowBox[{"q", " ", 
      RowBox[{"\[Delta]m", "[", "r", "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "M"}], "+", 
         RowBox[{"r", " ", 
          RowBox[{"(", 
           RowBox[{"L", "+", 
            SuperscriptBox["L", "2"], "+", 
            RowBox[{
             SuperscriptBox["r", "2"], " ", 
             SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
      SuperscriptBox["r", "4"]], "+", 
     SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
   RowBox[{"\[Chi]", "[", "r", "]"}]}], "+", 
  FractionBox[
   RowBox[{"2", " ", "M", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}], 
   SuperscriptBox["r", "3"]], "+", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{"2", " ", "M"}], "r"]}], ")"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "r", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.822402883202594*^9, 3.8224029470139685`*^9, {3.8224585811272025`*^9, 
   3.8224585882085676`*^9}, 3.822473746288257*^9, 3.822474058617846*^9, 
   3.82254747368307*^9, 3.8229059980614543`*^9}]
}, Open  ]],

Cell["\<\
Now, for the radially-falling particle, the SET components are given by...\
\>", "Text",
 CellChangeTimes->{{3.8224553861526885`*^9, 3.822455416532156*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T0fp", "=", 
   RowBox[{"T0", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"r", ",", 
      RowBox[{
       FractionBox[
        RowBox[{"\[ScriptM]", " ", "\[CurlyEpsilon]"}], 
        RowBox[{"2", "\[Pi]"}]], 
       FractionBox[
        SuperscriptBox["E", 
         RowBox[{"I", " ", "\[Omega]", " ", 
          RowBox[{"T", "[", "r", "]"}]}]], 
        RowBox[{
         SuperscriptBox["r", "2"], 
         RowBox[{"B", "[", "r", "]"}], 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"B", "[", "r", "]"}], "/", 
             SuperscriptBox["\[CurlyEpsilon]", "2"]}], ")"}]}]]}]], 
       RowBox[{"Conjugate", "[", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"L", ",", "m", ",", 
          FractionBox["\[Pi]", "2"], ",", "0"}], "]"}], "]"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T1fp", "=", 
   RowBox[{"T1", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"r", ",", 
      RowBox[{
       RowBox[{"T0", "[", "r", "]"}], 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"B", "[", "r", "]"}], "/", 
           SuperscriptBox["\[CurlyEpsilon]", "2"]}], ")"}]}]]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2fp", "=", 
   RowBox[{"T2", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"r", ",", 
      RowBox[{
       RowBox[{"T0", "[", "r", "]"}], 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"B", "[", "r", "]"}], "/", 
           SuperscriptBox["\[CurlyEpsilon]", "2"]}], ")"}]}], ")"}]}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tsfp", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"t0", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", "0"}], "]"}]}], ",", 
      RowBox[{"t1", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", "0"}], "]"}]}], ",", 
      RowBox[{"Tk", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", "0"}], "]"}]}], ",", 
      RowBox[{"Tg", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", "0"}], "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]mfp", "=", 
   RowBox[{"\[Delta]m", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{"r", ",", 
      RowBox[{
       FractionBox["\[ScriptM]", 
        RowBox[{"2", "\[Pi]", " ", "\[CurlyEpsilon]"}]], 
       FractionBox[
        SuperscriptBox["E", 
         RowBox[{"I", " ", "\[Omega]", " ", 
          RowBox[{"T", "[", "r", "]"}]}]], 
        RowBox[{
         SuperscriptBox["r", "2"], 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"B", "[", "r", "]"}], "/", 
             SuperscriptBox["\[CurlyEpsilon]", "2"]}], ")"}]}]]}]], 
       RowBox[{"Conjugate", "[", 
        RowBox[{"SphericalHarmonicY", "[", 
         RowBox[{"L", ",", "m", ",", 
          FractionBox["\[Pi]", "2"], ",", "0"}], "]"}], "]"}]}]}], "]"}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.82245545308893*^9, 3.8224554673131638`*^9}, {
  3.8224559291520963`*^9, 3.8224559767042027`*^9}, {3.8224560417277203`*^9, 
  3.822456114628557*^9}, {3.8224561820094147`*^9, 3.8224564251491456`*^9}, {
  3.8224736648540077`*^9, 3.8224736651742935`*^9}}],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is given by the Schwarzschild metric..."
}], "Text",
 CellChangeTimes->{{3.8224564888626037`*^9, 3.8224565416018505`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<\!\(\*
StyleBox[\"B\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"(\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\")\",
FontSlant->\"Italic\"]\)\>\"", "\[Equal]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "r", "]"}], "/.", "SdS"}], "/.", 
    RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.8224565168671074`*^9, 3.82245654650963*^9}}],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*\\nStyleBox[\\\"B\\\",\\nFontSlant->\\\"Italic\\\"]\\)\
\\!\\(\\*\\nStyleBox[\\\"(\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\\nStyleBox[\\\")\
\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"\>", "\[Equal]", 
  RowBox[{"1", "-", 
   FractionBox[
    RowBox[{"2", " ", "M"}], "r"]}]}]], "Output",
 CellChangeTimes->{{3.8224565200567007`*^9, 3.8224565477702947`*^9}, 
   3.8224737463641*^9, 3.8224740586959457`*^9, 3.822905998115733*^9}]
}, Open  ]],

Cell[TextData[{
 "The function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "(", "r", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is given by..."
}], "Text",
 CellChangeTimes->{{3.822456747579497*^9, 3.822456756136219*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TfpInt", "=", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{
          RowBox[{"B", "[", "r", "]"}], 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"B", "[", "r", "]"}], "/", 
              SuperscriptBox["\[CurlyEpsilon]", "2"]}], ")"}]}]]}]]}], "/.", 
       RowBox[{"(", 
        RowBox[{"SdS", "/.", 
         RowBox[{"\[CapitalLambda]", "\[Rule]", "0"}]}], ")"}]}], ",", "r"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Tfp", "=", 
    RowBox[{"T", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{"r", ",", 
       RowBox[{
        RowBox[{"TfpInt", "-", 
         RowBox[{"(", 
          RowBox[{"TfpInt", "/.", 
           RowBox[{"r", "\[Rule]", 
            RowBox[{"2", "M", " ", "z"}]}]}], ")"}]}], "//", "Evaluate"}]}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"T", "[", "r", "]"}], "/.", "Tfp"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", 
       FractionBox["1", "2"]}], ",", 
      RowBox[{"\[CurlyEpsilon]", "\[Rule]", "10"}], ",", 
      RowBox[{"z", "\[Rule]", "10"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"/\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"M\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*
StyleBox[\"T\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"/\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"M\",
FontSlant->\"Italic\"]\)\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Green"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.822456757536722*^9, 3.822456803953837*^9}, {
  3.8224568458391685`*^9, 3.8224569389936*^9}, {3.8224570031636505`*^9, 
  3.822457018670806*^9}, {3.8224571373798237`*^9, 3.8224572208846226`*^9}, {
  3.822458222026165*^9, 3.8224582553777633`*^9}, {3.8225474910328684`*^9, 
  3.8225475304253063`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0, 1, 0], Thickness[0.005], Opacity[1.], 
      LineBox[CompressedData["
1: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

       "]]},
     Annotation[#, "Charting`Private`Tag$922#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\\
*\\nStyleBox[\\\"/\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\\nStyleBox[\\\
\"M\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*\\nStyleBox[\\\"T\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\\
*\\nStyleBox[\\\"/\\\",\\nFontSlant->\\\"Italic\\\"]\\)\\!\\(\\*\\nStyleBox[\\\
\"M\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", TraditionalForm]},
  AxesOrigin->{1.0000001836734693`, 0},
  AxesStyle->Directive[
    RGBColor[1, 0, 0], 15],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    RGBColor[1, 0, 0]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic},
  TicksStyle->Directive[
    RGBColor[1, 0, 0], 15]]], "Output",
 CellChangeTimes->{
  3.8224568060961103`*^9, 3.82245699018085*^9, 3.8224571869805145`*^9, 
   3.822457221419785*^9, 3.82245825838901*^9, 3.8224737470589323`*^9, 
   3.8224740593287396`*^9, {3.8225474929229946`*^9, 3.822547531442439*^9}, 
   3.82290599880331*^9}]
}, Open  ]],

Cell[TextData[{
 "...where ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is the position of the particle (in units of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "M"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ") at ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ".\n\nTo proceed, we identify the homogeneous wave equations..."
}], "Text",
 CellChangeTimes->{{3.8224582787875533`*^9, 3.8224583081106234`*^9}, {
  3.8224584995877075`*^9, 3.822458543976698*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KZerilliHom", "=", 
    RowBox[{"KZerilliSchwr", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T0", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"T1", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"T2", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"t0", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"t1", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"Tk", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"Tg", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Chi]", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]ZerilliHom", "=", 
    RowBox[{"\[Psi]ZerilliSchwr", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"T0", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"T1", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"T2", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"t0", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"t1", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"Tk", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"Tg", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}], ",", 
       RowBox[{"\[Delta]m", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", "0"}], "]"}]}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"KZerilliHom", "\[Equal]", "0"}], "\[IndentingNewLine]", 
 RowBox[{"\[Psi]ZerilliHom", "\[Equal]", "0"}]}], "Input",
 CellChangeTimes->{{3.8224585448815546`*^9, 3.822458557846917*^9}, {
  3.822458609520648*^9, 3.82245871960821*^9}, {3.822469815003174*^9, 
  3.8224698363684444`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"72", " ", 
            SuperscriptBox["M", "3"]}], "+", 
           RowBox[{"36", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", 
            SuperscriptBox["M", "2"], " ", "r"}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "L", "+", 
               SuperscriptBox["L", "2"]}], ")"}], "2"], " ", "M", " ", 
            SuperscriptBox["r", "2"]}], "+", 
           RowBox[{"L", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "L"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "L", "+", 
               SuperscriptBox["L", "2"]}], ")"}], "2"], " ", 
            SuperscriptBox["r", "3"]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r", "4"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"6", " ", "M"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "L", "+", 
               SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"]}],
         ")"}]}], "+", 
      SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
    RowBox[{"Kh", "[", "r", "]"}]}], "+", 
   FractionBox[
    RowBox[{"2", " ", "M", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["Kh", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox["r", "3"]], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], ")"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["Kh", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.8224586520039005`*^9, {3.8224587130082555`*^9, 3.8224587201854815`*^9}, {
   3.8224698179458475`*^9, 3.8224698369832687`*^9}, 3.82247374733191*^9, 
   3.822474059581814*^9, 3.8229059988487244`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "+", 
          RowBox[{"r", " ", 
           RowBox[{"(", 
            RowBox[{"L", "+", 
             SuperscriptBox["L", "2"], "+", 
             RowBox[{
              SuperscriptBox["r", "2"], " ", 
              SuperscriptBox["\[Mu]", "2"]}]}], ")"}]}]}], ")"}]}], 
       SuperscriptBox["r", "4"]], "+", 
      SuperscriptBox["\[Omega]", "2"]}], ")"}], " ", 
    RowBox[{"\[Chi]", "[", "r", "]"}]}], "+", 
   FractionBox[
    RowBox[{"2", " ", "M", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["\[Chi]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    SuperscriptBox["r", "3"]], "+", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       FractionBox[
        RowBox[{"2", " ", "M"}], "r"]}], ")"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "r", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.8224586520039005`*^9, {3.8224587130082555`*^9, 3.8224587201854815`*^9}, {
   3.8224698179458475`*^9, 3.8224698369832687`*^9}, 3.82247374733191*^9, 
   3.822474059581814*^9, 3.8229059988571835`*^9}]
}, Open  ]],

Cell["The source terms can be identified as...", "Text",
 CellChangeTimes->{{3.8224587233953447`*^9, 3.822458730502779*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KZerilliSource", "=", 
    RowBox[{"SZ", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{"r", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "KZerilliSchwr"}], "/.", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"KZerilliHom", "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"Kh", "''"}], "[", "r", "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", "Tsfp"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]ZerilliSource", "=", 
    RowBox[{"S\[Psi]", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{"r", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "\[Psi]ZerilliSchwr"}], "/.", 
         RowBox[{
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"\[Psi]ZerilliHom", "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"\[Chi]", "''"}], "[", "r", "]"}]}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "/.", "Tsfp"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<\!\(\*SubscriptBox[\(S\), \(Z\)]\)(\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\))\>\"", "\[Equal]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"SZ", "[", "r", "]"}], "/.", "KZerilliSource"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{"\"\<\!\(\*SubscriptBox[
StyleBox[\"S\",
FontSlant->\"Italic\"], \"\[Psi]\"]\)(\!\(\*
StyleBox[\"r\",
FontSlant->\"Italic\"]\))\>\"", "\[Equal]", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"S\[Psi]", "[", "r", "]"}], "/.", "\[Psi]ZerilliSource"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.822458747645945*^9, 3.822458776254728*^9}, {
  3.8224588423772106`*^9, 3.822458844052785*^9}, {3.822458887525791*^9, 
  3.8224589929934053`*^9}, {3.822459043717092*^9, 3.822459046134551*^9}, {
  3.8224592335643373`*^9, 3.8224592375264945`*^9}, {3.8229059488792105`*^9, 
  3.822905965080033*^9}}],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\(S\\), \
\\(Z\\)]\\)(\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"]\\))\"\
\>", "\[Equal]", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", "r", " ", 
      RowBox[{"T2", "[", "r", "]"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "M"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "L", "+", 
           SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
      RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}], "-", 
   RowBox[{
    RowBox[{"\[Chi]", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", "L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", "L", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["L", "2"]}], "+", 
          SuperscriptBox["L", "3"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
        RowBox[{
         SuperscriptBox["F", "\[Prime]",
          MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
       RowBox[{"r", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "M"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], 
        " ", 
        RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "+", 
      FractionBox[
       RowBox[{"2", " ", "r", " ", 
        SuperscriptBox["\[Omega]", "2"], " ", 
        RowBox[{
         SuperscriptBox["F", "\[Prime]",
          MultilineFunction->None], "[", "\[CurlyPhi]", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "L", "+", 
             SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
        RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "M", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], " ", "M"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"4", "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
         RowBox[{"T1", "[", "r", "]"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", "r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"6", " ", "M"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "L", "+", 
              SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["T1", "\[Prime]",
           MultilineFunction->None], "[", "r", "]"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"r", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"6", " ", "M"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "L", "+", 
            SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ",
       "\[Omega]", " ", 
      RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}], ")"}]}], "-", 
   FractionBox[
    RowBox[{"4", " ", "M", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"4", "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["F", "\[Prime]",
       MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Chi]", "\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{
     SuperscriptBox["r", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"6", " ", "M"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "L", "+", 
           SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], "2"], " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["F", "\[Prime]",
       MultilineFunction->None], "[", "\[CurlyPhi]", "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Chi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "r", "]"}]}], 
    RowBox[{"r", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"6", " ", "M"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "L", "+", 
          SuperscriptBox["L", "2"]}], ")"}], " ", "r"}]}], ")"}], " ", 
     RowBox[{"F", "[", "\[CurlyPhi]", "]"}]}]]}]}]], "Output",
 CellChangeTimes->{{3.8224587725532937`*^9, 3.822458777141384*^9}, 
   3.8224588447457905`*^9, 3.822458892714759*^9, {3.8224590330236206`*^9, 
   3.8224590480138397`*^9}, 3.8224592039207916`*^9, 3.822459239213472*^9, 
   3.8224737474004235`*^9, 3.8224740596398897`*^9, 3.822905998898446*^9}],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*SubscriptBox[\\n \
StyleBox[\\\"S\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"\[Psi]\\\"]\\)(\\!\\(\\*\\nStyleBox[\\\"r\\\",\\nFontSlant->\\\"Italic\\\"\
]\\))\"\>", "\[Equal]", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"T0", "[", "r", "]"}]}], "-", 
     RowBox[{"s", " ", 
      RowBox[{"T2", "[", "r", "]"}]}], "-", 
     RowBox[{"q", " ", 
      RowBox[{"\[Delta]m", "[", "r", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.8224587725532937`*^9, 3.822458777141384*^9}, 
   3.8224588447457905`*^9, 3.822458892714759*^9, {3.8224590330236206`*^9, 
   3.8224590480138397`*^9}, 3.8224592039207916`*^9, 3.822459239213472*^9, 
   3.8224737474004235`*^9, 3.8224740596398897`*^9, 3.822905998916335*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["III. Asymptotics",
 FontColor->RGBColor[1, 0.5, 0.5]]], "Subsection",
 CellChangeTimes->{{3.822469494981721*^9, 3.822469498162615*^9}}],

Cell["\<\
The stability of the numerical integration requires some asymptotic solutions \
at the event horizon and infinity. This is derived in this section.\
\>", "Text",
 CellChangeTimes->{{3.822469499924994*^9, 3.822469538241829*^9}, 
   3.8224696652003984`*^9, {3.8237512555264664`*^9, 3.8237512587304406`*^9}}],

Cell[CellGroupData[{

Cell["Asymptotic solutions of the Zerilli equation", "Subsubsection",
 CellChangeTimes->{{3.8224696715623426`*^9, 3.8224696820630836`*^9}}],

Cell[TextData[{
 "It is obvious that the asymptotic solution, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Psi]", "~", 
    SuperscriptBox["e", 
     RowBox[{"i", " ", "\[Omega]", " ", 
      SubscriptBox["r", "*"]}]]}], TraditionalForm]]],
 ", will take the form..."
}], "Text",
 CellChangeTimes->{{3.8224697255663586`*^9, 3.822469756043991*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Oh", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Zeh", "[", "r_", "]"}], "=", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"I", " ", "\[Omega]", " ", "r"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", "M"}]}], ")"}], 
     RowBox[{"2", "M", " ", "I", " ", "\[Omega]"}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ScriptCapitalT]", "[", "n", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "-", 
          RowBox[{"2", "M"}]}], ")"}], "n"]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "Oh"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zeqhor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"KZerilliHom", "/.", 
       RowBox[{"Kh", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{"Zeh", "[", "r", "]"}]}], "]"}]}]}], ")"}], 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "\[Omega]", " ", "r"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", "M"}]}], ")"}], 
      RowBox[{
       RowBox[{"-", "2"}], "M", " ", "I", " ", "\[Omega]"}]]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zsseqhor", "=", 
   RowBox[{"Series", "[", 
    RowBox[{"Zeqhor", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"2", "M"}], ",", "Oh"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zeqshor", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{"Zsseqhor", ",", "n"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Oh"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z\[ScriptCapitalT]eh", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[ScriptCapitalT]", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Oh"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z\[ScriptCapitalT]sol", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{"Zeqshor", ",", "Z\[ScriptCapitalT]eh"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8224697859692698`*^9, 3.8224697864151897`*^9}, {
   3.8224698857323227`*^9, 3.822469892768426*^9}, {3.822469985638401*^9, 
   3.8224700526488743`*^9}, 3.822470114781419*^9, {3.8224737199803925`*^9, 
   3.822473720600904*^9}}],

Cell["To prove this is a solution, we can simply put it back...", "Text",
 CellChangeTimes->{{3.822470128800443*^9, 3.8224701440614653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"KZerilliHom", "/.", 
      RowBox[{"Kh", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{"Zeh", "[", "r", "]"}]}], "]"}]}]}], "/.", 
     "Z\[ScriptCapitalT]sol"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"2", "M"}], ",", "Oh"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822470158493385*^9, 3.8224701744016824`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "M"}]}], "]"}], "6"],
   SeriesData[$CellContext`r, 2 $CellContext`M, {}, 6, 6, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8224701859620733`*^9, 3.8224737649184127`*^9, 
  3.8224740699568357`*^9, 3.822906168805408*^9}]
}, Open  ]],

Cell[TextData[{
 "This is also sufficient to describe the wave falling down the hole, ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Psi]", "~", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "i"}], " ", "\[Omega]", " ", "r"}]]}], TraditionalForm]]],
 ", with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Omega]", "\[Rule]", 
    RowBox[{"-", "\[Omega]"}]}], TraditionalForm]]],
 "..."
}], "Text",
 CellChangeTimes->{{3.822470196092019*^9, 3.822470229053076*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"KZerilliHom", "/.", 
      RowBox[{"Kh", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Zeh", "[", "r", "]"}], "/.", 
           RowBox[{"\[Omega]", "\[Rule]", 
            RowBox[{"-", "\[Omega]"}]}]}], ")"}]}], "]"}]}]}], "/.", 
     RowBox[{"(", 
      RowBox[{"Z\[ScriptCapitalT]sol", "/.", 
       RowBox[{"\[Omega]", "\[Rule]", 
        RowBox[{"-", "\[Omega]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"2", "M"}], ",", "Oh"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822470256070196*^9, 3.8224702990690002`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], 
  " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "M"}]}], "]"}], "6"],
   SeriesData[$CellContext`r, 2 $CellContext`M, {}, 6, 6, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{{3.822470289392835*^9, 3.822470301498006*^9}, 
   3.82247377491529*^9, 3.822474078027959*^9, 3.8229061752442265`*^9}]
}, Open  ]],

Cell[TextData[{
 "At infinity, the asymptotic solution takes the form, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[Psi]", "~", 
     SuperscriptBox["e", 
      RowBox[{"i", " ", "\[Omega]", " ", 
       SubscriptBox["r", "*"]}]]}], "/", "r"}], TraditionalForm]]],
 ". We derive the asymptotic coefficients below..."
}], "Text",
 CellChangeTimes->{{3.82247031010701*^9, 3.8224703587801485`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"O\[Infinity]", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z\[Infinity]", "[", "r_", "]"}], "=", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"I", " ", "\[Omega]", " ", "r"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", "M"}]}], ")"}], 
     RowBox[{"2", "M", " ", "I", " ", "\[Omega]"}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ScriptCapitalI]", "[", "n", "]"}], 
       SuperscriptBox["r", "n"]], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "O\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zeqinf", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"KZerilliHom", "/.", 
       RowBox[{"Kh", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{"Z\[Infinity]", "[", "r", "]"}]}], "]"}]}]}], ")"}], 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "\[Omega]", " ", "r"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", "M"}]}], ")"}], 
      RowBox[{
       RowBox[{"-", "2"}], "M", " ", "I", " ", "\[Omega]"}]]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Zsseqinf", "=", 
   RowBox[{"Series", "[", 
    RowBox[{"Zeqinf", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Infinity]", ",", 
       RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Zeqsinf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{"Zsseqinf", ",", "n"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", 
       RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z\[ScriptCapitalI]inf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[ScriptCapitalI]", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "O\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z\[ScriptCapitalI]sol", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{"Zeqsinf", ",", "Z\[ScriptCapitalI]inf"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8224703808398933`*^9, 3.8224704074028697`*^9}, {
  3.8224704467979717`*^9, 3.8224705261429577`*^9}, {3.8224737236499786`*^9, 
  3.8224737237981796`*^9}}],

Cell["To prove this is a solution, we simply plug it back...", "Text",
 CellChangeTimes->{{3.8224705680098953`*^9, 3.822470581783304*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"KZerilliHom", "/.", 
      RowBox[{"Kh", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{"Z\[Infinity]", "[", "r", "]"}]}], "]"}]}]}], "/.", 
     "Z\[ScriptCapitalI]sol"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", 
      RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822470599523698*^9, 3.8224706036135855`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Omega]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     FractionBox["1", "r"], "]"}], "7"],
   SeriesData[$CellContext`r, 
    DirectedInfinity[1], {}, 7, 7, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8224706050544987`*^9, 3.8224737828169923`*^9, 
  3.822474083035802*^9, 3.822906179737923*^9}]
}, Open  ]],

Cell["\<\
The incoming wave can equally be represented by the frequency-reflected \
version of this solution...\
\>", "Text",
 CellChangeTimes->{{3.822470617964172*^9, 3.8224706694161167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"KZerilliHom", "/.", 
      RowBox[{"Kh", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{
          RowBox[{"Z\[Infinity]", "[", "r", "]"}], "/.", 
          RowBox[{"\[Omega]", "\[Rule]", 
           RowBox[{"-", "\[Omega]"}]}]}]}], "]"}]}]}], "/.", 
     RowBox[{"(", 
      RowBox[{"Z\[ScriptCapitalI]sol", "/.", 
       RowBox[{"\[Omega]", "\[Rule]", 
        RowBox[{"-", "\[Omega]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", 
      RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822470662892461*^9, 3.8224706890981855`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", "\[Omega]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], 
  " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     FractionBox["1", "r"], "]"}], "7"],
   SeriesData[$CellContext`r, 
    DirectedInfinity[1], {}, 7, 7, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.822470695609422*^9, 3.822473783717249*^9, 
  3.822474083885468*^9, 3.8229061806037183`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Asymptotic solutions of the ",
 StyleBox["massless",
  FontSlant->"Italic"],
 " scalar wave equation"
}], "Subsubsection",
 CellChangeTimes->{{3.822470727426767*^9, 3.8224707370785894`*^9}, {
  3.8224719561447535`*^9, 3.82247195867837*^9}}],

Cell[TextData[{
 "We can obtain the asymptotic solutions of the ",
 StyleBox["massless",
  FontSlant->"Italic"],
 " scalar wave equation similarly. At the horizon, we obtain..."
}], "Text",
 CellChangeTimes->{{3.8224707388978944`*^9, 3.822470789489852*^9}, {
  3.8224719639653378`*^9, 3.8224719664641685`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]eh", "[", "r_", "]"}], "=", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"I", " ", "\[Omega]", " ", "r"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", "M"}]}], ")"}], 
     RowBox[{"2", "M", " ", "I", " ", "\[Omega]"}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[ScriptT]", "[", "n", "]"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"r", "-", 
          RowBox[{"2", "M"}]}], ")"}], "n"]}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "Oh"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]eqhor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Psi]ZerilliHom", "/.", 
        RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", 
       RowBox[{"\[Chi]", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{"\[Psi]eh", "[", "r", "]"}]}], "]"}]}]}], ")"}], 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "\[Omega]", " ", "r"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", "M"}]}], ")"}], 
      RowBox[{
       RowBox[{"-", "2"}], "M", " ", "I", " ", "\[Omega]"}]]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]sseqhor", "=", 
   RowBox[{"Series", "[", 
    RowBox[{"\[Psi]eqhor", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"2", "M"}], ",", "Oh"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]eqshor", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{"\[Psi]sseqhor", ",", "n"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Oh"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]\[ScriptT]eh", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[ScriptT]", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "Oh"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]\[ScriptT]sol", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{"\[Psi]eqshor", ",", "\[Psi]\[ScriptT]eh"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.822470910261002*^9, 3.8224709139296503`*^9}, {
  3.8224709466687183`*^9, 3.822470980146689*^9}, {3.8224710222955866`*^9, 
  3.8224710635635757`*^9}, {3.822471112478258*^9, 3.822471118246868*^9}, {
  3.822471942770609*^9, 3.8224719453355827`*^9}}],

Cell["This can be checked back into the wave equation...", "Text",
 CellChangeTimes->{{3.822471132170978*^9, 3.822471150202603*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]ZerilliHom", "/.", 
       RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", 
      RowBox[{"\[Chi]", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{"\[Psi]eh", "[", "r", "]"}]}], "]"}]}]}], "/.", 
     "\[Psi]\[ScriptT]sol"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"2", "M"}], ",", "Oh"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822471220230955*^9, 3.8224712294332438`*^9}, {
  3.8224720020393353`*^9, 3.8224720043411016`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "M"}]}], "]"}], "6"],
   SeriesData[$CellContext`r, 2 $CellContext`M, {}, 6, 6, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{
  3.8224712344362373`*^9, {3.8224719988897705`*^9, 3.8224720050893135`*^9}, 
   3.822473791267877*^9, 3.822474089300722*^9, 3.8229061860877495`*^9}]
}, Open  ]],

Cell["This can also represent the falling wave...", "Text",
 CellChangeTimes->{{3.8224712363042736`*^9, 3.822471247512398*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]ZerilliHom", "/.", 
       RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", 
      RowBox[{"\[Chi]", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{
          RowBox[{"\[Psi]eh", "[", "r", "]"}], "/.", 
          RowBox[{"\[Omega]", "\[Rule]", 
           RowBox[{"-", "\[Omega]"}]}]}]}], "]"}]}]}], "/.", 
     RowBox[{"(", 
      RowBox[{"\[Psi]\[ScriptT]sol", "/.", 
       RowBox[{"\[Omega]", "\[Rule]", 
        RowBox[{"-", "\[Omega]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      RowBox[{"2", "M"}], ",", "Oh"}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822471264983598*^9, 3.822471276761403*^9}, 
   3.82247201343635*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], 
  " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     RowBox[{"r", "-", 
      RowBox[{"2", " ", "M"}]}], "]"}], "6"],
   SeriesData[$CellContext`r, 2 $CellContext`M, {}, 6, 6, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.822471280936527*^9, 3.822472015623222*^9, 
  3.8224737992121954`*^9, 3.822474093084319*^9, 3.8229061898444123`*^9}]
}, Open  ]],

Cell["At infinity, the asymptotic solution is given by...", "Text",
 CellChangeTimes->{{3.8224712813261423`*^9, 3.8224712913264065`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]\[Infinity]", "[", "r_", "]"}], "=", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"I", " ", "\[Omega]", " ", "r"}]], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"r", "-", 
       RowBox[{"2", "M"}]}], ")"}], 
     RowBox[{"2", "M", " ", "I", " ", "\[Omega]"}]], 
    RowBox[{"Sum", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ScriptI]", "[", "n", "]"}], 
       SuperscriptBox["r", "n"]], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "0", ",", "O\[Infinity]"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]eqinf", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Psi]ZerilliHom", "/.", 
        RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", 
       RowBox[{"\[Chi]", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{"\[Psi]\[Infinity]", "[", "r", "]"}]}], "]"}]}]}], ")"}], 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "\[Omega]", " ", "r"}]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"r", "-", 
        RowBox[{"2", "M"}]}], ")"}], 
      RowBox[{
       RowBox[{"-", "2"}], "M", " ", "I", " ", "\[Omega]"}]]}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]sseqinf", "=", 
   RowBox[{"Series", "[", 
    RowBox[{"\[Psi]eqinf", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "\[Infinity]", ",", 
       RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}]}], ";", 
  RowBox[{"\[Psi]eqsinf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"SeriesCoefficient", "[", 
       RowBox[{"\[Psi]sseqinf", ",", "n"}], "]"}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2", ",", 
       RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]\[ScriptI]inf", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[ScriptI]", "[", "n", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "O\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]\[ScriptI]sol", "=", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"Solve", "[", 
      RowBox[{"\[Psi]eqsinf", ",", "\[Psi]\[ScriptI]inf"}], "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8224713196041975`*^9, 3.822471430252656*^9}, 
   3.822472020131793*^9}],

Cell["This can be easily checked...", "Text",
 CellChangeTimes->{{3.8224714370575495`*^9, 3.8224714449464016`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]ZerilliHom", "/.", 
       RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", 
      RowBox[{"\[Chi]", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{"\[Psi]\[Infinity]", "[", "r", "]"}]}], "]"}]}]}], "/.", 
     "\[Psi]\[ScriptI]sol"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", 
      RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.822471491891305*^9, 3.8224715091618404`*^9}, 
   3.8224720302060127`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"\[ImaginaryI]", " ", "r", " ", "\[Omega]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{"2", " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     FractionBox["1", "r"], "]"}], "7"],
   SeriesData[$CellContext`r, 
    DirectedInfinity[1], {}, 7, 7, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8224715157762485`*^9, 3.82247173492807*^9, 
  3.8224720310469847`*^9, 3.8224738008681107`*^9, 3.822474094094943*^9, 
  3.822906190610098*^9}]
}, Open  ]],

Cell["\<\
The incoming wave is given by the frequency-reflected version of the above \
solution...\
\>", "Text",
 CellChangeTimes->{{3.8224720395677147`*^9, 3.822472064623*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"\[Psi]ZerilliHom", "/.", 
       RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", 
      RowBox[{"\[Chi]", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{
          RowBox[{"\[Psi]\[Infinity]", "[", "r", "]"}], "/.", 
          RowBox[{"\[Omega]", "\[Rule]", 
           RowBox[{"-", "\[Omega]"}]}]}]}], "]"}]}]}], "/.", 
     RowBox[{"(", 
      RowBox[{"\[Psi]\[ScriptI]sol", "/.", 
       RowBox[{"\[Omega]", "\[Rule]", 
        RowBox[{"-", "\[Omega]"}]}]}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "\[Infinity]", ",", 
      RowBox[{"O\[Infinity]", "+", "1"}]}], "}"}]}], "]"}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.8224720700700707`*^9, 3.822472081529416*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", "r", " ", "\[Omega]"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "M", " ", "\[Omega]"}]], 
  " ", 
  InterpretationBox[
   SuperscriptBox[
    RowBox[{"O", "[", 
     FractionBox["1", "r"], "]"}], "7"],
   SeriesData[$CellContext`r, 
    DirectedInfinity[1], {}, 7, 7, 1],
   Editable->False]}]], "Output",
 CellChangeTimes->{3.8224720830078278`*^9, 3.822473801315524*^9, 
  3.8224740945328207`*^9, 3.8229061909893737`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Saving results", "Subsubsection",
 CellChangeTimes->{{3.8224721200512853`*^9, 3.822472122977193*^9}}],

Cell["\<\
We save the results in this section so it will be possible to proceed with \
the numerical integration directly without going through all of the above \
subtleties. Saving...\
\>", "Text",
 CellChangeTimes->{{3.8224721247208986`*^9, 3.8224721747301297`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<integration_asymptotics.m\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
      "KZerilliSchwr", ",", "\[Psi]ZerilliSchwr", ",", "KZerilliHom", ",", 
       "\[Psi]ZerilliHom", ",", "KZerilliSource", ",", "\[Psi]ZerilliSource", 
       ",", "T0fp", ",", "T1fp", ",", "T2fp", ",", "Tsfp", ",", "\[Delta]mfp",
        ",", "Zeh", ",", "Z\[ScriptCapitalT]sol", ",", "Z\[Infinity]", ",", 
       "Z\[ScriptCapitalI]sol", ",", "\[Psi]eh", ",", "\[Psi]\[ScriptT]sol", 
       ",", "\[Psi]\[Infinity]", ",", "\[Psi]\[ScriptI]sol", ",", "Tfp"}], 
      "}"}]}], "]"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8224721922171707`*^9, 3.8224722282077956`*^9}, {
  3.822472285449038*^9, 3.8224724480203714`*^9}, {3.822472486882269*^9, 
  3.8224724897428064`*^9}, {3.822473103128031*^9, 3.8224731166516504`*^9}, {
  3.822473897579856*^9, 3.822473900239602*^9}, {3.822474017348386*^9, 
  3.8224740294084024`*^9}, {3.822474172704173*^9, 3.822474175124217*^9}, {
  3.822906196071048*^9, 3.8229062077722397`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["IV. Numerical integration",
 FontColor->RGBColor[1, 0.5, 0.5]]], "Subsection",
 CellChangeTimes->{{3.8224724994380302`*^9, 3.822472505317339*^9}}],

Cell["Import equations to skip running Secs. I-III.", "Text",
 CellChangeTimes->{{3.8224725145260005`*^9, 3.8224725384549294`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<integration_asymptotics.m\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.8224725574962893`*^9}],

Cell[CellGroupData[{

Cell["Boundary conditions", "Subsubsection",
 CellChangeTimes->{{3.822472934550647*^9, 3.8224729424499006`*^9}}],

Cell["The boundary conditions for the Zerilli equation are...", "Text",
 CellChangeTimes->{{3.8224726717257385`*^9, 3.8224726800899506`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"transmitted", " ", "down", " ", "the", " ", "hole"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Zbc\[ScriptCapitalT]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Zeh", "[", "r", "]"}], "/.", "Z\[ScriptCapitalT]sol"}], "/.", 
       RowBox[{
        RowBox[{"\[ScriptCapitalT]", "[", "0", "]"}], "\[Rule]", 
        "\[ScriptCapitalT]"}]}], "/.", 
      RowBox[{"\[Omega]", "\[Rule]", 
       RowBox[{"-", "\[Omega]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"incident", " ", "wave", " ", "from", " ", "infinity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Zbc\[ScriptCapitalI]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Z\[Infinity]", "[", "r", "]"}], "/.", 
        "Z\[ScriptCapitalI]sol"}], "/.", 
       RowBox[{
        RowBox[{"\[ScriptCapitalI]", "[", "0", "]"}], "\[Rule]", 
        "\[ScriptCapitalI]"}]}], "/.", 
      RowBox[{"\[Omega]", "\[Rule]", 
       RowBox[{"-", "\[Omega]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"reflected", " ", "back", " ", "to", " ", "infinity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Zbc\[ScriptCapitalR]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Z\[Infinity]", "[", "r", "]"}], "/.", 
       "Z\[ScriptCapitalI]sol"}], "/.", 
      RowBox[{
       RowBox[{"\[ScriptCapitalI]", "[", "0", "]"}], "\[Rule]", 
       "\[ScriptCapitalR]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"superposition", " ", "at", " ", "infinity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Zbcinf", "=", 
     RowBox[{"Zbc\[ScriptCapitalI]", "+", "Zbc\[ScriptCapitalR]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8224727219959545`*^9, 3.8224727486041384`*^9}, {
  3.8224727796776924`*^9, 3.8224727833309064`*^9}}],

Cell["The boundary conditions for the scalar wave equation are...", "Text",
 CellChangeTimes->{{3.8224728969247675`*^9, 3.8224729110528173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"transmitted", " ", "down", " ", "the", " ", "hole"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]bc\[ScriptT]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]eh", "[", "r", "]"}], "/.", "\[Psi]\[ScriptT]sol"}], "/.", 
       RowBox[{
        RowBox[{"\[ScriptT]", "[", "0", "]"}], "\[Rule]", "\[ScriptT]"}]}], "/.", 
      RowBox[{"\[Omega]", "\[Rule]", 
       RowBox[{"-", "\[Omega]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"incident", " ", "wave", " ", "from", " ", "infinity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]bc\[ScriptI]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]\[Infinity]", "[", "r", "]"}], "/.", 
        "\[Psi]\[ScriptI]sol"}], "/.", 
       RowBox[{
        RowBox[{"\[ScriptI]", "[", "0", "]"}], "\[Rule]", "\[ScriptI]"}]}], "/.", 
      RowBox[{"\[Omega]", "\[Rule]", 
       RowBox[{"-", "\[Omega]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"reflected", " ", "back", " ", "to", " ", "infinity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]bc\[ScriptR]", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]\[Infinity]", "[", "r", "]"}], "/.", 
       "\[Psi]\[ScriptI]sol"}], "/.", 
      RowBox[{
       RowBox[{"\[ScriptI]", "[", "0", "]"}], "\[Rule]", "\[ScriptR]"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"superposition", " ", "at", " ", "infinity"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]bcinf", "=", 
     RowBox[{"\[Psi]bc\[ScriptI]", "+", "\[Psi]bc\[ScriptR]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8224729507240334`*^9, 3.82247307569853*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Sources", "Subsubsection",
 CellChangeTimes->{{3.82247314754303*^9, 3.822473152737934*^9}}],

Cell["\<\
We simplify the sources in preparation for the numerical integration. For the \
Zerilli equation, we separate the contributions coming from the CDM and dark \
energy...\
\>", "Text",
 CellChangeTimes->{{3.8224731542667203`*^9, 3.822473180794792*^9}, {
  3.822473370801325*^9, 3.8224733718824997`*^9}, {3.8225494599203587`*^9, 
  3.822549484776426*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ZsourceCDM", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"SZ", "[", "r", "]"}], "/.", "KZerilliSource"}], "/.", 
            RowBox[{"\[Chi]", "\[Rule]", 
             RowBox[{"Function", "[", 
              RowBox[{"r", ",", "0"}], "]"}]}]}], "/.", "T2fp"}], "/.", 
          "T1fp"}], "/.", "T0fp"}], "/.", 
        RowBox[{
         RowBox[{
          RowBox[{"T", "'"}], "[", "r", "]"}], "\[Rule]", 
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{
            RowBox[{"B", "[", "r", "]"}], 
            SqrtBox[
             RowBox[{"1", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"B", "[", "r", "]"}], "/", 
                SuperscriptBox["\[CurlyEpsilon]", "2"]}], ")"}]}]]}]]}]}]}], "/.", 
       RowBox[{"B", "\[Rule]", 
        RowBox[{"Function", "[", 
         RowBox[{"r", ",", 
          RowBox[{"1", "-", 
           FractionBox[
            RowBox[{"2", "M"}], "r"]}]}], "]"}]}]}], "/.", "Tfp"}], "//", 
     "Simplify"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZsourceDE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"SZ", "[", "r", "]"}], "/.", "KZerilliSource"}], "/.", 
      RowBox[{"T1", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", "0"}], "]"}]}]}], "/.", 
     RowBox[{"T2", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{"r", ",", "0"}], "]"}]}]}], "//", "Simplify"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8224731819195256`*^9, 3.82247320361522*^9}, {
   3.822473272000396*^9, 3.8224732744730053`*^9}, {3.8224733203297973`*^9, 
   3.8224733450946703`*^9}, {3.8224733766275873`*^9, 3.822473457735921*^9}, {
   3.8224735194378166`*^9, 3.8224735201827993`*^9}, {3.8224735709284763`*^9, 
   3.8224735811677647`*^9}, 3.8224740815070796`*^9, {3.822474127233083*^9, 
   3.8224741309284945`*^9}, {3.8224741843659315`*^9, 
   3.8224742293040047`*^9}, {3.8224806386627417`*^9, 
   3.8224806513227177`*^9}, {3.8224807478212824`*^9, 3.822480747989673*^9}, {
   3.82254778989382*^9, 3.8225477903876343`*^9}, {3.822548079112438*^9, 
   3.822548082614133*^9}, {3.822549452547155*^9, 3.822549452632721*^9}, {
   3.822549506518755*^9, 3.8225495260190797`*^9}, {3.8225495619753513`*^9, 
   3.822549616122527*^9}, 3.8225497218984733`*^9}],

Cell["For the scalar wave equation...", "Text",
 CellChangeTimes->{{3.822474268754961*^9, 3.8224742736083164`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]source", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"S\[Psi]", "[", "r", "]"}], "/.", "\[Psi]ZerilliSource"}], 
          "/.", "T2fp"}], "/.", "T1fp"}], "/.", "T0fp"}], "/.", 
       "\[Delta]mfp"}], "/.", 
      RowBox[{"B", "\[Rule]", 
       RowBox[{"Function", "[", 
        RowBox[{"r", ",", 
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", "M"}], "r"]}]}], "]"}]}]}], "/.", "Tfp"}], "//", 
    "Simplify"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8224742780538015`*^9, 3.822474314228881*^9}, {
   3.82247437449818*^9, 3.822474403628981*^9}, {3.8224744540325084`*^9, 
   3.8224744766379757`*^9}, {3.8224806640996017`*^9, 3.82248066696248*^9}, 
   3.8224807516189027`*^9, 3.822487654926197*^9}],

Cell["\<\
The integration over these sources will lead to the waveforms.\
\>", "Text",
 CellChangeTimes->{{3.8224746833527913`*^9, 3.8224746976890774`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical integration", "Subsubsection",
 CellChangeTimes->{{3.822474721680518*^9, 3.8224747243515344`*^9}}],

Cell["\<\
Finally, we perform the numerical integration of the coupled scalar-tensor \
wave equations. This is performed below...\
\>", "Text",
 CellChangeTimes->{{3.822474725959113*^9, 3.82247474253424*^9}, {
  3.822475011245117*^9, 3.8224750150929613`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"param", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"M", "\[Rule]", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{"\[ScriptM]", "\[Rule]", "1"}], ",", 
      RowBox[{"q", "\[Rule]", 
       RowBox[{"-", "1"}]}], ",", 
      RowBox[{"s", "\[Rule]", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]]}], ",", 
      RowBox[{"\[CurlyEpsilon]", "\[Rule]", "10"}], ",", 
      RowBox[{"z", "\[Rule]", "10"}], ",", 
      RowBox[{"m", "\[Rule]", "0"}], ",", 
      RowBox[{"L", "\[Rule]", "2"}], ",", 
      RowBox[{
       RowBox[{"F", "[", "\[CurlyPhi]", "]"}], "\[Rule]", 
       RowBox[{"1", "/", "2"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"F", "'"}], "[", "\[CurlyPhi]", "]"}], "\[Rule]", 
       SuperscriptBox["10", 
        RowBox[{"-", "2"}]]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reh", "=", 
    RowBox[{"2", "M", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["10", 
        RowBox[{"-", "8"}]]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ii", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{"1", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Nmax", "=", "100"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{"ii", "<", 
     RowBox[{
      RowBox[{"6", "Nmax"}], "+", "1"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Omega]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "Nmax", " ", "\[CapitalDelta]"}], ")"}], "+", 
       RowBox[{"(", 
        RowBox[{"\[CapitalDelta]", " ", "ii"}], ")"}], "+", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rinf", "=", 
      FractionBox["100", 
       RowBox[{"Abs", "[", "\[Omega]", "]"}]]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"solving", " ", "scalar", " ", "mode", " ", "equation"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Chi]nsol", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]ZerilliHom", "\[Equal]", "0"}], "/.", 
            RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", "param"}], ",", 
          RowBox[{
           RowBox[{"\[Chi]", "[", 
            RowBox[{"(", 
             RowBox[{"reh", "/.", "param"}], ")"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Psi]bc\[ScriptT]", "/.", 
               RowBox[{"\[ScriptT]", "\[Rule]", "1"}]}], "/.", 
              RowBox[{"r", "\[Rule]", "reh"}]}], "/.", "param"}], ")"}]}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Chi]", "'"}], "[", 
            RowBox[{"(", 
             RowBox[{"reh", "/.", "param"}], ")"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[PartialD]", "r"], "\[Psi]bc\[ScriptT]"}], 
                ")"}], "/.", 
               RowBox[{"\[ScriptT]", "\[Rule]", "1"}]}], "/.", 
              RowBox[{"r", "\[Rule]", "reh"}]}], "/.", "param"}], ")"}]}]}], 
         "}"}], ",", "\[Chi]", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"reh", "/.", "param"}], ",", "rinf"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]nsolPart", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"\[Psi]ZerilliHom", "\[Equal]", "\[Psi]source"}], "/.", 
            RowBox[{"\[Mu]", "\[Rule]", "0"}]}], "/.", "param"}], ",", 
          RowBox[{
           RowBox[{"\[Chi]", "[", 
            RowBox[{"(", 
             RowBox[{"reh", "/.", "param"}], ")"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Psi]bc\[ScriptT]", "/.", 
               RowBox[{"\[ScriptT]", "\[Rule]", "1"}]}], "/.", 
              RowBox[{"r", "\[Rule]", "reh"}]}], "/.", "param"}], ")"}]}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Chi]", "'"}], "[", 
            RowBox[{"(", 
             RowBox[{"reh", "/.", "param"}], ")"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[PartialD]", "r"], "\[Psi]bc\[ScriptT]"}], 
                ")"}], "/.", 
               RowBox[{"\[ScriptT]", "\[Rule]", "1"}]}], "/.", 
              RowBox[{"r", "\[Rule]", "reh"}]}], "/.", "param"}], ")"}]}]}], 
         "}"}], ",", "\[Chi]", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"reh", "/.", "param"}], ",", "rinf"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "30"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[Chi]ninf", "=", 
      RowBox[{
       RowBox[{"\[Chi]", "[", "rinf", "]"}], "/.", 
       RowBox[{"\[Chi]nsol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"D\[Chi]ninf", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Chi]", "'"}], "[", "rinf", "]"}], "/.", 
       RowBox[{"\[Chi]nsol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptI]\[ScriptR]sol", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[Chi]ninf", "\[Equal]", "\[Psi]bcinf"}], ",", 
             RowBox[{"D\[Chi]ninf", "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[PartialD]", "r"], "\[Psi]bcinf"}], ")"}]}]}], 
            "}"}], "/.", 
           RowBox[{"r", "\[Rule]", "rinf"}]}], "/.", "param"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[ScriptI]", ",", "\[ScriptR]"}], "}"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"solving", " ", "Zerilli", " ", "equation"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Knsol", "=", 
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"KZerilliHom", "\[Equal]", "0"}], "/.", "param"}], ",", 
          RowBox[{
           RowBox[{"Kh", "[", 
            RowBox[{"(", 
             RowBox[{"reh", "/.", "param"}], ")"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Zbc\[ScriptCapitalT]", "/.", 
               RowBox[{"\[ScriptCapitalT]", "\[Rule]", "1"}]}], "/.", 
              RowBox[{"r", "\[Rule]", "reh"}]}], "/.", "param"}], ")"}]}], 
          ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Kh", "'"}], "[", 
            RowBox[{"(", 
             RowBox[{"reh", "/.", "param"}], ")"}], "]"}], "\[Equal]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["\[PartialD]", "r"], "Zbc\[ScriptCapitalT]"}], 
                ")"}], "/.", 
               RowBox[{"\[ScriptCapitalT]", "\[Rule]", "1"}]}], "/.", 
              RowBox[{"r", "\[Rule]", "reh"}]}], "/.", "param"}], ")"}]}]}], 
         "}"}], ",", "Kh", ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"reh", "/.", "param"}], ",", "rinf"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Kninf", "=", 
      RowBox[{
       RowBox[{"Kh", "[", "rinf", "]"}], "/.", 
       RowBox[{"Knsol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"DKninf", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Kh", "'"}], "[", "rinf", "]"}], "/.", 
       RowBox[{"Knsol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"\[ScriptCapitalI]\[ScriptCapitalR]sol", "=", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Kninf", "\[Equal]", "Zbcinf"}], ",", 
             RowBox[{"DKninf", "\[Equal]", 
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["\[PartialD]", "r"], "Zbcinf"}], ")"}]}]}], 
            "}"}], "/.", 
           RowBox[{"r", "\[Rule]", "rinf"}]}], "/.", "param"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[ScriptCapitalI]", ",", "\[ScriptCapitalR]"}], "}"}]}], 
        "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"scalar", " ", "mode", " ", "output", " ", "\[Psi]", 
       RowBox[{"(", "\[Omega]", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Psi]rinf", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["\[Psi]source", 
             RowBox[{"1", "-", 
              RowBox[{"(", 
               RowBox[{"2", 
                RowBox[{"M", "/", "r"}]}], ")"}]}]], 
            RowBox[{"\[Chi]", "[", "r", "]"}]}], "/.", "param"}], "/.", 
          "\[Chi]nsol"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"(", 
            RowBox[{"reh", "/.", "param"}], ")"}], ",", "rinf"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "10"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "30"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"A\[Psi]rinf", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["I", 
          RowBox[{"2", " ", "\[Omega]", " ", "\[ScriptI]"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"rinf", "-", 
            RowBox[{"2", "M"}]}], ")"}], 
          RowBox[{"2", "I", " ", "M", " ", "\[Omega]"}]], 
         SuperscriptBox["E", 
          RowBox[{"I", " ", "\[Omega]", " ", "rinf"}]]}], "/.", "param"}], "/.",
        "\[ScriptI]\[ScriptR]sol"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"tensor", " ", "mode", " ", "output", " ", 
       StyleBox[
        OverscriptBox[
         StyleBox["K",
          FontSlant->"Italic"], "^"],
        FontSlant->"Italic"], 
       RowBox[{"(", "\[Omega]", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"KrinfCDM", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox["ZsourceCDM", 
             RowBox[{"1", "-", 
              RowBox[{"(", 
               RowBox[{"2", 
                RowBox[{"M", "/", "r"}]}], ")"}]}]], 
            RowBox[{"Kh", "[", "r", "]"}]}], "/.", "param"}], "/.", "Knsol"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"(", 
            RowBox[{"reh", "/.", "param"}], ")"}], ",", "rinf"}], "}"}], ",", 
         RowBox[{"WorkingPrecision", "\[Rule]", "10"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "30"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KrinfDEPart", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["ZsourceDE", 
              RowBox[{"1", "-", 
               RowBox[{"(", 
                RowBox[{"2", 
                 RowBox[{"M", "/", "r"}]}], ")"}]}]], 
             RowBox[{"Kh", "[", "r", "]"}]}], "/.", "param"}], "/.", 
           RowBox[{"\[Chi]nsolPart", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/.", "Knsol"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"(", 
            RowBox[{"reh", "/.", "param"}], ")"}], ",", "rinf"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<DoubleExponential\>\""}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "5"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "100"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"KrinfDEHom", "=", 
      RowBox[{
       RowBox[{"NIntegrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             FractionBox["ZsourceDE", 
              RowBox[{"1", "-", 
               RowBox[{"(", 
                RowBox[{"2", 
                 RowBox[{"M", "/", "r"}]}], ")"}]}]], 
             RowBox[{"Kh", "[", "r", "]"}]}], "/.", "param"}], "/.", 
           RowBox[{"\[Chi]nsol", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "/.", "Knsol"}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"(", 
            RowBox[{"reh", "/.", "param"}], ")"}], ",", "rinf"}], "}"}], ",", 
         RowBox[{"Method", "\[Rule]", "\"\<DoubleExponential\>\""}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", "5"}], ",", 
         RowBox[{"MaxRecursion", "\[Rule]", "100"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AKrinf", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox["I", 
          RowBox[{"2", " ", "\[Omega]", " ", "\[ScriptCapitalI]"}]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"rinf", "-", 
            RowBox[{"2", "M"}]}], ")"}], 
          RowBox[{"2", "I", " ", "M", " ", "\[Omega]"}]], 
         SuperscriptBox["E", 
          RowBox[{"I", " ", "\[Omega]", " ", "rinf"}]]}], "/.", "param"}], "/.",
        "\[ScriptCapitalI]\[ScriptCapitalR]sol"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"for", " ", "tracking"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.1", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<10 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.2", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<20 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.3", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<30 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.4", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<40 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.5", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<50 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.6", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<60 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.7", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<70 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.8", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<80 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ii", "\[Equal]", 
        RowBox[{"Round", "[", 
         RowBox[{"0.9", "*", "6", "Nmax"}], "]"}]}], ",", 
       RowBox[{"Print", "[", "\"\<90 percent\>\"", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"save", " ", "as", " ", "\"\<Intl\!\(\*
StyleBox[\"x\",
FontSlant->\"Italic\"]\)q\!\(\*
StyleBox[\"y\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"\\\"\<\>\",
FontSlant->\"Italic\"]\)\>", 
        StyleBox[" ",
         FontSlant->"Italic"], "for", " ", 
        StyleBox["l",
         FontSlant->"Italic"]}], " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["x",
           FontSlant->"Italic"], " ", "&"}], " ", 
         StyleBox["q",
          FontSlant->"Italic"]}], " ", "=", " ", 
        StyleBox["y",
         FontSlant->"Italic"]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Intl2q1neg", "[", "ii", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"\[Omega]", ",", 
        RowBox[{"A\[Psi]rinf", " ", "\[Psi]rinf"}], ",", 
        RowBox[{"AKrinf", " ", "KrinfCDM"}], ",", 
        RowBox[{"AKrinf", " ", 
         RowBox[{"(", 
          RowBox[{"KrinfDEPart", "-", "KrinfDEHom"}], ")"}]}]}], "}"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"ii", "++"}]}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.822478672127452*^9, 3.822478686532422*^9}, {
   3.8224787275773344`*^9, 3.822478820108259*^9}, {3.82247893734119*^9, 
   3.822478945632375*^9}, {3.8224790014421873`*^9, 3.8224790035823493`*^9}, {
   3.8224791219045687`*^9, 3.8224791278692036`*^9}, {3.8224800108606634`*^9, 
   3.8224800148035135`*^9}, {3.8224801785069466`*^9, 
   3.8224801788192577`*^9}, {3.822480231118861*^9, 3.822480231618919*^9}, {
   3.8224808109209423`*^9, 3.8224808131930785`*^9}, 3.822481656664118*^9, {
   3.822486573781726*^9, 3.822486580469389*^9}, {3.822486641096154*^9, 
   3.8224866709497423`*^9}, {3.8224868199240026`*^9, 
   3.8224868215507402`*^9}, {3.822487245966448*^9, 3.822487247418359*^9}, {
   3.822488152294574*^9, 3.822488155160162*^9}, {3.8224882747045364`*^9, 
   3.822488284785163*^9}, 3.822488351540728*^9, {3.8224884516682467`*^9, 
   3.8224884548835764`*^9}, {3.8224885251110334`*^9, 
   3.8224885252317343`*^9}, {3.8224886903801756`*^9, 3.822488700916891*^9}, {
   3.8224887530859404`*^9, 3.8224887591216683`*^9}, {3.822488806617196*^9, 
   3.822488806781542*^9}, {3.822488896957556*^9, 3.82248891071937*^9}, {
   3.822488959033231*^9, 3.8224889592755632`*^9}, {3.8224890472677107`*^9, 
   3.822489047388445*^9}, {3.8224891044045944`*^9, 3.8224891103395805`*^9}, {
   3.82248917792517*^9, 3.8224892601512446`*^9}, {3.8224895716612654`*^9, 
   3.8224895940269833`*^9}, {3.8224896251110687`*^9, 3.822489625244722*^9}, {
   3.8224897608177357`*^9, 3.822489761034746*^9}, {3.8224898704501047`*^9, 
   3.8224898708867035`*^9}, {3.8224899046601377`*^9, 3.822489905704264*^9}, {
   3.82248998686617*^9, 3.8224899870040603`*^9}, {3.8225291622087774`*^9, 
   3.8225291624305305`*^9}, {3.822529201004955*^9, 3.8225292418086033`*^9}, {
   3.822529518754011*^9, 3.822529547020852*^9}, {3.822529597393673*^9, 
   3.822529600814128*^9}, {3.8225296629150553`*^9, 3.8225296653311586`*^9}, {
   3.822529799951187*^9, 3.822529801578573*^9}, {3.8225302684457026`*^9, 
   3.8225302688971*^9}, {3.8225303358360977`*^9, 3.822530336534989*^9}, {
   3.8225303673295603`*^9, 3.8225303683813963`*^9}, 3.822530826499745*^9, {
   3.8225309346513677`*^9, 3.82253094008072*^9}, {3.8225311224615583`*^9, 
   3.8225311295625954`*^9}, {3.8225311943694506`*^9, 
   3.8225312213407545`*^9}, {3.822531393393872*^9, 3.8225314105770783`*^9}, {
   3.8225315704570417`*^9, 3.8225315706306286`*^9}, {3.8225316443150587`*^9, 
   3.822531646167053*^9}, {3.8225319837318497`*^9, 3.82253202072665*^9}, {
   3.8225320612808647`*^9, 3.822532061501725*^9}, {3.822532113441181*^9, 
   3.8225321136727962`*^9}, {3.8225323024802485`*^9, 
   3.8225323063109975`*^9}, {3.8225324834207797`*^9, 
   3.8225324862056828`*^9}, {3.8225496594780054`*^9, 3.822549664066516*^9}, {
   3.8225498304101505`*^9, 3.822549834314109*^9}, {3.8225498833764033`*^9, 
   3.8225499373586507`*^9}, {3.8225499682826624`*^9, 3.822549968731636*^9}, {
   3.822550184102647*^9, 3.8225501916968384`*^9}, {3.8225502317625575`*^9, 
   3.8225502350952945`*^9}, 3.8225507299281716`*^9, {3.822550809019201*^9, 
   3.822550809244136*^9}, {3.822551572439986*^9, 3.82255157450126*^9}, {
   3.822551688522313*^9, 3.822551690220231*^9}, {3.8225518156333485`*^9, 
   3.822551819304902*^9}, {3.8225522697555923`*^9, 3.8225522705140877`*^9}, {
   3.822553177061703*^9, 3.822553180330049*^9}, {3.82255336143626*^9, 
   3.822553364196912*^9}, {3.822553750062608*^9, 3.822553770514784*^9}, {
   3.8225538113279505`*^9, 3.822553845779402*^9}, {3.822558630018533*^9, 
   3.822558630550253*^9}, {3.822560562971224*^9, 3.822560563306134*^9}, {
   3.8225630226203375`*^9, 3.8225630379533854`*^9}, {3.8225743777744784`*^9, 
   3.822574394702498*^9}, {3.822574448336377*^9, 3.8225744526639347`*^9}, {
   3.8225745044744577`*^9, 3.8225745049559937`*^9}, {3.8225749010241504`*^9, 
   3.8225749050466037`*^9}, {3.8225760965477304`*^9, 
   3.8225761884514904`*^9}, {3.822576603113224*^9, 3.822576604656821*^9}, {
   3.82257705280689*^9, 3.822577052993084*^9}, {3.822584839960116*^9, 
   3.822584840335026*^9}, {3.8225849348095512`*^9, 3.8225849376788836`*^9}, {
   3.8226104407827344`*^9, 3.822610441108305*^9}, {3.8226149334604445`*^9, 
   3.822614933763305*^9}, {3.8226185384126806`*^9, 3.822618563354351*^9}, {
   3.822618761394975*^9, 3.8226187807727437`*^9}, {3.8226189405779967`*^9, 
   3.8226189410879145`*^9}, 3.822618987516124*^9, {3.8226206880722666`*^9, 
   3.822620688288064*^9}, {3.822623335780881*^9, 3.82262333648575*^9}, {
   3.8226261759538336`*^9, 3.822626176281879*^9}, {3.8229062888883104`*^9, 
   3.8229062916538725`*^9}, 3.822906441156728*^9, {3.8229064748419495`*^9, 
   3.8229065143466654`*^9}, {3.8229065967335553`*^9, 3.822906645074273*^9}, {
   3.822907211269512*^9, 3.8229072117040405`*^9}, {3.8229074167582483`*^9, 
   3.822907418141082*^9}, {3.82290748569125*^9, 3.82290748612705*^9}, {
   3.822919936983718*^9, 3.822919937398587*^9}, {3.8229471421148653`*^9, 
   3.822947164344042*^9}, {3.8229479821364737`*^9, 3.822947984754367*^9}, {
   3.822948322943184*^9, 3.822948323131832*^9}, {3.8229514328725276`*^9, 
   3.8229514330080414`*^9}, {3.8229514885741353`*^9, 
   3.8229514894064264`*^9}, {3.8229545904535284`*^9, 3.822954598918415*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"10 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.8229549636963186`*^9}],

Cell[BoxData["\<\"20 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.822955284031458*^9}],

Cell[BoxData["\<\"30 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.822955584007274*^9}],

Cell[BoxData["\<\"40 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.82295586941521*^9}],

Cell[BoxData["\<\"50 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.8229562497691665`*^9}],

Cell[BoxData["\<\"60 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.822956609907694*^9}],

Cell[BoxData["\<\"70 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.8229569062579784`*^9}],

Cell[BoxData["\<\"80 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.8229572138663073`*^9}],

Cell[BoxData["\<\"90 percent\"\>"], "Print",
 CellChangeTimes->{3.8229207285832276`*^9, 3.822944601233694*^9, 
  3.8229487209822755`*^9, 3.8229518171178055`*^9, 3.8229575527250443`*^9}]
}, Open  ]]
}, Open  ]],

Cell["Save results...", "Text",
 CellChangeTimes->{{3.8224788386060867`*^9, 3.822478841464899*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"DumpSave", "[", 
    RowBox[{"\"\<int_result_l2_q1neg.m\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"Intl2q1neg", ",", "Nmax", ",", "param"}], "}"}]}], "]"}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdy2kow3EYwPGZHLkmpA1to9GUOQspaZI3vDGr/WNlDZv7WFZyX2+kKHMU
MfGCEGmzyNJQRI4sNVL/ooWYlbEXlvA8vxffPq++scpmSTWTwWBwITSv4M1y
3uEQ8ycfD1HVkbXtAvSzxGjRbFsG6wW8o7uJskkuG5Uyi3io03qVhJb6porQ
gXV+6gdY+K0inqrH813gZZmTuJB5s/UJ1shsRKp1RvEF8i7ZSrSfGlGj9lVJ
Leq88gyg1I5sED3QbPS7wVXhwyCqmuWMMzodYnNJlg71X7aHB4PHhz4RaPLm
hJAFyodcxJu6qHrUW6BrQoPP+uhQ8Fb6S3zbD/tDFw0yIifFKggHgxptRFOu
NhFVVBmJXTp3KSqf4kjR9MSEtQiQXtIQi3eHDag7qdyIWr0eQiLB69s0Frr3
7nmeByuo6Ff0Z5pm6kGf4Whv9OmkoceA3+JcL2qudAZsg4KVyEC0SvQ7agJb
7uPHUIk6jpvT7RD36NuJ/6p99vY=
  "]],

Cell[TextData[{
 "This section should be done for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "=", "0"}], ",", "1", ",", " ", 
    RowBox[{"and", " ", "-", "1"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " with results saved as ",
 StyleBox["int_result _l2 _q0.m",
  FontSlant->"Italic"],
 ", ",
 StyleBox["int_result _l2 _q1pls.m",
  FontSlant->"Italic"],
 ", and ",
 StyleBox["int_result _l2 _q1neg.m",
  FontSlant->"Italic"],
 ", respectively."
}], "Text",
 CellChangeTimes->{{3.8237515509475107`*^9, 3.823751613824277*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Analysis for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "=", "2"}], TraditionalForm]]],
 ": frequency- and time-domain waveforms"
}], "Subsubsection",
 CellChangeTimes->{{3.822556727327751*^9, 3.8225567435632734`*^9}, {
   3.82255859143686*^9, 3.822558600299612*^9}, 3.8226258388969364`*^9, {
   3.8227946469134665`*^9, 3.8227946519904575`*^9}}],

Cell[TextData[{
 "We start with the waveforms for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"l", "=", "2"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". Importing the results..."
}], "Text",
 CellChangeTimes->{{3.822793622054553*^9, 3.8227936255328145`*^9}, 
   3.822793666679394*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<int_result_l2_q0.m\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<int_result_l2_q1pls.m\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<int_result_l2_q1neg.m\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8227936043750725`*^9, 3.822793605916645*^9}, {
  3.8227936499094296`*^9, 3.822793656953907*^9}}],

Cell["\<\
The power spectrum from the different contributions can be obtained using the \
following line...\
\>", "Text",
 CellChangeTimes->{{3.8225568334518585`*^9, 3.8225568655119076`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"IntTabl2q0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Intl2q0", "[", "ii", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"0", "Nmax"}], ",", 
       RowBox[{"6", "Nmax"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntTabl2q1pls", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Intl2q1pls", "[", "ii", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"0", "Nmax"}], ",", 
       RowBox[{"6", "Nmax"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IntTabl2q1neg", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Intl2q1neg", "[", "ii", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ii", ",", 
        RowBox[{"0", "Nmax"}], ",", 
        RowBox[{"6", "Nmax"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"scalar", " ", "power", " ", "spectrum"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PS\[Psi]l2q0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IntTabl2q0", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"IntTabl2q0", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"IntTabl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "2"]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "IntTabl2q0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PS\[Psi]l2q1pls", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IntTabl2q1pls", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"IntTabl2q1pls", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{"IntTabl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "2"]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "IntTabl2q1pls", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PS\[Psi]l2q1neg", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"IntTabl2q1neg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"IntTabl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{"IntTabl2q1neg", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "2"]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "IntTabl2q1neg", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"tensor", " ", "power", " ", "spectrum"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PShl2q0", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IntTabl2q0", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"IntTabl2q0", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"IntTabl2q0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
           RowBox[{"IntTabl2q0", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "]"}], "2"]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "IntTabl2q0", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PShl2q1pls", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IntTabl2q1pls", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"IntTabl2q1pls", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"], 
        SuperscriptBox[
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"IntTabl2q1pls", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
           RowBox[{"IntTabl2q1pls", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "]"}], "2"]}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "IntTabl2q1pls", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PShl2q1neg", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"IntTabl2q1neg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"IntTabl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "2"], 
         SuperscriptBox[
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"IntTabl2q1neg", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
            RowBox[{"IntTabl2q1neg", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "4"}], "]"}], "]"}]}], "]"}], "2"]}]}], "}"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "IntTabl2q1neg", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"PS\[Psi]l2q0", ",", "PS\[Psi]l2q1pls", ",", "PS\[Psi]l2q1neg"}],
      "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "Automatic"}], "}"}]}], 
    ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<\!\(\*
StyleBox[\"P\",
FontSlant->\"Italic\"]\)(\[Omega])\>\""}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[FilledUpTriangle]", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[FilledCircle]", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[FilledSquare]", ",", "5"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Pink", ",", "Orange", ",", "Green"}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"PShl2q0", ",", "PShl2q1pls", ",", "PShl2q1neg"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.01"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<\!\(\*
StyleBox[\"P\",
FontSlant->\"Italic\"]\)(\[Omega])\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[FilledUpTriangle]", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FilledCircle]", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[FilledSquare]", ",", "5"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Pink", ",", "Orange", ",", "Green"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQrdPb+OBM1RvHBTxtYNrN9HDpWSCtss64DESbPMpe
ewFIL773Akzv3bdrE4humLpiF4junTzvNojO614Hpm0WK7BeBNI+cRvA9CWm
LxVPgTTbAoVKEH0vO/LMMyAd8DMHTO/YanIbRP95mgKmT3//VfIBpI9fqhlE
6/QpdIJoleIrE0E03yWGqX+A9OGubWDaOMn7I081UF3hTDCtVXegLg1I81nO
bwHREc3t3SD6hmj8DBCdNGXvAhB9QnL3OhCt9FR2O4jW0ti1G0QHfPt3CERf
ClY+CqIX1EWfAdF+NoHnQHTjnNJLIHrdif1XQLRA6t4HIPpUgtMzED0j9wNL
OpDO6JzIBqIB2H/D6Q==
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\[FilledUpTriangle]", FontSize -> 5, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1: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
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\[FilledCircle]", FontSize -> 5, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1: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
IejZ+uN9lcT/AVvVU8k=
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\[FilledSquare]", FontSize -> 5, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1: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
AzYOeQw=
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2, 2}, {0, 0.00006110796494650341}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"P\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\
\[Omega])\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {0, 0.00006110796494650341}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{0, 0}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\[FilledUpTriangle]", FontSize -> 5, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\[FilledCircle]", FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\[FilledSquare]", FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\[FilledUpTriangle]", ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\[FilledCircle]", ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\[FilledSquare]", ",", "5"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8224870019108543`*^9, 3.822487441402478*^9, 3.8224884076696043`*^9, 
   3.822488493890665*^9, 3.8224887871830435`*^9, 3.822488842736014*^9, 
   3.8224899348792906`*^9, 3.8224900815189686`*^9, 3.8225293426177936`*^9, {
   3.822529484700488*^9, 3.822529495227167*^9}, 3.822529578242299*^9, 
   3.822529643617476*^9, 3.822529874551775*^9, 3.8225303210241365`*^9, 
   3.8225309207728686`*^9, 3.8225309918471546`*^9, 3.8225311841083083`*^9, 
   3.822531486263235*^9, 3.8225316271321173`*^9, 3.822531709255766*^9, {
   3.822532190253495*^9, 3.822532196665177*^9}, 3.8225324153426046`*^9, 
   3.822534516138668*^9, 3.8225532976008887`*^9, 3.822555712520625*^9, 
   3.8225600823965163`*^9, 3.822562347229545*^9, 3.8225764341133957`*^9, 
   3.822576775244776*^9, 3.8225768145555925`*^9, 3.8225772183775525`*^9, {
   3.822610289873629*^9, 3.8226103174623175`*^9}, 3.8226148470441914`*^9, 
   3.822618367112323*^9, 3.8226232074653206`*^9, 3.8226260824642773`*^9, 
   3.8226289940275135`*^9, 3.822794302541662*^9, 3.822794356556302*^9, {
   3.822794518238614*^9, 3.8227945476511216`*^9}, 3.822794806059867*^9, 
   3.823058377443986*^9, 3.8230793001057587`*^9, 3.8230832393652143`*^9, 
   3.8230851966528444`*^9, 3.8230972486868663`*^9, 3.8230986283267546`*^9, 
   3.823098902651022*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0.5], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\[FilledUpTriangle]", FontSize -> 5, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1: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
hSceYnq0c/aLe4k88RDTky90en2L5YmHmNZ4NMKhVwxPPOTPyH+G32ueeIjp
kb2/5vo94omHhN7oeoAxvsMTDwndZLxx2vGbPPGQ0DPL1zwCb6WHhE55PJzb
fFbpIaFDa5avtj2s9JDQm62ZD6fslB4S2i9fullvp9JDQp/bl96+c6PSQ0Kb
1uS8u7Ja6SGhLzr8Kqw0UnpI6KG/o2KfLVV6SOjXToHi6bOUHhLadfoC7bYJ
Sg8pzdm1j0ger/SQ0l6O6Wt76Cg9pHT0bMm3AwOUHlL61Z6u/KL+Sg8pvZLR
mVvcU+khpU1088LixEoPKT3/5t1J1h0c8ZDS00t3qYuaOOIhpe9F9b5BVXDE
Q0ofLRDERJRxxENK6ztpnL5dpFwfUjqntTToeb5yfajQ991LrWKyletDhe40
uVQVmK5cH/L2TWqxST854qFCr5lnedQ2mSMeKvTSsxuPGH7liIcKXeFtuzbj
A0c8VOh7xfuM18nXH/ZQofXWhHyQveOIh7z/r8yjq55zxEOFnmo36fSktxzx
UKFfnRnU6vyCIx4q9Pra2W7US454qNDfd00fs+MBRzxU6cqod6tXBnPEQ5VO
N820ff2EIx6q9CvbW6GpARzxUKVNMiK8n8v7Yw9VOvKBj1/dFY54qNLBdmNe
37vKEQ/57x9KMyz2UXqo0uJTOTuXXFB6qNIVX43uTvVSeqjSQ+lWPYm30kOV
/myu/SnSXemhSrdNK3IXnFB69KAnzU6Zli/PX/8Deea1iA==
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\[FilledCircle]", FontSize -> 5, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1: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
83xDN/e9J6P+BzkomjE=
         "]]}, {
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         AbsolutePointSize[6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\[FilledSquare]", FontSize -> 5, StripOnInput -> False],
             TraditionalForm]], {0., 0.}], CompressedData["
1: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
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     AxesOrigin -> {0, 0}, PlotRange -> {{-2, 2}, {0, 0.01}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"P\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\
\[Omega])\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{-2, 2}, {0, 0.01}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0.5]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\[FilledUpTriangle]", FontSize -> 5, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\[FilledCircle]", FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.16500000000000004`], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox[
                    "\[FilledSquare]", FontSize -> 5, StripOnInput -> False], 
                    TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.21] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\[FilledUpTriangle]", ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\[FilledCircle]", ",", "5"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\[FilledSquare]", ",", "5"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8224870019108543`*^9, 3.822487441402478*^9, 3.8224884076696043`*^9, 
   3.822488493890665*^9, 3.8224887871830435`*^9, 3.822488842736014*^9, 
   3.8224899348792906`*^9, 3.8224900815189686`*^9, 3.8225293426177936`*^9, {
   3.822529484700488*^9, 3.822529495227167*^9}, 3.822529578242299*^9, 
   3.822529643617476*^9, 3.822529874551775*^9, 3.8225303210241365`*^9, 
   3.8225309207728686`*^9, 3.8225309918471546`*^9, 3.8225311841083083`*^9, 
   3.822531486263235*^9, 3.8225316271321173`*^9, 3.822531709255766*^9, {
   3.822532190253495*^9, 3.822532196665177*^9}, 3.8225324153426046`*^9, 
   3.822534516138668*^9, 3.8225532976008887`*^9, 3.822555712520625*^9, 
   3.8225600823965163`*^9, 3.822562347229545*^9, 3.8225764341133957`*^9, 
   3.822576775244776*^9, 3.8225768145555925`*^9, 3.8225772183775525`*^9, {
   3.822610289873629*^9, 3.8226103174623175`*^9}, 3.8226148470441914`*^9, 
   3.822618367112323*^9, 3.8226232074653206`*^9, 3.8226260824642773`*^9, 
   3.8226289940275135`*^9, 3.822794302541662*^9, 3.822794356556302*^9, {
   3.822794518238614*^9, 3.8227945476511216`*^9}, 3.822794806059867*^9, 
   3.823058377443986*^9, 3.8230793001057587`*^9, 3.8230832393652143`*^9, 
   3.8230851966528444`*^9, 3.8230972486868663`*^9, 3.8230986283267546`*^9, 
   3.8230989031040373`*^9}]
}, Open  ]],

Cell["\<\
It will be useful to construct the interpolated versions of the power \
spectrum. This is done below...\
\>", "Text",
 CellChangeTimes->{{3.8227946241907415`*^9, 3.822794640580364*^9}, {
  3.822794671746807*^9, 3.822794678150725*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"PS\[Psi]l2q0Smooth", "=", 
   RowBox[{"Interpolation", "[", "PS\[Psi]l2q0", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PS\[Psi]l2q1plsSmooth", "=", 
   RowBox[{"Interpolation", "[", "PS\[Psi]l2q1pls", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PS\[Psi]l2q1negSmooth", "=", 
    RowBox[{"Interpolation", "[", "PS\[Psi]l2q1neg", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PShl2q0Smooth", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"PShl2q0", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PShl2q1plsSmooth", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"PShl2q1pls", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PShl2q1negSmooth", "=", 
    RowBox[{"Interpolation", "[", 
     RowBox[{"PShl2q1neg", ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["10", "4"], 
       RowBox[{"PS\[Psi]l2q0Smooth", "[", "\[Omega]", "]"}]}], ",", 
      RowBox[{"PS\[Psi]l2q1plsSmooth", "[", "\[Omega]", "]"}], ",", 
      RowBox[{"PS\[Psi]l2q1negSmooth", "[", "\[Omega]", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Omega]", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<\!\(\*
StyleBox[\"P\",
FontSlant->\"Italic\"]\)(\[Omega])\>\""}], "}"}]}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
    RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"TicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dashing", "[", "Large", "]"}], ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Dashing", "[", "Small", "]"}], ",", 
         RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
      "}"}]}]}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PShl2q0Smooth", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"PShl2q1plsSmooth", "[", "\[Omega]", "]"}], ",", 
     RowBox[{"PShl2q1negSmooth", "[", "\[Omega]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<\!\(\*
StyleBox[\"P\",
FontSlant->\"Italic\"]\)(\[Omega])\>\""}], "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
   RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"TicksStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Large", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", "Small", "]"}], ",", 
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.822794717423225*^9, 3.8227947324081864`*^9}, {
  3.822794940586646*^9, 3.82279497262388*^9}, {3.822795012164795*^9, 
  3.822795111225789*^9}, {3.822795180345313*^9, 3.8227952310968103`*^9}, {
  3.8227952653604054`*^9, 3.822795289795065*^9}, {3.822795328415241*^9, 
  3.822795356716742*^9}, {3.8227953957042875`*^9, 3.8227954269230566`*^9}, {
  3.822795627198432*^9, 3.8227956338836718`*^9}, {3.822795706064726*^9, 
  3.822795711644706*^9}, {3.8230585048932*^9, 3.823058512567954*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1:eJwU2Xc8Vl8YAHDKHu8rkYbKTkJWZb3nSDQUCkk2UagkCsmujEiy8hOyFUKR
lRxkZe+998re83f85fP9vPfeM+49z/Ocg9P4iZrpPjIyskYKMrK9v8Lw0OTu
7i76yk1XQukwSHqyzu21vrGLPpwUp/EJGCSlZ4jyLS7vIkdmTvPE5EGSGL+y
8ejULtJQPmT2o2+QdOHA687qtl2Uysm9qaw6RLKv+mBf1riL6G7qfWp8NETK
e/P5UGHNLsqZntbcfTtEkt3IU8v4s4v+BlmmG/wdIskNzVf+l7aLDlQ9EHFS
GSa5ReyaBSbtojhR3tP+T4dJxXcYqd/F76JenfFlveBhkkI1/yXXT7tI/sEr
f8m+YdK1nwa/7nvuIlFrtZ+ijiMkNc+aZHED7GijO4Y9o6TAi13XhLR3Ue1K
9G0zxjFS8+b4GN/tXdRnFES8DcZImlYUPEev7yLXytL2iZgxks5dmXCyC7sI
PllW1rIbJ4UfvCa9IbqLdGVkf/akjpN6azTbFwV3Udipc7QGY+MkQ3lrljGu
XURVrZxvpDNBMjnz1beGsIv0M/wsylUnSfEjWQLltLsIZRY0ebyfJI1+Lqko
pNhFM967c9r1kyRzln6KzI0dJMMI/G7cniJZbh9yChvdQRZ11wMKHk2T7Ope
P35QsIPeq1/LzmqeIflO2bYt5ewg87pS29vCs6QYavOL7hn4evaTAS+8Z0nV
UJk14ssO+qvNel6Ea47Elc76uzFgB70TvpIaNTpHkqymPmX4bgfdnljXLT8y
T1IeX/f/57mDTG4wTRcrz5PsOXpNaJx2kGu9t7RCzjyp1j+BATzYQbZrDqa/
Pi6QhlNCbauMdtDYkohDS8MCab3ibb+W7g6iyf4n0s6wSOIhf5Jpc2sHvay7
/j3hzSLJ4ekF3a8yO6g1AcxnuC+R+NQqklmYdtAj50tcsykrJFnLPNYYuh00
qBU/PreyQrr1NsXlLOUOUmw+sUorv0pyLPZXV9rYRkmqbBp+XaukRrG7my7D
24hjieXPOfZ1ktPBSaWpnG1Ur903Vdi6SQo4251pn7GNeiIzddLFt0hfrtee
oErdRo5phlpTH7ZIja9+LHDEbiNhj1+X1dS2SfxLDmGa77YR+UlvRYWhHVJz
M/1kkdE2aktRF3LhIQduJj8LknW3EVOq+sptbXIgvKQfGHxnG2U1iTW2+ZMD
r4M/ZM2VtxGB7nDA0C45IKlpvWeS2kaHnjj+vDK6DyTUxUkYMG0jioctpV0t
FEDdQIX2Gv02WjFI9T3HRgnIZld7xKi2kbl8c8edu5RAm3Ddk2prC8U9IfLt
9FECovJ8x7exLfSpKeMi1SoVsK8kuWwVbKEfwu+FZpVpAa/2mPpo7ha6u3Ca
tzqcFjRO+PPXZ26hMoG7bMHTtECQdrghNmkLCdDmtS750YGBK295rodsIbqN
fVln+uiBUmnr3/8ebyHlkpX8hjQCWNVwjXxltoXYb3C+jiYQQdzwaZvH97ZQ
6vFFWm9LItjd78R+8e4W0nquNtBymAlkynM/GVfYQh+IXVXlg0zgeOETlgvs
W+hCqNUrk0BmUM187pk02xa6zRMmKFjFDBxMN5pIzFvIctFkPGj/QdBK9yZQ
gWYLyZFL8t2yPQj8b4cxqy1tIvLD/xHi77GA/VMlTI+rN9E3CwU2T4ND4Afp
rZVV+SYavyJ4XinmEDD0V623Kd5ESroayvUjh0D+uc73DjmbiCC3z+jsEzZg
6zpL8IrbRG9K/KQdfA6DCdajjLGOm0iiX5EhdPooCDXre5Rgt4kmUjtlkOwx
cPlXXPVX602k1sBFan13DMQYnvVNN9tElWHXzg6IsQPdZAX6Ag38vP3//Svx
Og7q5J7Qdgji/uiN+D8U5wDOgRLm3ac20fz8CFnNPQ4gOLpe0ce1iVaEGv1K
gjiAl89rr9HDm0guo0TeZY0DyLf+R71EgdsbeJ5oXM4Jfj4soST2bKA8Saby
mdfcQJLDUjShbQMddznO3FTCDfKa2fRIjRto6q1qZyglDygkPcx8WL6BpO4U
ww5vHlBJZL5X8X0DDb9VReERvEC55JefQcoG+h2jVr02zAvq7U3zVhI2UC7T
Jo+WEB9oGcg5wBu+gRbinBklivhAf4ZBoZvHBnL3osvtXz4FjM1opw+7bSCe
G8ZDrYr8YIQ9gy395QbKCrqVtBbCDybfUD3ptdpAvcfeTrTIngbLd74dl9HZ
QFd+fbR7+1EA0G1tOCyd3UBqf3wWb/oJgXfpcQk+Ahto7e0LvdpFIcBkqtLI
xbuBiAGCdAPawoC1Nvr0raMb6FntH4lRobOAI+pq+zeKDXQnvIn86DMREKOx
sF9xdx2Fht578d83EcBLG362e30d3Q46PU85LgIErGc96GbXUbtPaUeOgSg4
pxBy7kHHOurZ8iCtaYuBnDVotNO0jgKGbfUNw8WA9LcJ3+DadQTypYN6e8WA
3CHS8J8/6yjKuPCn+ANxoDQ+FMCRuo6MaHPJSt9IAENf0bkO93VU0eUma0d2
AThkBnjUOK0jin0/r2rdvACCuxfZi+zXEb2c/KhX9AVQKZh17YvlOtITjn+0
cEUSiNdIx9pqr6PKuzFlz+KlgMryJymL2+uoQeThc3cyaWB2fLtO7+Y6kkhm
kzusJw3CH6MthcvrKEn3huXGURlARVDQPCi2jjrDmyTlk2QBx/n4aSqhdeTX
XvPMkJkEZPSpXm2cWkdq7jIu1xxJwCq1Im3g+Dq6rPKj/PNtADpUlGnTadfR
tJwFSyBRDqS818y/MbCGAsL47b7Qy4Oy7Gw1ue41ZFFNz6F+Ux4M9B2eEG9b
Q4mS27WSIfLgkEgX67GaNXRqsU6klvcScKk3eDKRs4asvrlxpGkogLC1Qsqe
DPy7OnthV6wCyOTgCq9PXUNnS3v6XywpgHGr4YrsuDWkLJZKxx+mCNQOmHN5
+K+hocawscXVy+CRVGXOC581RPl+Z98z9SvA0+iM6mMP3P671t/x6VdA/vd/
LzUc19BlebUyOaurgFfNuoXLbA1Ra6oWHKdUAmsBL70QXEN8f87KBfspgzH2
osnL0muImPLz0OxBFdCaQKVcK7GGzrBLIupwFZCR9+FAz+k19GXTKPZHpiqw
HEwM2zi4hnwODol8o7gFdB/923IjrKEYssmnp9RvgesrYga0tGvIcnPyx6XY
W4CfroD78M4q2r+VctLjqhoYEm1OOTe+iqhs1t9TflEHjb+OEH8PrqJMjrMt
3hQaoFDR4KlCzyqyOZTFs2usASLvTp5Tb1xFQ8eyuEZ4bwMtNzJklb+KVOW/
aMSUaILaesGGZP9V9JYmTdfyqTbI17YWF/dZRbnH1D44LWiD5OHs4Lw3q8gs
cyNIyVYHeK3Ja/91WEV0defkgIcuuMRxd2jUZBWtZno8Cv2rD8SSIhUtDVaR
BYPMP1ljA8AhMZy4fHcVhbfHh3PtGICdK08eUaiuIrHQtpsjnw1BzpM3y5xS
eDwvlaK/rhiBxPXKO1/F8XhSCElbN41ByCumPBHhVdR0T01X5psxsPn4yRly
ryJZ0inKoIf3gDD6Tq3HuIoAn2+OIbkpiCX0HgkdWEFM9++EuH4yAwE6kFqq
ewUR1FuON7CZA/cvUUsdrStooHj+QGqIOTCWv1d3rHoFXep93+cYbgG4bMdf
f85aQX4xOrQslY8A859r1nLfV9A/lbgL7bqPwT6mZIOB5BXkGeKz/mXhMRj8
+liaO3oFCZ3+at526gmI6VmYTfDB7a8PPRHosQIBAho9VzxWUOXIS/ta8afA
3e5n5bjrCnL8w0Ou6PsUGB+wjxewXUFNl/tKWuStAafitnaq4Qp6Zk5WEVVu
A6JSqMt+nltBEgs6jHRSdsB/3SxDU2QFDSaNhbZ+twOulyujVgVW0FeDQ7rC
QvbAsN/3pRQHfn61gG32mRfgJAuz6G+6FTRlGHwr6tpLQDCyOaFPuYLQ7Owb
6faXYOdbM/3u7jL6xTj3ttncEfRe+Tgqt7yM3loeP38txAlEvmQPL+lbRid+
JhRP07kCvwonb9POZcR9ePkvs4ErcGbts6VqWUbKl4zObGe6Av206FtXK5fR
+YyPSwr33cDxIT7q6sxl1LBalOXf5w7ClUStm7yX0XNL8J/WeQ/AQ69UWf96
Gb2st5hwivUAyVXGXLUuy+hZxmrPH2ZPkHcjqLHi+TKa7X3yvGvVE8eXVbEC
I3z9wYPRF3q8gSGRyeeX7jJ6g1ocXui+BeN1/EM5d5bRh/2XOiV634K1m9qB
GcrLiDN3PffqhA84pP578YsU7k+2KjnTST8QebD1eoLEMro0clXAOMMP8DbP
xMaeXUarZAfag5TeA4nbHBqRvMsIhuQdmZTzB2p3XmUGHlhG6cJHz797+wG8
17n23HliCa3BMuIVyyBwiN245uXwEjruWyg01hgEIrsdeF/0LaG7sZbn7aWC
QapeSotNyxKyZbZjDmQIAdUGxPPmRUtI64KdZWTVR6DBwe93P38J0THzkYrl
QkFXv9zovewl9HniWilfTiiYNLIO0f+2hPg+jB7v/fYfoDFpWVH/bwl1Vblb
cGV9Av48Myq3gpbQVc9VISsQDthGqBJV3i+hwbHZHu2/4YDvvuSda2+WkNDc
+FHpsQigaPYpGzxdQvPtg7nnuaKA+yMj+9PXltALEeuh6xUxoNdPPzzv0hIS
G6swUhKMBdLfdQqvgyV02scz8W5ALFhYvk1jKb6EdDPVDrSaxAEjF6XQH8eX
UMH7hQFjngSQH30l/9Jh3N+ibW36sARwuEShv5l5CX2I2PA+yZwI6mkg/yr1
Etrvzw5+034BcgHiOTILi4iiAl0kHk4C4Zki3dXTi8jimvnog5gksNYqRKY/
toi8TaVngs8mg/Rj/FdduxdRSA/tXLJaCjgZz95eUraI0k08KwR+p4KdbMo1
5U+LiP2pa0/H4R9Au3Mfe1/wInp/y9RL3v4HyNrahVb+iyh7qHrhv44fwPLi
hmfAm0X0+MSBfTIxGaCncoat7ckiOlcT1Cl84yeQ/DclY2axiG46HUEH83+C
IOKEwbrJIrLdzZ2RFM4CNzSGEo9pL6K+BU7PJ0eyQX5P2wVDhUUkpZOxGcyQ
Cw6TtejMg0UUGvFELvl9LnjG1ejiLrWIyik5NfVZ84Dgg+ryOOFFtEhHnKrh
/wXC5wrvTBxeRJH0D1/TPP0NXu5PsrP+t4D0rRbg0LUiYPmfPpXh+AIy0tv/
0T6iCBifPRisPLSAdttiPwYtFAElHccf/B0LqPy8Z55NdDE4nKHyr7dkAT03
qxMPYi4BDNf2O1ajBZQWUeN30KYE7PZm0+XlLaBHX34132wpAaN0nPzB6Qvo
jaNG+rHPpSDTeNH4evgCyqLJv/73ajn4spY4L/lxAcmRXsmQ55SDT366rnwB
C8i9M0Nd4nQFcM8rjSD3WkAnKLblEw78BbeYQ9uzbRYQ9ftTsVGblWCmSFaF
5zr+fdD6c65MHRi8M9994DK+/6nxtF9tHWj5F/9wV24B/WU0LFoWrQf5R4je
necX0MvQeDXhqnrg83Tgjz/XAvIij6MOZGwEztQhas7H8XgVUicijBqBdYTS
wMPDC4jO4qT5wexGoP03Y+cyYQHFWx3nunW/CfBzekhtr88jK1nNgzGtzYA9
W7picmkeXTnLK/HufAveH81qts/Oo5Z07y760BawYq/1LGNkHqE3zdztBq2g
pF4gzbxhHpkETjGQ9rcDI9c6ntYv8+gQnV/+SEQX0Oz4DHpi51GPzodWOrZu
oCRmpTUcOY/2dYhzUAR0A4lhJt+FoHn058w9Cc93PYDmqtoiwW0ebQ5usRh+
6gOpxJaiK3fx7765y1z0gyDWLL5LRWMeuTmzLlnfGQShRc+Xb6vOo6Phkd31
cYPAzebQaRPFefTs75eXBfJDQKPtjr+r6DzKaHjC9MVnGGxGdurn0s4j8iLV
6km1MTC3mmRfSDGPdheDW+bTx8DwzZcB5btzSMiY59sJpnFQu4+9rGV5Do0J
DH/41zAOYu7rCS0MzCEx5U9PA+9NgqvC/ZsCeXOon1rvwEzBPxD8eyQ03GIO
VXivvKD4ugD07cOcL5jOodWot2ZdswuAX1zVpNFgDvUWk6KULyyCvC85Z2lu
zyFzevbvm+WLoDfQp8wGziF1jbivmnNL4JSF6JISyxziLdy37Kq9CqyFNiIX
Xs6isb6S7GzHLUARe8+C/+kscmcP7hBq2AIhh2vO6d+fRd5mGcq1vNvg1/6o
6r83Z9GTnx+YHeu2AUWn4kYU7yySfj7+i5ZnF4R4fLitWjeDTE5ekioeJYN5
ffwMKVwzKNV2aXvDZT90lCX/FnZ4BoV+OvHxdfx+SPqvQ9mbMIPCL02t9FXu
h4Vqb9/f3/iHYJcHJGOlgOWlU8ycjf9QFYuAfVMCBWxOTj0S4vYPrXddSPFE
lDCExjPvtd0/VDb6iM1tgBLeMTXQsXn8D+1/uVlxYT8V7DzBFHHz7j/k2SGi
3qRIBQc+POWgF/2H5O598UDlVHDGTuKUa/80WvRrKqv8TQ3TmxkqLFunEaU5
+eb5Lmr4VHTETK96GjXWnZHWXKOGS5PBSdI50yjmeprcF1EauKm3KrT8fhrJ
tpk4RkXRQBqFPAkLOI2oyRKzm57QwsqogBatc9Po42i/wl0vWui7bWF75cw0
MjteyvIhihYSs4/l8LBNo5pR4WnWelp4SMBJpm9mCvloCmm4nqGD3Exy8hqR
U2jaI/WAeDMd9BMZcLAInEIcIvQdcRN0cO2me4ar1xQau1ZmXrxDB6s/lPB8
s55Ct5wybuzjp4fPDl6jproyhZ6zZrgn29LDXvFJyC47hZwNvvL4edPDqxo+
9mKiU0iowdeaK5weHg+umdA/NoXaflryGBfSw7JDatXZs5Oodn0hVIuSAYpc
WKSoHZ5Ep9YeV/eyMsCwO0Gk4Y5JdNTTSOM4HwN8EtqaylQyidxfHZEpU2SA
h4/qfDAPnURu7y/JDroxQIvjJprHLk4iuWhzFZoZBthMonwven4SfZqOt3Xc
YIBAP6H8yplJ5LM//EI2FSM8+Hlc8hnrJOp7fUj41QlGmM/x+FjNxATaeeZl
4nudEfJdJGgM9U6grTt15tc1GaG/UZrvetME6up0/9tmyAhNY+a3eQsmUIwO
/5r2c0ZI4LHtdw6YQNffxOpzhjNCewW2I8GeE2jSauakYTwjHDTJuZXsOIGO
n1u8bZ3KCLPjN4rb7k+g1zuRowcLGaHhKZd4EZkJtCqh89xwgBH+EPCyGBwa
R+mjwT+L2AnwZINh7pmOcYTMEm9YchOgr50UzfPacVTUFvpm4zQBmpZMxlPn
jqOh3pM8mecJ8LC+8oCg3zjytJUoy1chwNcUfCK2r8bRhZz0AVsNApxP2nFG
9uMo9csLGlZtAqxcTWNXuzeOngscdt41IUCnD8xadpLjaPeHIXv4CwKcvDCV
UCg0jhZi/oq8cSZAzd4/y7Tc44i56pmE5isCFDnzPDCccRwdbZtq+O5LgIMl
bbVFg2Oo9Vx3v24kAV5dC1dkeDeGwpdq7nb/JsCfkc+DbruPoZr6t1F2RQTI
pagyFGk3hlgEyoTJSwlw88Ouq6jxGEpGTI79VQSYesY4X/PCGHK2eGjY2U6A
xxql6aMEx9AaV1bAfBcBetkf1J7gHENatrXB670EaFRasvqSYQzd1HCR6hkm
QBaDU+LRA6OoWfLH6a1ZAnSjJHOfbB1FJ4RTJGIWCHAmub1evHoU7Vppy8os
E2D5mrdlWdYosq4Yl7+yQYAOAdNfp3xGkd2y4um6/UTYV/qd4/z5UVRpHjdW
xUKEjurrCpKCo2jmVbBN+CEiPDwgZy7NNYpovejiTQ4T4c2tuu+AMIri3wz6
dx8jwkKxGfkroyNoUEXr2RMuItQtPPfgWvcIejLTbkTOQ4Rryk4+1xtH0Flp
SzpfXiIUMWdoVi0YQaO7AQRffiKM+ixgqhUygt6Z+DPKCBOhrJC1t7bvCOKk
FnoccpYI2/Nyv+m6jyAG+slnUyJEyNR6dcXQcgQJKlBPuYsToRvDA0/zyyNo
op1y3UKSCI1fxH51WBlGF5pKw8UuEuEO1VSN4/QweuxZ4SohT4RhQWILzoPD
aMTV6pXoJSJsTCuSflU7jBSZT0kcVyTCS6N9VT4Jw0jFOqbs91Ui7Lc5Nfcu
fBiNe1J1hV3D80P+hMU/YBjZOJBH2ygRYSb7jm6Q8zAqMie9OXyDCHnU2WfC
NYeRqOHZGlFVPD/995g/3xhG1N9P3J7B1rVMPh8tP4w8/x1kSLxJhEHe0i7x
wsMozfSVHKMaEVIUajGlUuH+fB3xTdXA86McJZG+NYR4FewEVW7j+eka0/qx
MITe0Ondn8R+tmIbndU7hPSShDsP3yHCEcFgMZQ1hLwOmCio3iVCAef4mfHk
IcQ/0Xq1H9uy7mcSc/QQqrkc9euxNn4/T1u57vsMIU2Tdk5nHSKky2Y7yGg4
hE79vP/BVo8IVWn4687fHkI0Vy56TWMH3ZX0MVQaQq/SZm4Z6BPh8S2t/ZkS
Q6glb9tHxgC/34thi9q0Q8jIhpKi3pAInwckpb3eGUQmpnEdQkZEmDeU9zB1
cRApUN5o98K+5NE1RN47iNq82+3PGxOhV9vU5zNNgyhSWPGcN3Y1/5bO7YpB
JOjgf6UDW7OKvfnLj0EkeuOP69N7+H2yC/k3Jg6i7BXZ3FzsvsekG1vhg+iq
tJbpLrYZk36JqucgSm7+KPPKhAhf3v6cuaIziOZduRYem+L3k5BmxXFrEOX3
EH7HYFOsIUGly4OoVK9BtgXbL6w/LkJkEGU9V3ASv4+/l6k5w3LeQWSzG3HL
AJuNRH58/ijur9L3NS/sqD7OYAXKQeTxs6KzBXtEROyW5cYAMotI5V7HFnCX
ZwydHUDkbQd0jj7A76NJ7W/R8AAyvjzkKYWdwXPvzVTHAIqgfJOlib323OYi
a90A8hnJGX+KLVv+ahuUDCDPxBluH2y3w0G5ZrkD6P3jR5Yx2GXmcc8DUgdQ
4l372mxs+l+ZovmxA6jmnZZSFfZNhtJ/I6EDaJ+g+ng3dpBey1eiH35e8MX0
aeyO1BFTqVcD6G2qYNIG9gmyFc579gNIqPNmO5UZXl+3qHp9Hw8g7VELuQPY
iTGHwrKMB9B21IXxI9jTi3ya/XcG8H7ApoUDW0TxAjOd8gBSudvNyIf9PORK
rbj8AGpYEPp4Gjtv7M5bvQsDKH7xrMMZ7B1Js8ueggOI3u9q3p4vvbXf951z
AEmtIR0BbK8ur4LOQwOopWv43insasH/HCgYBpDjIGU7F/YB56/nhcnx838+
/c2O7ZHFX8G02o+OUY4nsmJvzCTeXZzuRz/28coxYlueOjXVMtiPTEjs7/Zj
DxokOOa096Mbibvv1/D4NUN5CZ9q+9EgbL+xNz+V9XGfnUr60WeqtPJebEDL
I2qY14/WN3wp6rF/XIwtlk/vRw/YX1IXYvM5cGnwJvQjQwv35lTssB/RI9Th
/Uh3OPlJOLY7dxRNjWc/8nE/xPsMe0XnZFiaUz+ypIhR0Me2CIo8E2DTjyYK
Ky5ewVajjFC5Y9CPrrLwDrPuvW8Se7/U7X7kJLfuv4m/L2nbT0/Zr/ejqYZ4
gX5srrH/ggbO9yPWDqULCdiLFSGdDwn9SEhfh5EP+wH5oUcqFP2oKmnCez92
lo3AptFSH7q+6M3Uj79/j9unLk5X9aHzFArKIdinjnDWkL3sQy8l/LpW8Xpi
entyrvR+HwpsnmaoxV7bOH7QR60POUjpm8RiV3Qfvcsq0Icq9wcFX8c2i2IZ
Od3Ri6zfK94JwOsz6RTNttqFXkT1QuHyFo4HAaFUHIe5e9HvB7uPy7AdaCkv
9RB6kdlu39x7bKUpcu8Hoz0ISb8/xIk9lbrJ4hjcgwrub0nI4ngjeH5WMH6x
G2k6TDpq4fh0X9jFJbenG/nLHv3Agv2Zj9hYU96NeBo/nqjH8YyZ7azdyqdu
tGznkaWIvbpqWXRFoRtdDT0Cz+gSYXHuzO3JoC7059L77UEcP7VIM85nz3ei
zLpv8Sdw/A0459xwiaMT+by7RmjA8bpKiMCjRdeJkqd27r3CBieE/7r2dqB9
L28NjqkTIffu44ONHh3IUi3WIx3H+5nCf4nP2trRjDzp+iWcD14p/KvPtW/D
9aMGeH0dt391WlXiXhvyu5CQLINNpjxVm6rchuxkXt9bxPnH8fZEdSxXG/J0
3sq/h217f6TiXXUrGh2NMLyK85WZV0+hEUcr+sSU7sp9hQgTfLthN10rEs99
VtB/mQiH/bsKNJdb0MGe2EeR2Eb/deRfr2xBEnWrXMewtZNacs49a0Em/dWS
R3F+vFFdk05b0YyqSCZ/RHD+fFtfffb1j2b0yjhg/wrOrxXNVak74c2oeIC2
+Re2Ys/flMWnzUgthiB0DRvMlH7pOdaMfpddWbXA+VmEqSDq+5MmVKbzRKEa
4vXI8vukoHYTOmyud/sTdsrh/MgEhSbU2EnN9BD7NGde+KcjTcj7AMGbAZtL
LCv0zZ9GdKpK//sdQISsGqn+d9kaUfXK+Q4iCa9HPp88xf2NaLdmLXpaFse/
9QfDorMNyCE6m1CJ/TaSU5KuvAFtmsp3eGDvjAf15dk2IO7QKHka7E+/ntIm
GjcgpVufLk7KEKGkn4p4oEoD4lI+NVmNbS1O4/mQrwGJjx2SDcIedXopzN5a
jw6m188JYL+6qaVFU1yPzuQLqzBjc3Cfc1/6Vo+OfTC7uyGN57dipqX6TT1K
efnZsRp7NaxqN+dpPTLIJYZkYQc9/nI6Xq8e0fxkNIjGrmU2dnI6V49klCnI
X2A/HAGJ5pz1SD4ivtMUmybnWMNtxnokycxnqo79Ji/pmm5lHeJVIn8vgl1o
YBIhEVOH2Lj+nuXA3qA4Mc/gUIfXxyt3JmxL1Q+hv0/XIdX0l2BRigi/LClN
B5PXIcFSpi8j2IP/UchZdtSiskDFknZsdlgQePl7LRp9oRhYja05bDd2wrsW
xfp2sRZh+3uLyqwa1iL911E3srArhaf86iRr0RVux/Mp2PCF/nnX8Rr0UP01
dxi2w4nDb7UKaxDdvWy+AOzMPw09IqE1KOoQoect9oyZjyitVQ0y+OZz+TU2
P0HxzcCVGnTJx/ueM7Zxxk577ska1BBBce4FdrhWjmDAajV64eGW+wy7dfup
q0VdNZpz6p6zwmaKPdMsn1iNJvPnOx9jK10dOXXMpRqdcIywe4j9+l/ky0XN
agSWfpWZYxcEaNVVCVejffqnK8yw1y4wc8dRVaPGE40v9yzWU2Xr2FuFTnUw
Du35kfubSo2sKrS2Tbm1d3/CKXhCyK8K1dA+Ldt7/kD12lPK+1VI8AWlvOXe
fFr/KO0hVaGwiheWT/fmk+3RkSzWKhT+7PX153vzmc/72O9fJfq13tW+N75K
o77C+6WVyLH5/CEXbArq/1hgRCUKiv9C8QYbpKiZsT2vRFLjn2J8sO1vMeTP
3qhE50aezu7N74+VUmIFTyWq78qf3Jt/v6SYYrD+F+m5Z2rGYT/Ud3n+s+Yv
4vL64ZeKfZVZl18w5i+iZTgTkIvNUybZFWP7F73gTzQsxSZzYPU7cv0vmvKm
2WzA7hFakPM/+RexOjEb9GGHBCcnOFVUIGl1ObctbOtrXneXwitQgPoSiQF/
f6rbJgwPn1YgdY6nRex737PpCWutoxXoQ9qPo3LYDhIfSOKPytFNBgZyf2zN
8cdzX+XKkXyeUV88tni4UiwHazmqkux0ysee3k9BSygoQwvBbOtT2PpNts3j
xDKE7p+rVMfrUdpT3dNguBQVKR/0f4LNJiMi3ZpTipJSjhF8setjJj7/MSpF
2a1PRMqx5a11H0ZmlCA2RvUxRRwfTvBJnWD1KkH7Fe/efIC92cHa4KNbguIX
NM28sTMv1p1/QVmCNiv+xNRh8x2Q36dx5w869tnqoAmOT3Tpp/6j3SxCST3G
hck4fo3eo7jhWleE/m2bOrVh/2Eb2FmJLUK9VsHN+3G8c3QJMxm+UYQki0av
6mPPqDCKoMhCVJRpcfyoHBHGd428m3hdgFpmj5xIwfG10/HQ5wjxAlQhXHGu
B5tw4kr6rcHfSEmc8zcBx2Nbwy+NufA3IvfoZrHBvjxiwfZ24xeyqjYuksPx
fXxmNkrAKhft5mm3zijg+nXfRsZDnUyU51sa5YP3R/qxAqUn6TJR0thybzl2
gIJOa1NOBprx+aRHgfPPhkf+msyhDDTBlMzqjF1F70JiaPiOGKMPKz7D+apd
gMbv7rtUFEq8fMkC75/0brFndt2LQ584fb8+vblXTy5LPS+JRRF9SpHfsR1D
6hCBNxalOihHzWOHd7lXXRyNRlLljmVPb+H5rmosVW2IRCI83NbWOL+mLT3i
Hu8MQuu3j2/a4HxcK8Vx9lh4IPrN8pYlE3vGuUlaRS8AOX9MX1zG1mJ+FmeG
3qMGh4+mL3B+V5ch7CP/+wYlTqim2Gni8ZU+O/Lg+isk6Ul5OxO7XrVLpKbG
FcVZ2c6tYZ/IfOV/P8oRjfWH7pfD+7FPFTeRWLwd2vhcvf8V9uGe4zM7X63R
AivhWSH2maEWqRC9h2g46W7bCjYfg9VH4QdGaKQsOZ1Hiwhdm/mbj/1RRrSN
ZK+uYgsSeywohSTgfYnbDYbYrfPun5nWtOBW1LUaXew51VMLT6zvw0eLO7YX
sF8GXq58KGEFVcQtU6iwd5xffPp89jl0TrE4Wo3bc7VIedQk4AD7ksofe2Pv
1+wjUfO5wBsOWup7/f/D4e0ZweQO4+/P2S3g8b0O4bK64PcaVv4y9orGvsyQ
r9VA7wlHKgaOqmNTu9+++NDbGxLjR3QPYleszpympPaFd6hmfZvwfD54IHA/
aycACrNt/mzC851L97Kl+HksjE52Pt+A32eUEGtTGlccfNrSVOOD7XEzrT68
Lg6Kbk49v4ytETJUZXs6AWYKot1feD89x3mjWKDnCxRoZhD5ooLnT+p4WoBC
Krz8hpjqgb+nvxkGCt+9M6GJPnhmjr9P2VLBP6f6MyE1O03Taez01vWLked/
QtM1U5dJXB+FrAdCn6Gf0GntS/kjbBNYIW1KyoaWr1uvPcf10G6liOiR+Vz4
6Dj99494PZwbJD/hpoWg9+e5x8J4fQnn3ZkX+Yqg8USTyi5ej3wB30r61xE0
DUiOrcemj045F6VcCOPJdVKfYW/d1OrenSmEkxcDHhXj9dyTnnYaiRZDUnRb
3HO8/jvDtQ+yaRfDkBJFPRXsVi/KbUv3YujELxdxCrvWUKf+RFMxTB5Vy+nC
8aSAidrO+dkfmCx57KUS9mcr/RJSdgnMPTfCdwnHn3Bd2tTgvhJobkzq5sEO
vZr58R91KZQOGz5Nje3PQfcwQqsUgsaKDzU43rnW/zywvY5/55dONcJ2zDfc
1OAqg0u+HXJXse2/0I+kKJXBQLkp67PYVq5GObqfyiCXamjOLo63RiKMBvmy
5TDRiGUgcS/+sudcZTEth7F+yx6Be/UPzT2xR+/Kod0+t0YXbLX+HEr23nJ4
l+m6nja2SvW9WRuqCkhqGoq4iq2UQ+ioEq6AicJdHhew5f1NUl66VEClf4Tb
bNjAkRjSlFgB5wWCZWmwpc3yXM7UV8BItn1163v5WY5JvYvjLxzc+r3Siy0s
+EtW/NpfOLnE/a4RW+DwfT6fp39hS1hkfRk299yvdenivzCy7LrRd2zHmkuv
l/79hQFtdeMJe/VEUhUh9UglFJOnBxHYIl7q/z1QrIQW3u5GQdhvTbu4OZ9W
QkGRPHVf7GH5e6md4ZXQJPc8615+JnFMSQZVVMJ9XxwT9uqXkG3rP8pLlXDR
mYlmL7/PdW4oU3NUQdqTsTJ79YtSjnt74fUqqDK7IrdXv8QF091zsKuCATGt
bHv1y451wD/x2CpY7/2x0AL7zs2j9v9qq+DOsp/MXv1BRy/wzpCvGh6Jtv26
V58UlErFNDlVw4Kvyvf36pHDsUWC775Ww0HP9n179Yi167Xsyy3V8LeCsM1e
PVKt13CRjLwGkk7YZO/VI7wyd6tzBWugmlpVnQO28+EBTRutGjh5QiffFbt9
2WxA8HUNXC267OS5N/9Ncw9H02pgouPGwffYvun2K5+7amCLT4HLR+zRd2Ru
d6lrYSDnMorClnvoRX9QvBaaVr1vTsIOu8oUUq1fC1sOuf7+ib3IG8rh8Rb/
/iHbYa/evLGfIxlm1cLIilMMtXv1Vn/iufWBWjh7gde6C1v7U7bSI6k6mL/O
9Httr760hy28pnXwxuuNz3vfC0Gz3KDPvw6KtQlpHsEuYmp7pjZeB392PZAh
YTPape1S0tVDIf8J85vYeaaLJYMn6yGdAc0jE2yWSy9Vw6/Xw5BTtqN+e/eL
IpYXRvVQ3VtRb68+seTY33nbrh7Olb+J26tPKrbfmhBj66GLnUPMP+yXOWEv
3DfqoaWPksZdvJ74E3uBAVMD1NQhyNtiNwdzUcjyNUCDc7GbgdjCNkl+y7ca
4LLg27oG7EGhvFizrw3wUvHItCZez+/Zd8wUUQNsBqp8Dtiy9PLCXC0NMDni
OG8kdsj435wuskaodKnmyTj2tdiOGhWtRlhsyc3tgePH3JvU+6WPG6Fw2s/k
VOxQs1e7Mq8aoexE5GQb9riQkOjp1EZY8jDESxDHI68c16D9FE3wqoEzTy92
Rc0pnZy0JlhG3M0ywvHOKn1rUbi0CQJ+GbZg7MOBDb7xnU2weZ/gkb/YZlov
CwIom6Ei5ebO3vktzVAt52OdZqhlsMW+V69cWXs+zkndAkMWxM/24/pkplPJ
LZS9BUq2/Zhkx/E45PfJo0SxFiitsiSojT3q/vf6lm4LZDnuIteK7cF4PK31
RwtMp1jQb8b72TKukuc++q3w0a/enFEc7xWVmfcv/2yD9n+iZTRw/vAzop1f
/9sGz0LW76HY7c/J+nZ62qDbkX16PdgWkTN5NFTtcMvjt/IDZXz9bKU1u2Y7
VNb/dNsJ56P2D68GL620w9HxP2zpOH9ZtC4VBZzvhCdpLlBy4HyYMTmV9lGp
E7aVidbcx97aGYwI1++Ejv5vXL9h+51qeJHg0QnjJUzCpXE+zbD/JprX2gl5
Tp7TV8f5eevo/egB2y7I0p5Q5HgXv2+DNleR7G6YLnx87JMeHu+0LByt7oZV
JU4H+7GdX8RsfxrshvdPzRZw6+PvMfCxAzWhB5I8O19/xVYp3/+s16QHupJp
66Ya4PVwVuSBL3MvdDx5f+I/IyKkyg/mlefvhZJU1TLN2DtXN4dWSb1QQcuy
ntEYvw/jMsN75r1QPFL7mzN2bYiutnRhL3z9eaRE8x4ez46X8vjjPuiSrzbU
bYL75zNDH/mqD/4OFjWlNd2LHxqV6v/1Qd7zVqMS2JZiJ6+gkj4YUJnT4oV9
H72mfN7ZB7/+PizzHVv/xuQfgbk+yGT72q9973wqQ5ujirEfOikcm+W+T4Sx
L97txh/uhz4XTJauYJ+UK+x15e6H7FePtlrsnd/W8Eacl+qHnZWZ7N+wAwO1
HA8o9EP/Il/7amyito/OtEo/7OrNiZzEph6bOxJj0g/JX7BKcz/A+/tv3OuO
T/rhbBpTAgl710az/Y5DP1R1q/+7d377Uto7W+xNP6y1C4iyxF4lyw9h9O+H
R08E8b7BtimfeT4e1g97d5g1wrBn33He/hPfDyvibpzaOy8cO+p58MWvflgi
np7SgH1vIHdBvQzbv0h9ALsvcbpBuKEfMtjX+cxi61ie/E7b3Q9fbVWrbmG3
Saj5D4/2w4Oi38KozXA9u/n6CZrvhzH89x7snd/WFWWrhG31wyMrA+l757fX
vSaFnlMPwBOirM/3zm/LVY4z3mQegJbBB1N4sVmEBw5Zsw/A05JfTuyd3xoy
xnME8Q3AHs7PQnvntd+mzQSyRAZgzZkPzXveqBKUaJcegPAsG3HPl5PnSBsK
A9CesrKdHzvwbeYVdtUB+NtTXmjv+f3m9rfA3QHIpFhEv9e+4DVZHcN7uD0j
oUd7/bPnJzN1fzwAr79/dm2v/6XUJZZxdgPQxbchcm98zGOe9mVuA7CF1eXB
3vj1y667j/sMwDvj2ZF785MUT/SlCxmAB4qy4N78rb5uChaMwu3pZSnuza+C
ycfPKkm4/1Fs6Qjb/5LOV6vMAZjupGWbgt3NdTIjoGAAittaB3zEPr1vKD+z
YgD+3RDYdcW2HUgoa20cgBMvr2SbYRcXWtSvdQ9Aaot3P1WwiVHCnUfHBuB/
54qXxLB1XRaGZOcHILNq8pO989xlksOqK+UgPK3CRNj7/4H8cUAeSxyETqlP
OX9g+22R05ceGYS37Om132Hz//I+QSs8CMWI2dwA+1mYMv8ZyUEYDkW+HsQu
enFATFl+EMpGpcuO4fWhLfmf4gfNQRhf1u2+t54S2PRUMwwH4XJpHLcm9uIK
x90Wi0H4ft0wlxPb9+eXR0dcBuGaccbXH3i9dgQ9spXxHoRPrl9dtcPmeybi
qhc4CF/V1J6UwUZiOYHRiYNQiunISh5e7wzMjhF/vg/C4rGV93bYWvMwceTX
IAyTfTMuir2QVp53un4Q6jyQzPmM4wWPUNvA97VByKb4gMUAxxcrhk9TTfuG
4LWPTb002L+n9JeXGYbg9cBbAumGeP+fNEojzTkEC7nLuVZxvPI6tXK2+NoQ
LIrvKTTF8ayZKk9qWH0ImkWaZGzg+Mc56nSJSn8Imgea9Pti58VR3lGyHoLR
5iPFX3SJ8B8nq3Nj2BC88DQr7bc2EUq+jH5aFDcEmy9fYADY7s1CpumpQ9Bx
p9jqF463hzwv3/ArHoK8afdPfcP7KzBtd1Rpcgi2dP47/xDHay9FCoLU0hB8
9P3dr0Yczxsj/cn5d4bgi8Frs+ex79/6Ok7JPAxdBvTFltVx/M7qzCqSGoYp
TgV9V/B+tpP4ICn90jC8Hmn2MRDnDx7zxYjPysPwfVBBSBfe/+QcY3jjZDQM
AwK5xQxxvul3JalLeQ/D8m9xt6WvE6Ho9ajZ9PZhuPVujpoX5z/HOMGhz4PD
sGJYWUoY58+y7ZxWv+lheM3SNEUM51ft9Ibfj8hGYFUoC7UQzsfurPt9+flH
4KDiX/0RXF9UW753YRMbgfXqxA9luF45VHHMhkp2BI7+SDSIwfVUkoOE9rDq
CHw4UGx97QIRNvWZ8kfZjcB18+ttamJ4fyy1cOy92wjMeajnSCWK832AM9HZ
ZwSa5RSTZ57F+Uzh44rO5xG4ssovuCWIx5tUUcJWPgJX3VtnSaeI8PmzM0bv
D43CmHehi5ZHcft0s/manKOQn1U5zfcwno/PPw6fEByFztpyhOhD+HmVUvUp
F0fh2wj+FynMeDycV2Hlo1HIR/Y4/Codfn42/acPdqOw+YaUJCsNjic36la0
3EehUyChqpUS1x/2mqljH0ehiFp16QVyvP5qTY5T/hmFu8ckGy1WCVDEhP9F
dc0ozGC9VNu+RIAN61PNge2jsCHpSofUAgGy8Nr4cs2MQrsMFULzNAGGvXTb
hEfGoIHdgRajAQJM4I/scHgyBttNNsziywnwaoHROXmHMahJOJbHXUKAE+q8
H2jfjMH4gAkD/0ICFHRJuRoaNgb/XAkF4rkE+KMlL/tn6RjUs8pjCvlKgBoP
nQ861Y9B5JbzyimeAJfJ5J8odI1BLX1ljZvRBCgp+JevaW4MkiX9fpQVSoAF
7m3Bc8fGYfFjY2oHDwI0PPxpPptvHKrllRl/dyNA8lR9ZRfRcXiMISG13pEA
FTpGKAhXxmFBXLt0qTUBVp5dsjljPQ6J9hlqDnoE2NbNpHa/YhzeuKvJGiVE
gEo+pu3PGsdhuZ5enO8pAsyXytN/1T0O6YMEtnU5CTAq5N7DqLlxyL24diKR
hQDNbma97jw8AXerGYgt64ywc4eOfoJrAtqWthc1LjDCG98MPqwKTsBYppNi
6VOMUJSONpLl4gR8zOh6iqaHEW780clWMZ+A/W5+2ScKGOEj63SSns0E1GCS
+E6fxQh7OShLHjpNQE3KvoWmb4yw2Cm13uvDBEy7DVcWwxlxnUA+WZw7AQ1j
xNOMXzBC9uQE9gt0k1DPt8jhsQAj9Lu7GaPIMgk9tqV+lJ1khGQ0N09rnJiE
SZnfhOdZGOGwyfq5p2KTsEaX8nr2DgP8duKGarL2JDwn0FW/XMcAOWqiWnJN
JqH8TdXEsj8MMODlsk6F5SR0OZmtcy+bAdq2R5qNuE9Cws1TkdsRDBAEzLud
TJ6EYaW/STFmDDBd7jKN8M9JaB0kVFCgzQC5ZsP8ZNEkZFH/GBF9gwFS3VD4
dLdpEvrPcPzKPssA6yg/ZgZuTsJDkuZxBxbpoeEL2THqG1PwQeHlQ2OP6aGA
SUXLjOYUPFigEhesTQ8XVTRKWoymYNincq6ly/TQg+dRdKzdFNwUdFn+fYIe
ptR90oGxU7hO5fB6XEkH13k362w3pmC/V7zytwN0sJjJs0CPchoC4YD91Ou0
0HeT+ZsC0zR0+inAQN1PCzkaBN4y803Dfw47bmsptPCyo7ZC6q1p+Dvoktt7
eVoY0JibM/JlGl6OfnPLQZcG6v5WTKzOwCZvGjoMaCDvl4bgjIJpOHtTT173
JA3McZqwdmuehh6KOXKN/dSwl/+I0HGyfzBeqbvb1oAaCrjYR2vc+QfDNTcE
1W9QwT9nLrz9QzkDT7HFsMlP7Yf6ZzVi54kzsCX43bMvpfvhmtjT/JNHZ6Cl
5Y547+f9UFA6eeal8AxUDbLcyFHfD4OunlSXuDMDc0vnPz7J3Qfvm1Kzx3+Z
gT9vbe88diaHNJ/bvnlcn4Xr9yV/z61tg5iYpbLM27PwkFduQ+mXbSCbcKB/
0GAWvt1OHv6ptQ2svl1nhs9mYZJateBmzhbo+IVsV8Px/e8OAoeXmyCpPRGa
zczCAK2/ej/o1wEfbf543NU5qBHM/4js6RJYKBe2iFGeg+X8gbM+gkugwCN6
6rPaHPxz4aBI0Pgi0KTwnAnTnYNCd96ECBovgje7t5b8rebgkEBDgp/OAhhe
Htt1DJ2DB9eile+YzYH0TG03h4g5+CRj1stWcA442tTss4+Zg26ljbGqg7OA
Zf4HpU3KHNTiuGATuDYDLk070ZsXzsG4RwfOc4j/AzGDB9luj8/BRULlSFD/
BLCM9ghV+zcHxf8bnfZ7OQGkDdeP3FyYg//ta1PIZJsAjT297Ne35qCUR9Lo
K/VxQN7xlesi0zx8+Syj8EzHKDCsg8JCkvPwWIJI6e1jw0DQ70eaAGkeXq+X
MYivGAJrN3hF+eXn4W8HBi9GuyHwvpJOgvvGPORWDWPjbBsEBaUtUkcM56Gy
CNkv0bgBcDz/oSKl1zzUUI/mre7rBSxHNjYs383Dv9I8w8E3ewGDrVd6e8A8
dKWUWI790wO2zsYfS4mYhzLzGv+epXeDztjeebWMeSh18NUhpbhO0Ej2ODE/
Zx4+rrG/8Y6vE/zV29TlK5iHay/erA0mdYActsMV6xXz8AGbsltKbjsI8bkV
GdU7D5/rOlhQzbYCv/E+dbrhecisL3jjjFsreKNoSftsYh5+eXrF8yxrK3i2
+/bZlaV56NE+c+GXfAtQsylRmqFdgJbfx51EMpoAQefCqsy5BViTHvT1+HA9
oMopTYmXXoBFRqeh4od6sM2iYUyUW4DjbCo+E7AeTNda1QwqLUBB45IOlkt1
oFI+KdbbcAFucjILqExVg+LPkncXTRegq5zzPi7dapC7VUbQe7gARyIsgwLr
qsCXrKEXIrYLkOw/49SjBZXAU+D4zTYffH95jXNdTgVw9kymvPhhATaOj208
JlUA22GpX0khC3A57aG4ekk5uB+pyeccvQCZ2t6HNrWXAQVm/y2e7AWoccFt
oehYKSDb2PfVenABerLnhh4iLwaGQx2LLmMLkGDHYH8gpQgUVqeDd9MLUPbT
LzJfrSLg+lm/OXFlAd6ceSu5/LMQ7Crk7XbTLcLxFSmK9v0I6At/UJokLsL5
LpuHyVYFoIDNLHiVZRGGaaYxHuv/DZwnWc8wn1yEQkUPThaX5YOd9081r4gv
QnSHy2b7ex7Qf3E1WkNyEXLu/45KxfJAgfHJaSPSItzx0DVs/JkLnM/VuDle
WYSlnwwpMopzwHYn/7fvOouwjNPP69VKFtji7d/P/noRHv9D3d7xOwPoErNV
TnsvQrmn+QtHDTJA/tq7/8774esXNo4R92UAxyqZs7dCF+HyMR4DFuUfYNPq
o7ZHyiJk/y7p+2clHWhrW8YHfl+E7tSsn4/Fp4O8S4pzUVmL8FGqlMc/jXTg
cGjxza/CRbh5+oD8xtM0sPFL5ftc8yJ8QdVkAXm+Ae143q3tjkWobrZZ9Olj
Csjz27pM37cI8yxEEj0ZU8ALo6Ru3olFeFN8toacPBmsUVHR6GwvwlUz5ngT
yq9g9dZv/VLeJdiYaGvZ9yIeuHek9YAzS5DqT0+gAG08IBjF6OaILMF/EWkf
f4bFAT4rT+1kmSV4S7J6xbokFmj43dL8cGsJUifEH30jGgP6WRVa6O4sQbI5
9q7uhmjwMOK8xmvdJXjXkEB7/Fk0cE85pmb3YAm6GBFXbxVEgfTKEWU9pyU4
bNQ7RWyIBLJq7dWt7kvQWm6Ir1g4EpR3VF6/6bUEVdeSWAvfR4De8bRrlwKX
4Bi0vWijEw4YqB0UT39dgoshRhz/2MKA+SUCabl5Cf4XNjchyxYClirJ8i07
l6CiyfcPKTHBwFVtUXq8bwnSZz0sfyUSDEKN2iW7JpdgcnZ2uqR6EChziZEo
IluGzKuTkloZAUCNOjhDmmoZ+iWkiifcDAA9fp5imfTLcKBL9vTu7AewFPFI
JPHQMtzasn/9ReID4Mo/L/hOcBlmTNoXwq/vQeql08lUYsvwHieRQXzfeyBV
dUzA9cIyTP87ditS3w/c7CTjt5FfhpQ9EVrBnO+A81ol912tZZjGopfVX/MW
dEkYHON9vQzJ0uNkFX54gPvr54hvvJehp8jIk3lZDzD3m2H/iN8y9H3bakJV
+QZQXMmbjPtvGcrPVn84N/UaCN9lzeNJW4YWW4YJx6++AjnHp7+9zlyGbq8f
yiYMuwP5weLo4dxlGGAEaKVfuYM7D62840qWcR38SFWrzA24OlVp8XQuQ/OR
QyFH7rkCOvmYG6/7lnF+9zWtIbiCYKoXcsPDy1AmwYr8pb0LSHrPxx83i8c7
H3lNR9IZNEW7rXJTrkB3tlFBld6XgK/sQgi3yAo0eq5opZ1lB9LfEt6+OrcC
/3YUTumR7IC06ojTkPQKZLuPJvvLbIFqe4BprOIKXByECxwDz4H95D8Jbp0V
GPHwmZeU6DOwL62E/5XhCuzkkZ8qqbQB72w+sQ+ZrsCwfjEVy/s2IGbrKkWs
1QosHqpy6Iy1BlWEuCYujxXI9cBRgvv8U6DZ5FDu7rMCGxs9/xn3WYH+j7d+
DfqvwCI7xczHb63AEsduTMynFchEUWN3s+oJOCGubc31fQXKiyWoUhk+BlZ3
mA5wda/AHgYa6e4j5sD4y9kw3oEV2BF/3KYw3gzcXlfhPj2K+3drxaVX3AxI
f3p3TmRuBVLoewm+1nwAKPvotAHFKgyqNP/enmkK1s4KDF2kXYXk60/KzG+Z
gknXa48UCat4v9M/PjxrAuq5vJxvHF6F9N/EqdXETEDYfcpYbcFVKLC9IRRU
bQx8s3kE9UVXYWpfS/EDO2PgQqPw0+j8KrQUP2bUy20MTJLcy83kVqGr2G76
CzcjcHZmd8pWYxVO0bpMrqgYgpLnGxKBjqvwjFFq+LqWLsgqO1IQ4rYK8+0t
LzZ36YCvbFJXwjxW4WsKuTpmIx3gl2t3N9p/FTb3yzg8tNYGd7eXnNLiViGd
/BnDnDQtcEOFhTrj6yocz6kl11XQAuCzuH9W6ioU07Hlp+u6A3guWsf8zsHt
byeyKBDugJnXs2VV1auQg5P+1QOf22CghXCzrgFfb7z6VursbdDMJ9zR2Lr6
fwtXHk5l/kdRSpZU5I7KvjdK7oik7+djNIVckphIUqYVKVupiYwQJSU10iZL
1iKDQiQhS4uUJBmyJUnZ73vf+957x+95fn+e5zznPOe/c/46eMKvMKmx1RnK
GnyHP3ziIj1NdY1oO0Ok7Ff5L5NcDE26+VdcuxMoX+53na1CYQ/LSD882hHW
nFZTCtKkcGXmcEL6Okf4PWD72z49Cv8xn60T82UzXHJ8bV/DplAUE5d6vdkB
ZOUqrCJsKGTenQq/8pgDy5lp0Zg9hWZLWVu6LTlgM2xcuXsrhexMa8yts4Oo
xiyzX3dSeDJOep9P2yYQRiUaigVR6GM/VJ+qYAvLgl8NHT5O4UbuHRX/bBuw
2DMvqzuMwvGuqwXuaAMhVqc0qmIpfLzVU7Qq0BrGhN5KYSkUznr98SsZ3wD9
x6zEmCYKX6Zsnbjx23qQ2B9a6fOawuolE6bq01ag/nvpiY/vKEyPffD34hwr
8DBZOVX+iUL17XUcVwUraBtV/np8msJ9V+6cCaQsYbLbOWuITyHPccUbYbEl
KDRf2OMmzsPiq26C2gBLcLwn2b1GloenJc8QXh9C48Gxt1wNHjZMGZS/YAh8
cTVM2K/Hw0sQVXYihsAcm/0O7w15+Pa8WtJvSgSsdP9teGDGwxylX73mrVkH
Fb0NlcH2PHwaLNOulbgW8t1vZ02E8PCC4Lr3jltmYPJei54TxsNDXzr8Gzhm
8Mgpi7PkNG9mT8vOPcOYQoNt/pjleR6ODTx60OtpCn1mFRbxqTwsaEDjHatX
g3cRxqdm8jCRvakvbcQERlfWfCrO4830b06CTJYJCHWaoj6W8LAu+I87K1RM
4CfF9mb9Jh6G7ql+o6z0C9y64K65rnkm76sqj7dtbNCR6Q7a3MrDcyObX0Vd
ZQNb4rPy0S4eVrhcPFyjygb70Yk/asZ5qFf3JEDN1BgiXshTHktpNM94H6Gv
bARSNomb/NVpHNTKeJZWshIu1CjdjNShceTLnMT4rSvhRrmKVZ4RjR1hZsap
iSvgYfbPcdR6Gv/qCeDQWobwLdJaPdGXxsj0/GC5cAMIFHsekOlPY2J/SHjJ
KgOg/3SoKztKY0HWsx2BvfowN9DF+1M4jXa5oTaqtvqgufuP4hVXaJyybz+X
r6kH28gpm4ZKGp9Xd+g1S+hA59Rn+adPaeR8bcoR1miDV77D+0f1NCoeKmTR
Udrgq6a6r6CFRtYprb02stoQIV55+u8BGs2C/ey/aWhBfh39eI8cHw+9K6Vv
+WmASZhX9M5FfLRo6W/VstCAMtMme1cWH93u50laS2lAbVZyp50GH3Xri6S8
MtThQ+wamr2aj2dr3xW41qvBbIejq8U9+Oiaxu0x4y2Ds3O6GHo3H81dt3cu
zVgG8lUbaif38bFKJvMDtXkZLFm1eOuXI3yk+iMHbuQuBaNFxUeaI/mofiNh
N9tnCWxvG8u7eZePqhEaKf8o/QSf4t0Ckwr5ON/8ZMhAMwv2WlevTXjAR8vy
0+49sSw4UnqxMfIJH4vHOCUmYiyIvmY06NPKR7+7ZZukpxdD4c5DmmsZPjq/
1ZhlP1sRvEpGVW6LM6h5LvOFYa0CKMoGKc+Zy2Dhv24qLZEKcLTsxII3Cxn8
dnlDi6eUAqxVjBEe1GNm9rI41/OnRfC0Ma0j2YnBg3d93f51WwCB6rptom0M
OtweXCOlswC0j+W07PVgsNkwJiGnRx6ite83GB9g0NnAcipFUR7sTlU+aAxl
cFTuXIZZrBy0mrRf4mUzeJg7iJ9zpCHqnHu8Zz6D3E6jwh9O0mDa2xVbV8Tg
SVat5jzBPLh6YSA84TGDYuclfHY5zwOPr+N+Bq0MgoxUvr28FHxOkbNzE834
xZXezC6ShKTpixurZgvwz4Wt9Tt8JcHGXtFKR1qARlR24ZSOJOTSS8zHFAVo
WMoiL67PhsMu+nqxywXo+aLu+bOEWUBJr59V5iLA1dUD7OkMcVj0ff7lp9tn
9DWBTY/8xOHnlg7tF54CPE6b1huYi8POpICN3QcF6Od6x49qFoMarbRYyTAB
xt83ilwlKQbx68QXOGUKUKJcdfKAsoBkq7287Z4nwCLVw0qnnzCkWiLZeO99
AW5bPwKVBxgy2bBqa0i5AMVHV4RGV/DJdpddf996JUDNDI73Un+a6PhVLRue
FiCHld5Fy1AEtpy7N8kXoJ3LpMHLGi5xNdkGQjEhestu2XXlJJecpb97LpQR
4sJSjx7B6DQZjVZNN1MTIj/wV8uh/ilSkRJqEGktRFn3+cdVuROkLcK2/DxH
iPnLugqNKyfIj72L7ZK2CLEoNU9BKXKCaBre8811F+LLvtQOW8UJcqa0s+D1
YSFy7cRz1WGcOLVYmKpcncGdd+sqS0aJtIVMdcVNIQac8B5KiRgl1RkddjvS
hZihUmq003GUrAo5vvt6vhDPtlxPauz8QearPYxTrpvhHWyCUw58J89iolll
TULc72g6cEn+Owkdd0lzfS3E5qFmWaXSEfKtbvJh0kch6jIjqqVyI6TRl923
eFyIiR840l1NwyS8TdyvhCvEvdUpE3Whw2SNZQvlLBDix0TBcxZ7mGQqHJl/
WUqEvpzNaoO3vpLI8nvmi9REeKvEtyE/ZohYShlcnM8Roeybo9Hs5EFC+VNL
8reI8J+g2snsXYOk4GP9HfttIrxv+YvfBoNBolqw71Gclwhdku/mdFd+JoxL
xmfp4yI0f1SgtHxygBRXBfrnhomwcXLK16t2gPgYrGdsI0UYrXrTL+3KAOlg
ehbGXhChbnLCcn2LAfIwXY3MzRShabLd95GEfuIn96M+M2/GL9UgRHCwn+ge
e+y0sVCEaZy5ZyirfnJ5k8eBqAoRSrTrFqVw+0jA2LXEWW9FuMA+49o+nz6y
3N1bNb1dhBvvP9QO2tRHemrNc6y6RGiYNibjtLyPOF5tf/zXkAit06Usg771
EimJbFuNHyJUO/A6pOhVL6nyOdb6ZFKEd1UV1UoLe8nRdxs9d9EilLp2afWp
K73k/39oyLknXfW/P7T/AI99yyQ=
          "]]}, Annotation[#, "Charting`Private`Tag$635#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
/tD+C++LXXM=
          "]]}, Annotation[#, "Charting`Private`Tag$635#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
Mo81qNHXI/aap3sHsN9kx93SraxDtQ0Udn2duB/RfxB2/kcd4lTxL6zF3iQ7
sUDnWId2s78V52Gb3/kQ8o+vDh0RI52MwP61LDf9kbQOXciJpw/EHvxMdtW8
oxb9POE79gabHeYF3vxTi7Q/Nzx3wFYffj524m0t0leTRWbY/m9FL68Z1KIF
dt88I+xK4Sm/uku1SILR7ZkmNnTQu+AyXoN8s96S3cR2PMH2TjO/Bj0kRPYS
sdOKGnpEQmpQUL2DxQXsWRNvUWrLGrQrfyjjLDYvw403AzI16FNa8V8+bKPU
3faskzVIlyb4KRd2qGamYMBaNfp550DnSezWHSuXJ3XViJl8ZOcYNmOkQLPU
z2p0Jf5oOxu2nOzImWOvqlFO4QuTI9juM+EvltSrkVD1aCILdl6AZl2VcDUS
kL0Qz4y9fpHpdBRFNYIX1e/tW6ynys6ptwqxcUWX7vup25tK1fQqpE9zfWT/
8zFn4AkhvyqkOj2cuT/+QPW6FfnDKnSpGl47uh9P65SSHmIVkk+gcmbfjyfr
06Pph6tQvd+yOcd+PHO5zfxmKhG5XSYz9348DfvyH5ZUIsEH1E/5sckoP7PA
sEoE3EkcRLBBgrIJq20lqucnkbiIba9ElzsnX4m2LB7GA+yU1RJCOVclktEr
qtuPv1/cj0KwUYEqqS88vYttqvfK9m9NBTo5Ud6ujS3LpMsr+KMCmd+eYXmI
zVV6qeuHXQW6M8bHYY1N4njY7+jtCuS4+GDLGbtHaPGq/8kKlHtBPcoHO/hj
fMzL8nIEu57qxmFb3/LSWg4tRz1L/z3Jxr6z84DO1Kocyaf7S1VhUxmfsNb8
rxz9OZmuNLe/Ps5/IJ57WoYcjUSbruL1rT5uNh97tQyNd9JzamCfC5WL5Dhc
hr5UTZw3x54+SEbNkFeKjvM5RIVj6zXZNY8TSlHN2UpvKrxfJT1VPPWHS1BM
uH8/FzbrZRHJ1swSdINffOEadv2PiW9FhiWI93jDdWdsKWtd0/DUYpTek+Wx
h32CR+LEYa9ilOMR9/UUzh9bHYcbvHWL0cPlI/elsdOu1V1wIC9GvoEDFD7Y
PIekDqhqFKHGJD2b0724304+85l6qwB53nmUboXz1+h9MnmXugJkUO6gGo5d
xDqwuxpZgNiHG95XYTu9+vJgWL4AaWsHtZzB+XBWkV4EheejqO1PlmPY0V0j
vhPueehYduMbV5xfO52OfAs7l4e2JI9/ScVmOCGTrDT4D7kfVeIYxbYz+NWY
Bf+hIxf1neRxfr458oT13WYOolS+cPsEzu/js3MR/JZZ6G+VOHnLCD5PHNhM
NdVJQ1Wbkg/d8flIL5K/5CRNGiLNf9RZgB0grdPalJmKPrxQ89/D3vTIXb98
JBWVi6dnv8D1qIr2FZGu4Q8qOznRvX9+auen8tPyTUQWHlyLdvj8dE+JPa3r
fhSqmfvIHIjr4fTSioRtcSSKu/lUqRnbKbgOMXBHIq3cytDDi3h/d7lVXRv9
jvbeGqqHYKdVNZbcaQhHlmcL+MNxfU1afnp6vDMICX4QoojD9bdWguPssdBA
tBdt/ngKe9a5SVLxXgCKPOv1VRjXb02mZ1Em6D0yOlD9Jw1b5TLDAdKKN2i5
ZYolE5+3AkqeHX10+zVy2SxYWcGuv9MlUlPjgnjVJBYv4/PXibTX/g8jnFDZ
TxYbd+yv5XeRWPRzNF5CU12OzdZzfHY31hoNe1vYU24QoMBQi0TwPVN0uDV4
CWDz0Fl+En5kiFpcmjPNsF2aeZuPFSkgJxOn6wHYgoSeJ+RC56Hx40GGeOzW
BbdvjOuakHdGcDUGe/7OmUUL64fw+n9FfS7YLwJvVpqet4R0o5z/3cHedXb4
+u2sLfwnmKfNvD/+k4SnTfyO0LuSQqMOz++geh+RkucVTPxqXrw//yKOt55h
jG5Q3+mRpji2ezCn5UU/d9gse798ED//TbpczQZaT6jlpVIWgE3ppnbN9O1b
WPJBq0AJu3xtlo+c0gdWhFHFMmI/esT/MH03AMp2fv9Ni+ObRfOipdA2Eh7O
FvNZxu83QuhwUxJnFHS3MMz7je1xN6k+tC4KBhrEkj7CVg0eqrLji4EuOWRF
Hfh8PX9KvpC/5xcUfXrMJH8Ox0/ieFKAdCKc4DgzF4jXU0WqvvSft2nQVL/r
rSFej1dKBIvO9KdBEc3L3zmwk1s3roVf+AunvuVR9uP+KHgjEHoP/YWXt9gr
9LEfwHJJY2IGrHSvVrqP+6G9ShHRowtZMPP+i5NOeD+ID5KecNVEsK9gSpEU
7yfhbI0FkVgEvdk0iA0DeD4Bv4v7NxC8ZUf74zs27fcE8QiFfMj716fpOvb2
Xc3uvdl8KF3ose2L929PchIfEi2EFAFW7pJ4v3eGajOzahfCsuICaybsVi/y
HXO3Qpj2R2NqEuePWgOd+hNNhdB3afhVGHYeI+Vz52dFUOmzmgY19jdLvWJi
RjH0uns6cxvnq1Bd6sSPfcWQnzOsoQc7RDbt0wxlCbySYeuBsP05aEzDNEug
RsxuyX5/41L/99DORglMrJTNOILtlGuwpcpZCq28DpVt43xq/4t2JEGuFFZS
ujoMYVu6GGbqfi2Ffx0/VaRgG4rQ6+deKYPzlczCWvv5lz1TlsW4DHaVXDaV
3u9/qO6LPfXFv3cwUhLBVu7PJGfvLYPJt8yP0WArVt+fs6Eoh/dfp5Gs79fn
TIaOKuFyqJqS82EUW8r/QcKLV+XwovXN7JL9eudECG76WQ55o06qpmNLmmS/
Eqgvhz/GFUN/7tfnq4wqXRwVULZvXGK/HgkL5lw5d6sCugha+r/C5md7yONt
VQG1Cj0+2WCfns/ZkCysgMk641n3sJ1qrrsvz1TA31netCr7/URcFUPi0UrY
v0F19ha2iJfK50c3KiHh1hjXVex3xl2nT1lVwoPNv2f26++w1P3EztBK6F42
9Ha/PhM5pi4FlVdCnbuMm/v9S/COdZHCciW88zUb7Pcv852bCpQcVTDsSqjW
yf8/v1t7/u0qqKNnJ7ffv0R9pLnv+LwKsnxnOrTfv+xaB8yci6yChXTlvw9j
a9z9z36mtgoaxM5w7PcfNLT8vgY81VD944j3fn+SVyLxo+llNdzqalTf70fY
IgsEfWOroVVZDcl+P2LtcivjZks1JOq1uO33I9X3Gq6RkNbA8hCGnv1+hPuy
VnWWYA18ZRFO4MF2ZhtQt9GsgbWdsf8JYrevmAwIutdAjia1XbH9+DfNm44m
1cCVqcO5ktg+yfar37pq4KdkYZXr2KO+JK5alLWQ9cxeoTz2VVMvWuZztTAy
wJ5WA/uLLGNwtV4tfHrBR3C/n1ziDuHweFcLI9QEeMyx5Q9yxMP0WmhxTmbd
cb/f6v8pvjFQC0l2xSO9sLW/Zsg9laiDemLd7jH7/aU9bOE2roNsVu5Z++uF
Qb1Mv8+/Dvok/C0pwy5gbHumPF4H/5ZG3p/Gpn+etEdOUw9XttqX97CzjZeK
B0/Ww2zB6XsseL2yXH9xJ/R2PVQwnUmB2AWiiMXBsB5qCKiGqWObcxzsVHte
DyfUdHX3+5PynXcPCJH1EI2bqEdgv8j84uC2WQ/BRQMxBrzfeH/2An3GBph9
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

          "]]}, Annotation[#, "Charting`Private`Tag$635#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"P\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\
\[Omega])\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {0., 0.00006110801289701985}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822795117827115*^9, 3.822795191251257*^9, {3.8227952236684155`*^9, 
   3.822795231535635*^9}, 3.822795290567951*^9, {3.822795333291196*^9, 
   3.8227953577617908`*^9}, 3.8227954333227253`*^9, 3.8227956379795604`*^9, 
   3.822795714408312*^9, 3.823058468953636*^9, {3.823058506695364*^9, 
   3.8230585134241877`*^9}, 3.823079300901408*^9, 3.823083242273003*^9, 
   3.823085197127571*^9, 3.8230972516755524`*^9, 3.823098628873499*^9, 
   3.8230989034477067`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
XsOrrz6cuuWogp5lJ6cGiq9h/Y9G4SJfVBDbTe1GAaE1nNVEPzHCfBpx/k4Q
u3RwDTvvMXttl3Qa8cWf/fuBbg1z8etg60lVlKg/t12Duoo9emfvVamrISHm
GOmO1VVckxAuLhyjhsSdpv1Yplexl0D7y/7z6khBPULhdtsqdrRjLvxTpYGK
VsBy688qviN3yv/KUU2k/GE06OXvVUxed7jaGqyJVPaRBr5/X8XOgU3L7VfO
oPMj/WF8mauY9yDzw+xd55BFkMxMm88qFiqgWYmou4g888P8ft1fxceXTfvO
ndVCLzvmeb66r+JjSp9qN8q0UI3Ex3PpDqv45Je7CVa52kjul3KSq/Eq9lev
Ak4bXaS9+FrJ9soqftw7bTD3QRdZ827WXdNdxc+99jvUzemiGHu8oa65it8W
2cQ8oVxCDKzqBntlV3FO1dYfw1w9xHc8ZYJBchXPL7P38NJeRifNGB6tiRDx
iYpM9OlcRo6Z1Vm9vKs4KkCHzn7yMmrT1mLOZibWQ6r1Mte+gjJCDEou9q7g
4jfXdl4/Z4gqCwv1VDpWcOWlkw/Csg1Rb/f+UbnWFVxKf2DuK5cR2nfsHyf3
rxX8zb6plW/ICD2oN/9vtGgFp3wwqRbJNUHRK2X0nXkrOGN77A4XUVOUzycQ
U5+5gmuNerS/xZqiEceB6sLkFczCcLPZNPAa0ttjI+AXuoK5Vqya9KPM0R2l
miKPwBUs4Kgn8ZzNAvlbHtWx91vBR284T7npW6CSnEmyPmUFX7hY4KTRYYGE
9JyaBaxXsHiBRrYhsxVaCSMHYFjBn19uuxQWfQMN83wd01RewarXKmcH12+g
llQGrd/yK7ha8GmY0rWbKK/4+Z5OsRU8nLenqefwLeTQlxa9tncFD/1Yzuxo
vI1M70xuPGQlru/5rbSpao0uLMmaMzOv4KdLKeW8edZIlKX0yP6tZSx5RL/d
7IUN6pdpylAYWcYLDAZzDc/tUOPnA7u/9C3j82WxUSJ776AyDfO76p3LuNBj
WOV++B0UazSmcLmRuD73Z7ddlD0yfEiDHUuWcekG1api6j/0u16i4X3oMvZR
k7nv4uOESoyd5OQCl7EMzfMrX/46ofcDhS+LHy/jhpIZSXppZxSwomr8w3MZ
e6bce8kx7ozU+Iz6h24sY62LPZvhni5I9l2shoP5Mt5SWOdy6XJBfPIDaYtG
y7js8D7ZK6quaOvMf3fodJYxjesyWUXQDRX993iRX2kZdzgxObDOu6O01Zqr
b+WWMXNu0NjXWx4o4hFb8TGpZWz3LvR2QKcHcn712guOLOM1cmVV2agnksI5
jNd2LWPqIdkAmW33URJr14HI3iV8tcDkY0CvNwozAUaljiU89puiLnrsIfJJ
j19oa1nCqpqOzBMBD5GV6vU67tolPCd/9YWzsg8ScB3xjfu4hC+zC6X5vHmE
2L+fc1LJWcK3b0SmwNYjtI3tvXnv+yWcdeKF6p2bvqjvrb3ykYQlDL0BlAq5
xyixc246NXAJm8nem3Gr90Nh4vqdZ/yWsCwrk6zWGX/k41ZQM+JNzH9HLcUY
+yOrPe4p4q5LOFy0ONAlKwDxa2waZ1os4US3JunYl09RfAZjZYHCEnbiTRIQ
2x6CQlet8wyOEfMlVyZupIQgb82a+GXxJezB6bLHWjAUWfQEkZX4lrByTOTz
k1Wh6DAHu8wXliW8WTuybS93GGK1dD5kRr+EjWq+CG96hKGtD007qNRFnFwV
dn74bxjqOvNqSGVxESt9OxX2OeIFiiXzxJR3L+JDa1VH+kVfouDq+09uti9i
mfEt/PLVS+TF2e3K0LyI1TsUTM8yRCCzrIRLZ2sWsV1pUviH/gjE2y/MWJu/
iBNs5Pf+xJEo5ryM058ni5i0eP9X6EoMEtxxvqbedxErGwUon3v8Br3/aSXw
+8EivvwlLI2WPRYVXwxvrHZZxDaP0x46HY0j6suybKnlIi4tjgzPrI5HFrvZ
Aj+bLuLHDY/Yew8moJE60f6iq4v41IhD6F77BLSia/wiT2sRv+XUCHLfk4j2
Xf4yn660iLm2rWt8dklCsXtbLqTKL+LZmD22tc1JSKhpKilJehF3KYoGdyok
I/krfPqxQos4xf5KC3UxGeldfZT/Ys8iHtP/xvX6RSoKMTnn4jW6gDtcb4SI
K7xD+3isfpEHFvDzcPWzvkXvUGyHp5BH9wI+mitI23XyPcq8ltHs3LyAzScH
nJ6rZqBa893Hbb4uYLn/+ua9HTORPp9o8K2SBZx2LPKRPEsW+tejMnS9cAEr
zWntHUnKQmOWThFmHxZwXLFpVJpdNmK60bx0OWoBX4icmKnLykGhglPal8IX
sHXKACKSCHENMqRphyzgV7kdQZnXc5HwrRNXzz1ewAO1taLPuPKQhvXrQnR3
AeeE0Harh+YjnzuW7mLnFvBteY8K0/FC1BVsFlOstoApbrZzrHeLkHKOSdkF
tIBDi00Of10qQnOLV5gc5BZwkQryENpWjCwfnI/M5V3Ase4/PY8olqCShDMl
avsX8ILj70clf0rQ/nL1nib2BSxp0xB0xfELqmcC0WXGBRxv1Brr/7YUqYTJ
FZ2cm8dSX3Jye1PKUEz+sY7aiXksdGsrMpb2K1ppkaQxG57HPLsvPDC59hVl
c4ue9e6YxzssBy40c3xDh1N4/pZXzuOIv+eUBNK+o61C+hWt1/PYcNedQmWF
KmTcvo2n++U8tn7bLwh5VejjBhUcQ+exu4ZJmJpMNXI4veYf9ngeR90/b39R
8gfqrJniav1vHrt5ax4+bPsTnZgcP2ltO48fbw0/6Nn8icJ3j5qv3iD+pzzp
SXheiy7q96dxG89jU/faBMFPv1BJZ6uihfo8Tjurdk9Lth7tp2k2mUXzWO6A
tdF0QD26J9D4wEdpHpeOBqHn3fVI4nZtVbLUPBaTKWc5GNyAYmbKro7un8dH
GpKMngv+QeTt79ycJucwnZvYpHdCC3KIMmOwGJnDb3en3atla0VW0ntfavXP
YaV0wQ0u71Z03oSSK9o2h32Vlo2p9n/R/jztya7yOcyEXjdec29HO89tp9Ti
OcwDvo6La+2I2lXIUlw8h8+r2LM+u/8PDbHwi77MnsPypdQrDC86UL7VvNWF
mDlsvCc/RnilC6WvpM2eeDWHOYQtMx2ed6PXwabewmFz2JWX0cKEswf5FFe8
oQ2Yw9FadjWyhT3oEnvk30LnORw6zSHGfrgPTX09pS14YQ7P7Hhw2+z4IOq7
OtuxR3MO/1NUu00bP4iaJ1PsqCpzuP064+1k5iFUcmD3k/bjc9jvEOZeHBxC
gXd7v4cKzOFHmyY3xFtGkBdjhJ4X7xy+ovDoo6LeKHJ6c77Xbv8cZrV/x6Tx
exQZ/8jb0mSdw2g+f868bgyJ8vspba7O4k9OPfrq+yYRT6Fy9djCLH6qZ2e/
mTZJ9GvTBn+nZ7Gb7NLjj0pTaMnd8F7e4CxO+agpVHdzGpXXi2fZNMzildiE
vWeYZ5Gld51gS/osLhCf0hxfnEcGbXGoM2kW66w9yvY1XEDnZR0NB2Jn8daP
AwcPfV5A8gNsQXPhs9jkKmmHis8iYjqrN8/6cBYL69IYfb+0jDbjBXbto8xi
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

          "]]}, Annotation[#, "Charting`Private`Tag$768#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
A4j9eaL3K3gjHRxWKOyPgwM9vtK1ZsH2A3VWcWL+eOxL89A1mSw4WSSQviHl
j8s0HoudmsyARzPfZOpU/LFwxPJ/aeczoDKK209O0x/fqzFz3fkqHeaPOX1J
0fXH8ywfYzwY0kHoZznTDhN/bKXPW/jH7iUYXmbTd7X235zvC4q3KtOABbNw
Nlzxx6T4emARSYPAPSrlL2/5412Kr85mhb6AuYEbDj4h/jj5T/Cv08PPweFD
2m6dGH8s7m+p/0f9ObSHt7wXfOaPPwrItd3MTIXzFjusl95u6v/KasXCmArl
xxUZakr9ceEvyjfdxhSQ3OKUnVrlj5vZ7jQGxz4Frnb5bw3t/njOWLHrvWEy
vBYu+mhL9cfsSeMjIxxJoHxDLn9aKGBz3302z9P6BOrL32cFngvA+iKGW3Qf
J8BF5pPP2FwDsNs1hl3Bpo9h/kJhXOqjABydU8L1fn883EmTuSdZGoBz5q8L
jfx+BPun84MregJwnaLACZ7kh3CB/4lyFl0gnvRvUtKxigVScZ910+VAvLvy
jnoQfww8TCli9WwNxKbsN186wgN4dft+Bbd6EH6c/Ptj3en7UHHN7sbH90G4
9fDpJtnKCGjTUxS0FgnGHHmZo4nq4TAhx9q0JS4YG55iodv6MxTo+YZC0uhD
cOy3m/uvnA8Bnm0fZdVvhuCzl+ea+2hBYH60QbTUPwb/Dx/tE38=
          "]], 
         LineBox[CompressedData["
1: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
GNYkdg==
          "]]}, Annotation[#, "Charting`Private`Tag$768#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
sGntj59ueYRN0PiD8fF6kTyfMPx/tdwy7w==
          "]], 
         LineBox[CompressedData["
1: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
VxLc4SCrR+yvvBHQuqkjVRrlDgZLkDZeOgJtW2fNRN+6w3JObYlI8wgMq0yX
Mfm6g8DZzuG8zRF4mrF0Y8LMHewPxsy2Uo0Cw9VlFWZDd/g+a7K2dnAUEpaW
JWV13EE/Y+KAPN8oNMiuMr9C7vDy1Lp45eVRsB9TtDt+3B3+8bF5tXwYhSOs
fbS2VW4gS0h88jNlFJJjaThyit3At+2sZW72KEiJSIouZ7oB+ws1reDKUbih
FKDjGu4GaM6F48rMKETUS/9zs3CDl5f2M8mtjoLNrO3TSX03aIkLpRQmjQIw
ftzTu+wGVrqfpqhZx2BKh41JQswNQgp7Cn/KjcFYdPEo/7or9DBbZ+SqjgFL
dJX9iwlXEHiwEhuvPQYoqnlvtsMVijkP+nuajcGHiKmjX4tcYcgHuyEXiD+f
/O4+4eIKkpoJC7ldY3CUa1rdcMoFPFJER+NHxkDBgZDA2+YCNXvFHcFzY2BW
x7g1XuECRrnE77YU45DldC7DIdIFfNn2BQkLj8MsN9dJBTUXaB20FE5wGYcf
rNf51UOdgUdumTPk2TisqV+gU3FxhvvvvJi9XuPPJ3es5oydYfdi5Prt+HHQ
P+XPr3zGGQQy6qqO1o7Ds9TI6Jnqp/DU6YxZCPsEWGxVND6bdAJ2+oUyfb4J
2OxQwujrnKA4/ssxHtEJoCF4nqJPc4LdBrnmTOUJ4P+1vkNn6QS+fBrQYDsB
ZjemU+iGHSH4rwU39a8JIET/oaSqdoBU4bhu98eTsG+/2Z87RvagUW4mo+I+
CRsWE1L1kvYwfUPwLZ3/JCxUP/wgQ2cPot6ZGlEfJqGA+d9fLvvH8KW9pOhr
9SRMfOT98VvEDsp9O8MXOacgIsPUTTLyIXT2sVy3qpuCE6//vOd5YQVXXlt2
ObVMgcXGOcUFzArK5EpMnvdNQfa9qNGKVUtIiLj3MGFxClQV750zM7eE+zqF
fj3HpkGYodLfWs0Ctn/dLrr6YBpSW0bu3eYzB1uHXMzYcRoI6QrXPAfNYOAE
ddVDz2nQ9XovHx9rBpWe2c0v307DrojaodHjZvD6AuVM5bdpsC1S+GLGbQpc
n1O5LtDPgNJ1+62PHncg2HAn6dKRGeCLuqi3/+AdoDigI6LHMwNUA8dyzGNu
w5jFlsyTczPw68FPC94SI8ji0br22WgG4pcN8jYPGgJ6t/SM9zPen+fROz7/
bkKuktoBsa8zYGvDzqrx9ibwL3wIVqyYgahbbHXMMjeBRutijGHrDCxKHpaO
99CDJurIgrCdGVANetYfwn0DTN0UJ2m1ZqFKtsYm8IMOnLaoa5/Xn4WJwp0I
gqYOrFzVq2o3mwUuG/OA3s1rECBgm5jsMgt55rIXUsquQmYTPunkWbjpV6Fo
Y6MFziWnrghlz8LfnhvxmoOaAB/zZRm/zYKe5BTlWT1NaHH/zdb7dxZuDLDU
LmBXYEtwp8l5exZkGViS1hQ1oJLlRbkx9RzcEJvSVf6lDkE7rFkXWebAQvcH
5ZvL6nCCePoVq9Ac+Efamwnoq4Gah9HFbN05iN3MLrsbdxHetXwrHk+fA9e6
LcZhb2W48/1SWmP+HHiu06izCCiDYDoxPL98Dl4JHPGBOiUo9px2eNaGt/cR
W45lUYIB4eNnuSn+Qdh9KcmGjxikH/7IuZ/hHzAHF2vI0GLwhCRBP8v2D6Lz
MdOE+4qwv01jsvjMP7ir6nhXUkYBTnu7Jurd+gdCPTThrIflYPXB/lAF839A
rHg48uqVLHzXC/Xif/QPAj82i++jkgWd0+m3F33/gcXA0Yo2qgvg3N7JFpSN
959rfbbnrAz8OnPh1S/qeRjJyOvNGZAEE3G95CXmedg9Fxc24COJ/x95UsbL
MQ88pa80GU9Kgqj853mC2Dyk+OoYC3lLwHsN3hvSt+ZBzqLS65KHGIhpKdqa
m83DemlDzq/es1B3zdA/9OE8fDncOqSscBb29MOK5rznod/lfgAbvyhYWdJy
fUyfB5nMaw1peyJA8UBApvXLPFx1u3w7yEkEPtgqX6X8Pg/Waqpz9rPC8NeR
4GNMnIe02OzAwO1TcMF3YYxtex40Ql+lRAoJwYH4zqwAzQWQ203pez7ID0lJ
qzUFNxfglzy3cwOBHxRTDw2N3F0ALbdw5kPH+ME+S5MVnBbAe5LEkWPNB92l
Fc4b/y0AFZn92vDhE+BU0RcimLYAJXTyxb2evMD0ayv9Rt4C+LCptay28oBK
g1RvTvUCrHzOULRI5YaMrjS4P78Af1XZl37f44RLfVUGEZsLUCQiOSDYygGL
C4uy5pSLEM+s9dtbhQNerTBeD2VYhAWPkfxmpeNQvq3uN8e7CFn/HTV/oHcU
hOjKplI0FkFxI5dKfPAwLNeK2SRpLwIbjeURX9fDUB6QOBt/HW9/5LhQ+6HD
oL//xfyHO4swevKlY6kBK/iTdVdD7Reh7K67pekOC+iUVz0NfroIFfPriXQp
LMDleWHjtfsi5Hk6DnzRYoGCba7tAL9F0D9N0cVuyAxja5Nkj6hF+Cu84dBK
wwi5BUbP3GMX4eFUQbSKw0HwcPxD5Zq0CHTpDj/y+hngyNIXasfMRTBIY09P
raMH1TlPhgc/FqFUQZag0HQAkkYOH705tQjl0hd9+GWowS4xIOr6v0VQI6f1
Z9bvB3nTreM6y/h49QwKF0z2Q0v/AJfm7iJEqR2IEwjZB5Tdn/iVWZYgXVu+
L4SPChojuVIQ2xK4N9V8Pl1DCVH6IYKKHEsgp3uDUG1DCRJtTsIXBJZAh98s
uqmIAkybQOys7BKwND6jLaYkI9HgLzmnsSWYy8pTRFYktKklKCmssgR1IcNP
qhr2UEgDvfRJrSX4RdjS9Q7fReXV7XLHTZcgaPs+h73fNuIue3iJ+uUShP05
m/4mex0dOb69bfdmCXqudbUTpNfRQeeXuV3vluBgi+8+m5I1tCv+kTMzdgns
OjpN1GpWUU/ywNL1/CV4J1SzWii0glooHqWVFePP3+xKdZUvo3rjnTtC5Utg
vHrOcUt/GRUfPVa3VbcEFAvd3v1vllDEa924hIElSBpg5FcXXUTBU4M36MeW
YP9XGbZfaQvI/5IdndP0EoxnXpvYWJ9HTuRXTuqrS+D2ou4VbeY/dN2x6so8
3TJ0G2mS912fRUy3L2woyCzD5hlnS4sjk4imuDrzo/wyfHjAl6/0fgLtHdEz
Z1ZaBr20RgruIxNo7q/9n5Ery2BxOGLfF+lx1KCSkRxougyUMvF9Cj6jqDJe
1nDFchlMPIev8xweRd92a5iMHy4D9biFT1T6CEovHHWTcF4Gffo/3MXzw+jF
aW6dztfLMKUXa7DhPoS8XnymVn6Lj2+te4qWZwg5j8mVZkQsA+l9erDvu0Fk
Facv5JW4DA+stziJNwfQRdbQXYGiZXA/GHPerq8XUWxTfXIYWQYpF7chFNyJ
TEe7V7wnl6FJteGPwLFO9KMxF72ZW4aIL0ZKrZkdyCfepC1tfRlOhhIEJTra
EfliCbmPfgVuaH5fmBZuQyZib6/MMK+A8sp929eVraj86P3wjSMr0JS/eZbZ
uhV5zbCdYeVdgRnpY3nsuS2IFPJEX11qBfgu3CoSVCEiEzeNRD3ZFdBV68uy
nW5G5ea8c2bYCnBQ/fvxKKYZecn8eeahvgI3V7j+DpKa0F6PcFbe7RUoJiZZ
TQX/QbuCQ/u4/Fbg0djH3l7denSHueiqSOAK8PP+8SI21qGyzTfR54NXoFwx
VO7k7Trk8VtBXDdqBc4cCDwk5VqLduwjjQIyV4Ar3v3n9S/VyMjI7mNY3gpM
73fJ6lGqRiWqlxYTClfgim/sVZaBKuTOvuJf+mMFJJeoqR9zVaHt0qt5i20r
QNHU8UQ0uhIZfRTc3eteAUcahj+3ZStRSfCuGsPgCpBjayQCRn4iN7OMPsHp
FahYLQnQwH6iTRqaA7f3VsD4orrlh/EKtKH73aRacBWqX/YfpTUuRb7dOf3o
zCpYsV99LFlVgpjMku4US+Cunxa9Jl+ChOxfGH1WWIVBnbQWHZlvSC9YV/+t
7iqQ7/Lz6J0pQkNsF9vpb61C/4MdY+vMQvQw9rye351VOFlDubCmWIh8Mzmv
u1ivQowX06HDJl9RbsO4trHnKgQtnLqpnZCPFK93NXb4rkLNjNhDHcV8VNvd
oKnzchWe/XzWxdH/BQ1M5VxWDVuFcbtT+Tk8X9BBWvdLIp9WYb/jW+WVlFz0
QJUJW2tbhW4fVYOaS5lotYGizK5nFSqnDoznlnxGPtdX5KcGV+Gdzt8nMeKf
UZRZl2zvzCpInTB8bX88A9V4J0n/pFgDs5Hznzxo0tF12vB8eZo1cKMLr3gd
kob6g1+cK2BYgzSJlfYPx9LQaqytRBr7Gsx55VB9O52K+MvOi74RXYOR9b7x
0EcpKFtV5DPNuTX47jgu3kGbguR+c572ubAGnxf/uXEmJSOdHgphR5U1cJoh
MaZ2JCGvzYaThgZr4MtFm2ljloh6pe9yCvqtwSCTKZ15VCyy2pJh9g9cA2oX
TuIBmli0+P3gvvHgNbg02BGV4/gf2q9eMpMSvQa1OdrCe1djkJghW4lAzhoE
9FxjL7scjYq557L8CtbAeFE52LQxCqmMVCaOfVsDGRppGuprUejWQ/vAlKo1
+CN5bF1bLxL5eP42EOhZg0Vpvt/d8eGIXiVJy29wDTKwO9Y20uEonMZNaWxs
DY+nyH07de9RRoiQcMrCGgxbvfwsthyGWhOfbZykXodbY7219c/eIaGaCxEn
JdbBZ0eFLqYgBOW+Ynr1XGYdvG4aLgaxhyD5a+Oeo/Lr4JnzuNPLNRhd63pn
mXxpHS6PpjC5aL9BrjP/pE/eXodI5ejcn2KvEVVOlfBz03WQNGQ3PJL2Cr1x
jOEatVyHL/ZhlNa8r1DSrsb+ZPt1kGCqzh4WDES/mVJa+QPW4QPPKcrYGy+Q
fqt7re/rdUhJqmhnGAxAQ5G6pSOh61AlZJDhbhOAVk+Qk5Ji1uFR9USvwgd/
xCNl5MCftw5raaMl5nR+yP4WyyH+vnXgXWHmvC3/DJmni38QHF6HJTLr5aVp
H3Rz6+pJkYl1ELUjNqjF+CD5mDcyEovroK/FEFTL4oOoB+mN0P4NUDhE4nq3
4Yk2xU+PKtNtwK2FCwOsjzzRjM9l20tMGxD650l82IgHauZ/6aV1bANS7Vkn
PFYI6IMVdbKR6AaojbsV/mFzR0FFAqImkhvgXhk2YxbnhrwPXPxqdn4DIuKz
eNaF3JBFhm/tfaUNkFV69vuAvisSnyfPOuttADPhbYdYiTOqerotHeaxAYaZ
j+kriY6osOZ4ecSzDRibWK5oc3VEn47KqX8I2ABjPuenk7yOKPibi2Fi6AbY
ZtzRGvF2QIZ7q545KRtA75dtaqP1BGldPUKb/2kDHm1XWgaR7RGKlwotzN6A
IftOm+wv9khA2SHpe/EG3L9rQhsoZI/m/RZqfjduAIouEheWs0PD7Uw6TcQN
aLy2XnS24BFqExLrbunYACMaGSUp8UfoW53tbPfQBnDGBc89krNFfgdnmKdW
N+AjrVWEoa0NOv5+zGA/9ya0nwm0e8xjjWSf87I78W+CVZdW8pEvVkjfwah1
9NQm0PuzdH27ZIXe6TRr/zq3CSo3FINJBEt0kLFMxVdjE45qjDR/3GeBTu+u
k5e0N+Fm9evEkI/3kMas5HezG5sQpiLj4KZ+D/nXp11QNtmEAUaD4c1Yc0Ty
DxOlcNqEEslitSl9M8T19O/0Y7dNKJBnOSFAbYYULOjSBr02IUH1/tbdfFPk
quLNVxG4CW9v7/m1C5iiJZINu1f8Jsi193prs5igMRcVit2GTfCMDl4ZPmyE
qKw9vz9s3oRDtmphY5GG6IR+sXtv+yZU3biydvW0ITKWFlsrGdqEX1rNLBO6
Bqhj8fiM2zq+HqhP/UiiPlod1Eub3tmE5QOz7szy+uhwU4iFIeUWSJqevRfa
exPpZFEPyh7cgp9MX6Te8dxE9Q+WWjf4tmDpYWlbeMoNNGUg+tb61BbIlXcJ
SOrcQDQa1lc7RbegxOuJVcbedaQi1F9XeGELyshJ0/8ZXEdlI3Xfn2pvQSn1
lHvWIV2UfTshbcV1C97kOZxPzNRG0p0nt2m8tuCRhJn64/PaqPR6mhbH8y04
n3PNAPuhheouZy8pvdmCwUxR9+5WTTR6oUwhOHELrP7zeyNIcwXZ5ENwYuoW
sJil1PvFXUaLYr+GCj5vwV/BKuqx85cRSbDBv/frFvDl7PNKstZAx450NQk3
bOH/88r/dhHVUFzIbX7Fpi2YKjd63+ushgQZBp2utW3Bt0/rhgOcaugc1cRx
54EtsPMWGx+1vIS0F1fu/Vregt+aYio9FBeRbyPzpjHnNnwwfiH1/IUyOqAR
duXJiW2IiOP0uqmsjEJ+scf6CW6D32BO3akdJfRfCbfKZ/FteGzWZdxop4SK
0s8Ebapuw6FNmUatAoSQQM4Aw+VtWBkvLByTRagq/pwk79VtmGu9kOjxHUMt
EXIdlwy2ISdHzjmzRhHN+amfCLPdBvNpak7+QXnkSPHbIfXJNhzNfc0U4SCP
tglXq785b0Oj8yEqehp5ROt402bIZxuu7OeeXhKVQ/xm9wrOhuPzfdJ08bz3
BXQL89ao+74N2T/mKcYCpFHf2gRzZeU2iHylq7CUlkbm2Vc7S2u3IeyTgOfk
sBSy5eWxyiFuw8t3RlszilLIl/L784hxfP4nmETMViTRgRIBzdCZbbj5YD+R
7bMkeuMQxPpqYRtq8rZdG8wlUdTo7UTPrW2IUpmsk2qRQNnV2+UWjDvgVudD
PGgujqS9zANMWHdg7Otm/f1BMfTtfIO2wdEdoHYtOkFrKoaq0qL7NPl2QHxX
+q+q2VnUHSi7fU5mB2L2S4h8v3cG7b/qLENpvAO5bQoB4/2n0Cuagd1tM7x/
uzRyssMpxFxxqWrVageq/u0LPMNyCnFIsN2Yst+Bi3NlMfKaQkictcC+yW8H
jKbFfhr8FEAFDZyy9YE7IPBnVkHNVADJP39Orgzega89dVeo6AXQxdXrwYVR
O7C15nvf3fgkMupY+hybuQMmohvJNvv50VCwoWNk3g4syLV9EcrmQ5bqP+Xf
Fu7AeeHYkxfM+JB9cWi9348dOEFZUdhafwIFfBCffNi2AzOW1CXHz/OiPJNH
/PK7O1D38Y7TxgYHMv+6yJ1AuQvmaYsnOO9zoCMHnY7T0O6CPOFjI/fIceT8
zZ2l5dAufD4RVvN74hiSP/KS9ODULoQ8tCs5tciOZm0YtptEd0EdWRZ5ObCj
/34Gr8mc2wWX4PqdrX3siGQXPkeJ7YIKk8CAiTAbqqxP6om+vgudjN1Jwk8O
I8cTQh3kW7ugNiZJGX/gMBJw+US0NN6FZ6aml4Q+saIAgdw6yfu7sGHw/Y/0
zCGk6f29sN5zF4iXXQZ0bVlQm3TXu630XTA9aBLB/ZEB+b++HXw3execRxmO
ebIxoPMjA4HV+bsQVPItus+fHkWFjPu8Ld+FovtssTFWdMh4ZtlOpG0XahJE
fh6UpkVMys42Id27QBMhNilaTIN+RG5Zrg3sgsRrKUZtRRrEf4nC+Of0Lnx5
ihm+uUiNJuIZNQ3Ju6AXsR5zxWofilwPVavYvwciKdUht3eokIb2ERVB+j0g
5b1/bhtKhTK2OeSWjuxB+p9zD4NLKNHjm8KnAk/vwYDG53/zAhRok15137eb
e0BUtLmpVrWNsc4zva802oNbbMysfee2sTPEHoHGu3uw9S//75PELcwk0kFt
8MEe8Mfvqcd6bWK/TiYFUnvtgWe4aHGh+TrWR2PHwfx8D5peti6tTK5h69Ny
n4+93AM6D/czko/WMOFcYuOZd3uQbV4X99llFQtWpGS5nroHd669SaLPXsbS
ef8k3P68B4PnaNka1Zaxn1TRkpa5e+DM/uzFm8ElbLVO4oZryR687XeyZTm0
hBndNI2I+7sHtAoulGE8C5iTrOip9NY9aG0gXvJ2mMfecG4W5XXtwU8j0VcP
a/5hP4ZDuqtG9oDgPsx60W4OE7Sr4Jpd34N7Ma+6bk9NY0j3ddbqzh40DvXP
vzCcxgykbyESBQk4hCSpCxqmsFfb83cPMZDgX26n5MGsSWwxgCf5Ai8JvEul
JTjDxzF6mxkpZQESFBp5cnLyjWMntQurroiQYP92NQ1n1himf/jqhLEUCV7J
3urnqB7FyuI9RfzUSfD1y8md9ywjWIfv5ZI3WiRI+dGoWJI/jC1YsmlG6uL+
+9RrUH8Y4xfNss24TYL3M7WUp2OHMAVmt718U9yb9qrXlIYwveWLwd8tSXCG
UZp+umYQe1Hcl9P8GJ9Pj606l+cAlhCTrtTjRIJ7iV9eNM/0YyVeTsRRNxIs
W2/W+hn0Y3MXD66sPyfBlbXnGv+k+jAa4a7nFIEk6C6tf5mY2IvxMqQcoQ8m
gb8vc/1N5l7sOlHhPHcUCTK8g8/r0fdg9AoMP8tiSaA+osco9KYb+5nSo3kn
mQTbFznHNpi7MQlXN7OYbBJo0qe/jWHrwqaGNebkC0gwbWt3/1FUJxavecyl
5xsJ/muSBuDsxPS/TlK6V5CgYekExZ+cDoyJtyjoeDUJJmQMKKVvdGA1LwOO
fmsgAZV7CFXMejvmuXwzyaCZBGLlNfuoPrRj0ncEz262k8CIirT/AdaOzVWv
FkX2kuCpmgxN81AblixepXJhmASJr2xpL/i1YUbRYX86JkgwL5+yxCjehrHu
u2fgPEeCPWYPd/qFVqze9two2zIJjo3f2Eeb04r5dFDafd0ggVTJmaB9j1sx
WSXipt4eCVRC9rFRiLdiC58Snq9SkcHYojd2d74FSz1sz/T+ABlc5PKFtrJb
MBNPiJZiIkMA0+ucNbsWjG2SSaD1MBl4fOKXadRbsEadgWyH42SIeZctk8Pb
gvmVZMmx8pLh0Mfvrrc2iZiigGdVngAZXhQ1lpKbidjKG61ruqfJsL+hl5T2
iYhlbHD2LIqT4VnfjLKOLxEzN5u1CJUhw8b8lt+mERHj+F2yIK5ABoHy0M0m
ZSJGlH7l3qREBtn3sYkbYkRM6YBIKJMWPn+lohU1OiK2+WSTI1uXDHbsVf/Z
rTdjOb21H7VvkcF3rvlSxGgzZnUpUuLfHTJEVPbPf29uxnhyrEqDzMmgqqCr
TFnVjHUcO68mep8Me1lZOvw/mrE3vtTE34/IUHSC3lS1rBnbvZkyQe9GBlGa
X17+Bc1YQYXjkwwvMoy78gan5jZjD0VUdy/7kSFhlhBbm9mM8YexvpgOJMPH
z2sa5IxmrGd3+FBgCBl+vRvSIBU1Y2+t8v4TDifDoNtvjT18fI1mn1N1H8iw
a1qosUtsxoqSeTHaVDKcFw/S2J5txuwYF2pTP5PhOruLxtZmMybkUn5dLY8M
9ntmGpvURKx/6E3/eCEZ1rjPadVxELH3V4zv+5eR4bG9sAq7JBHTKhBdEagk
w3wlj6yFOhHbx7PrWVVLhgdsbGJfjImYw9KHsH2tZDAvoeS4+oqInb5tw5Pc
RYbhg5vM/yUQseEquU8qA2QI27N5NlpKxKLE6KRHRsmQ+UzEUbCXiOlEdZU/
mybDb+opC+ttInaAKv0y3wIZZgJT9T8db8EqHrq0/Vglwz4mS41Z2RbMuV3t
ruk2GbjenZQ/a9CCiQH7DJlMBgX2kTOPXVqw/wE5dRni
          "]]}, Annotation[#, "Charting`Private`Tag$768#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"P\\\",\\nFontSlant->\\\"Italic\\\"]\\)(\
\[Omega])\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2, 2}, {0., 0.017084988347087694`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822795117827115*^9, 3.822795191251257*^9, {3.8227952236684155`*^9, 
   3.822795231535635*^9}, 3.822795290567951*^9, {3.822795333291196*^9, 
   3.8227953577617908`*^9}, 3.8227954333227253`*^9, 3.8227956379795604`*^9, 
   3.822795714408312*^9, 3.823058468953636*^9, {3.823058506695364*^9, 
   3.8230585134241877`*^9}, 3.823079300901408*^9, 3.823083242273003*^9, 
   3.823085197127571*^9, 3.8230972516755524`*^9, 3.823098628873499*^9, 
   3.8230989036039224`*^9}]
}, Open  ]],

Cell["Now, we plot the Fourier domain waveforms...", "Text",
 CellChangeTimes->{{3.8227958471523237`*^9, 3.822795850091541*^9}, {
  3.822795882811822*^9, 3.8227958883262377`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"frequency", "-", 
     RowBox[{"domain", " ", "waveform", " ", 
      StyleBox["q",
       FontSlant->"Italic"]}]}], " ", "=", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]fdl2q0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IntTabl2q0", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"IntTabl2q0", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "IntTabl2q0", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hfdl2q0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IntTabl2q0", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"IntTabl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
          RowBox[{"IntTabl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "IntTabl2q0", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"frequency", "-", 
      RowBox[{"domain", " ", "waveform", " ", 
       StyleBox["q",
        FontSlant->"Italic"]}]}], " ", "=", " ", "1"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]fdl2q1pls", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IntTabl2q1pls", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"IntTabl2q1pls", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "IntTabl2q1pls", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hfdl2q1pls", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IntTabl2q1pls", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"IntTabl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
          RowBox[{"IntTabl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "IntTabl2q1pls", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"frequency", "-", 
      RowBox[{"domain", " ", "waveform", " ", 
       StyleBox["q",
        FontSlant->"Italic"]}]}], " ", "=", " ", 
     RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]fdl2q1neg", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IntTabl2q1neg", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"IntTabl2q1neg", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "IntTabl2q1neg", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hfdl2q1neg", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"IntTabl2q1neg", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"IntTabl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
          RowBox[{"IntTabl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "IntTabl2q1neg", "]"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]fdl2q0Smooth", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"\[Psi]fdl2q0", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hfdl2q0Smooth", "=", 
     RowBox[{"Interpolation", "[", 
      RowBox[{"hfdl2q0", ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]fdl2q1plsSmooth", "=", 
     RowBox[{"Interpolation", "[", "\[Psi]fdl2q1pls", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hfdl2q1plsSmooth", "=", 
     RowBox[{"Interpolation", "[", "hfdl2q1pls", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]fdl2q1negSmooth", "=", 
     RowBox[{"Interpolation", "[", "\[Psi]fdl2q1neg", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hfdl2q1negSmooth", "=", 
     RowBox[{"Interpolation", "[", "hfdl2q1neg", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["10", "2"], 
        RowBox[{"Re", "[", 
         RowBox[{"\[Psi]fdl2q0Smooth", "[", "\[Omega]", "]"}], "]"}]}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"\[Psi]fdl2q1plsSmooth", "[", "\[Omega]", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"\[Psi]fdl2q1negSmooth", "[", "\[Omega]", "]"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<\[Chi](\[Omega])\>\""}], "}"}]}],
      ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", "0.1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Large", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Small", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"hfdl2q0Smooth", "[", "\[Omega]", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"hfdl2q1plsSmooth", "[", "\[Omega]", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"hfdl2q1negSmooth", "[", "\[Omega]", "]"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Omega]\>\"", ",", "\"\<\!\(\*OverscriptBox[
StyleBox[\"K\",
FontSlant->\"Italic\"], \"^\"]\)(\[Omega])\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Large", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Small", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8227959852987375`*^9, 3.8227962714407573`*^9}, {
  3.822796326410529*^9, 3.822796457218037*^9}, {3.822796602951703*^9, 
  3.822796607686736*^9}, {3.8227966961725035`*^9, 3.8227966993763437`*^9}, {
  3.8230585670314856`*^9, 3.823058568899621*^9}, {3.823060521608085*^9, 
  3.823060538864082*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1:eJwVV3c8lt8bthJ9M1JGZSskLUTIe2wie0a2ooxsMjJDSDYhm+zx2tJ7I6SS
bBnZe+89fn7PP8/n+pznHtd9X88592ExfqX6jAAPDy+LEA/v/+/biGb+5OQE
6pLjntEZVGNe7bEF7u2fgKVHe5GyWA2muPQe+8bWCZjVirAF3vqC4eFUMJ5e
OAE9IbpzO2e+YgQu+A209p0AWcK0xUvdOozoxNrPj0Un4C/uohkg2ojx/nRi
Hpl7ApMV5PmUuEZMgxbZ2feZJ+D57egESTRhJFs5JbwSTkAhp8EmR6kZ86jc
4MvzgBNoc3is6m7eglEN+J3Ha3ACMhwd5/oHWzGRYoOPbumcQFD/EmuHxW9M
98HsDLvGCRT49IQv47dhNG2Irl2RP4Hi8IH4SwJ/MLpPhBPxBE7gp5adZnF7
O8b0Zk7Ib/ITwD26KZqg34Vx/uNnZYY7hv0Gvuyj/b+YkAWnvs2qY1in3Zx0
MuzHpJ19IeZTegwuyszvYpr7Ma1IgfpT9jEYdbcQ2CQMYFiLqb92RhwDxdDl
bVapIUxbWNZ5jNkxRBhZ1XmVjGAm8+Ocfhkdw0ZJLMsGxShmryVoVPvpMfy9
6z5LJzuKuYb/qsxe5Rjib0s5mVaNYlxtBZ7mCB8DA1df+EHcGIZdtSXvEuUx
sIR4F354MoF5aF1DnXbuGFKPCO24wiYwKkH5nnfOHMPNV/73m5onMO4NYWpy
+0fArxpcu887ienkeXLgOXkEgdkd2iXnpzCzivLPyEaOQHk3DJ9JdApz9FLk
T3z/ETDLKueG2E9hONNZ0svbjqBqpu3AbGAK43FxXm6h6gi+Ds5EDaZNYyLu
DJW5lB7Bi4tUvQwd05hs+TZG4sIjOC//kNbwZBrT6YtdZ04/ApOasI+TujOY
2eSMp4WfjoB4vWaAPWgGc/Qlplk47giwN6auvqiawXBuusZrvj8CO4PuhO+k
sxgMpRXRZMARZI/1D328O4tR4zawtvU5ghmTEQZLrVnMG1MJ8RDnI9Axn0+m
zJzFdHf/N19vdAQ+aSvxWdxzGG/Tclze0yOwCR5hSpSZw9ze1I+M1joCfYc/
GeHGc5hBXxJzT9UjUNCDGwEec5jAi9iHLxSOQFi6qNA9bg5zP133gprsEdy4
k8xrVzqHGec5M/1Q4gh0E5wGPv6ew4Q1FNawY47gXHb2xNehOYyIqvYHSsEj
qC0bWBxbmMPMj+Gb7vMegVX9+e0zB3OYONu8B5O3j+BqG+bkxrl5jBS+Blnb
jSP4PWBDonh5HrMedjxWee0I3sykXbDjnMckM2dXpDIdwZ3N7isxAvOYx8Uq
wcFXjuD24xv5XtLzmD10YOBIfQTkmxfPc8vMY7L+ZPAZUB7BcsKxRd8pVjNQ
JH303xG0Ssz98pGdx+Ct7PzjIT6C/IWum7cfzWMK3qRi6fGPICQSF9x/inXI
5QOIDw/BUjhnwU9uHnM2aVN3dfsQ5CYi5e/Kz2PKbiXdHVg7BK7gN3mDp9j4
q8yZxsVDiDrT734kPI+hUFjrL5g5hCeV/KHuN+cxtUPxhbHjh8D0Iir54Mo8
5qWlpK/3v0OYvbJe7HrKn/ZwScvi7yEUtCo17O3NYRqDY7k1ug7B/k1Bl8vc
HMb2qhg+ajsEwbv/Te38ncMw5s33cP44hOMx822nljnML6GoXKrGQ3Br2e6f
yZzDuPwU8TzEHUKxFceVCO85zHWdGbXp6kOYpNLWeag3h+mcC+NsLzsE2qrA
+OkHcxjP10JH1UWHp/2vHgi7NIfhJp3sSM89BG+C+SvCq7OY/rj3We8zD6H8
8xXdqV+zGH9OATfnlEOYeyyf8OHzLIavalTJKOEQPD/sT1LYzGLGZIKuycec
4uo7hSb3ZzGhfbx7fOGH8GbC1Llyfwbz0Ozfb8aQQwgiixf9r24GE+N/13nd
+xQbEXVh5WYwck29Pz5aHUL2R/6iLN5pzI66V5Kv+SGYtoz8NB+dwmRM3rC3
Mjmt507gNNf7KcwJoQe92JPT79UHGYqmJzH5kexrXOqHYOLrJ2gbOYnRYWtv
uqR0CHewtzR4RScxZ0tfxx8/OgRVwzF/2v4JTJk426tZyUOYnyu84mQxgTHq
bJXoRKf87d0Lu4/GMeTGTnS1Qodw+eiROG/YOMbc+0f9h7uHIEs59WK1bAzD
UPfqkgD9qb/nvvJtSSOYVqr7DkK0hzB8L8QwNXwY4/psv0uE6hD4jqIcHfz+
YXrPvY2UJDmEscis5CsvBzFhGvFUqpsHcJ6SOlNlrBeDyTaw01g5gFk2h4b+
xB7M0v61Tu35AyB60DVipN2NkUspCjcYPYBDg/Ardn86MIQLjZRWrQfAFGFP
/3CxBYMVCbKx+X4A3dfPfNjaasIYhim12zccwFpVDH7RSQOm9v7AB9eqA9DC
2f+WYK/BOHmtkAdmHIC0gi36S/waM0d9hSzd/QBmzDrNyz1+4uLMRyyznA9g
Kpk72lCoDSf9JaM1x+4AVCy/jb49aMelGd4JKTY/AIpMBrJ7Vd24p3mS/+HU
D0Awb5XlWH4I90f0FWk/9wG8ju313pCcxpVbNJ6h+LcPn6yu2pl0beAeMFvf
y+rbh4nYw9xUy01cTTetnkjnPkg2/JsYObOFqxOxKLP4vg/tNCkaTx9s435S
UJm0lOzD6FK/wPWEXdxoqUGdt/8+XKMHqj2+I5yxOekinfc+3M2WGQHcEW6K
vpS22G0fmPna8/xlj3Hzb4lfDdvsA/3jMclLT09wW1oFDMK6+yA8dLDnXIEH
Lue1HnVq7APJi/AX/et4sF+H5/hCeR/Gttj7he7gAx6Xemus1D64UahWHX3G
h3OH+66bd/Yhtfo/mUY/AnhfnJEVzHVqb1qfc6+cACifKXayXt8HG3Ln88lT
BBBxefeomuk0/yruV+dpCIG6LfWGypV9kDEZ73gtTQhxPvIas5f2oYgsjm/G
iRCuCGx5eVLsQ4HaIX9LBiF8WkjKpzm3D3jPrIWymgiBOUX2bwHRPqg6jYr4
TRNCmvo6odTJHuQFqIoZnyWC66SJd4b29uAorlFSlJMIsr9K6dpv7oFyLr8s
4yMi4LJb8T+3sgfZX7LlD18QQQH7R2zq3B4ctF5RGggigruD4sMPJvfAb7Fc
WDuFCLAfFknbh/egS1da5biACO5Lxtw3698D5l+9zzO+EEHVLjI67toDSyEz
d7kfRCBUMBcS3bYHtTk74au9RPDVKLKK+8cekFwO/BwzSQSiNCKT377tgUYg
3deH60TQ8HOaQhe3BzXN/SdWJ0Qg5RkmvF61B2+9LUVkt4mghVfI7F3pHqg8
PHFlXSICudmJCObCPbi6E151OEEEvxPf4yqz92C65Np27wARKKsIzCum7wHW
spK3pIMIOs+MUU9/2gN3Djnb4BYi0KgJEvOI2wOZ8aHCZ0AEf635rC5F7sHH
l9Jc73KJQIdtOC7v/R4Mv/rZiwKI4F9fQKN44B5wOCr6bpsQgWHIvdV+nz2w
c+28UyBKBK5lEf6/PfYgVDeyFMdEBNFDG/T1LntQ8lBdoP2YEIqJNErL7E/r
x0D9ZewfIfzkrniUbb0HK8c9mI1aQphUpx1NeHHaD9n+DEwIIRy7uzh9MN2D
23oMLreVCYH3t1C6k84eSPlnMpL/JQDFrQTBlxp70Bc/t3aUQADmDEd/9JT3
4GnRraYlAwLwkdJ/riK/B+PfbOP+sRFAohUcSkrvgfnfcovfM/hQEc0c+UBs
D2auTkecScKHjq/eN7gf7sGVTebOLEl8ICaX1LzIswcWGTHKc+F4wMyfuUh8
aw9C3Ds+BD3AA2F9Yt99jtN65tAlaeFOcJr+ZpeXWfdg5Ekoffx/Jzibwpai
MYY9YDlHlDCkfYwL6r0h3UO3d3reFbephB3hMo6Dhlou7sF5gfg/jCmHuH5F
BdJi0j3Y+c+qowr2cZtOhcnpRKf9d9LsfPtnD0eeTMEfe7ILE6OoS3VkF8f5
3aY1aH8XxORvdDOt7ODEVzqM32ztQnI5Vc/i8TbuKS3vnu3qLrw2mbqec7KF
c0ZRH54t7IIMI+EGeccmLv+DZu3jsV3IjcS8H7BfxzVXVqqKDu2CiOJTHVGp
NdzYCN0cb98unCd15ciiWcXR3B2kvvp7F4YOX/pO2C3gPNsNXs1V7cIHF2lu
Rq9RXPxu3Zl/pbugT7dukaQyiCtjZk1sL9wFL4yWJ156D27WZrKlMmMX/Kgl
Hr8LbsSpXnjB6h+2C+qBNNgh2TaMpeDPqtfBu2CE3b52s7IHE2B0U8nKfxfk
mMZXZx4NYWpLltzU3XfhvsfTxuLKScx1VbseVvNdSGn8dZjouYbZjXALBLQL
t2rmrjeq4KEZ+vp5aaFduDqrYCP3HB/1ZhErtPHtAikNtqbdlQCV1oRf+Hdj
F+jsXJX+pRMh6/HP8fsXdyGKM4vhGgspmrjXnX9/dgeGI8mO2lkvoM4vlym+
ju9A5m02wicVF1CdlIGt5L8dCPzxgHTsERVKejJ/X61zB1Ik1mRDbS4ibW88
sKndAc/mWjbSEmrU1s7dkRe2A8KHF4RLCa+gWh07Xt7gHWDru6XS/u4Kypus
jK55uwMrJY/MliiuosBdcZ0frjvwuThjX5GEHkkwP5mYNt2Bsk77HJZBBsST
myRlbbADvAkcGr1KjIiZb/Lz1pMd+G4yiBfcyIgocDfOeajvgOGt10qJnEzo
WOaVJZHSDvznnu496MuEFjvK2oIf7UDLz9+lV0aY0KDu/t2LkjtQc/5wnZuB
GVW9ervFIrgD1rrs1y1dmNHnvZ9aObw70OQjjPsvixnF+FLW3L29A77P3i71
tDMjPzJN+irOHaj6Vp3iscSM7GMT3iC2HZhhWVa7fo4FGbOMjTYz7ACtF+vZ
3+wsSDmPXUKRbgfkhzVrHCRYELpvmdlDtQNuD4Ot6A1Z0G0oOatHtgN58cDc
6M6C6B/tvJg8uwOjuxtdFh9Z0H9dD1stCHZAc+23R9xnFrT/1Of2xuE2lP4N
1N8tZEGz09/DXHe2gbJOAmlXsKA+G7IN/PVtsPx8zFT1lQU176tqvFvchpbQ
ajy6JhZU5hdXSTmzDexODmPOrSwonXz4ctzYNvjo3Wno62JBEbrorODQNoiW
OebE97Ign+yUzf7ebWAprr7f0ciC7Lbwx107tgE//6j+bOkpX3GTP1dbt2H8
s5giJpUFqX5orK1t3oZv6W8HHD6wIPGh67l69duQkfzjeZ4HC+K5ERB7/GUb
/BLINsYsWBCr06xfcsU2PItV8aTTYUFU3x7ZiZZsQ0nk01LNByyIgDLPYCxv
G1RDrs0Wk7Kg8RwrIbbUbYj1KFN5ls+MOrfbOBoTtuGBk7s/eDCjBom71M9i
tmHAWvLLZSVmhA0LJyAO3wY3s/Or9szMKO3f+kpW8DYI12U/SpxgQhFc6v9k
/LfhxD1pMk2OCfk4l/+c9dqG7PiebMICRmR8wSWTy2kbjnsk7jXZMiBV/f6I
Xzan6xuuW9e76ZF4npCXpcVpfhew1f789IhnN8GK7Pk2HN6e85iJu4pYpI50
Cg234Xr+D2216SuIMkJfVkl3GyafBM9pnf4feCNwf1VjG1rPKrg+Zb6MRl18
KHnktyHJpD3hmQ4tam+aOOqU2gb/CxHcL51pUB2V1IK96DZYg9pX6yhqlJJ/
trn8/ql90P69iE8XUdieeanm3W1I207CKNtRIS/pnyk7XNvgbCwhTy5zARmO
hrgJMm+DuAPdj0tjZEj51rL5wJVtWJI3Gg8L+g+JuippulFvQxxb7sF5PlLE
dInq3tdz20Awa1+VtEyIyI3sGfXPbAP9jrAY7Vl8dFzQ/d/JyRZ4k5FEMaFD
zLBM7LTo1hZcfMxZiZ+6iklyo09sHNmCd9FiKn2Ko7jQFo93zwa2wKwtdGyC
bhn3hnrEibhnC9IIlx+4rG3h9ItSVWR/boFY0ifThn/4wDDBfra1bAtK+vMl
vkpSQqLcPbuud1tgyuFGryrEDNf+k/vZ7rcFkg4a1+1FWCDvlzFrm+cWaNbf
uR0lygo1j6M6Wxy3QFZ3EvVKX4N+xR0enNEWKCvSB7115gQata8b2YJbkGDl
w/o24i4kXeyVz+LbApn24l0q5ntwvXs5Pf3OFlDwjrSlFNwDPg1m9aTrW+Cz
K+xW28IDqlq+ZZEXtuB5oif26z4ffNB95PhmbhNWJ14oikgJAg298W+3yU14
StK3TvtdEJKGXK+/HtmEQm7J2HVZISjUy++x79kEdUfG0c+PhaHVgIL/Rf0m
aHfZ24KQCKgzc4Y+r92Ecw2mvHx5IjA4KjptUrkJHcUaW9lXMTBvZBejX7AJ
sqECryMOMWDHGrysm70Je+6cwmetEOyNp0s/Sd8EnMXlI7d/6HRu7dlW+7gJ
P1qqYp4pikLYtWVFlahNoHnRxeD9WhRop4g/K37YBEvS5YzEDFFgf/5A69Hb
TaCQYyvt2heFQnaVImmvUz7zIkIr18WAf+bFWUm3TcgN0q4/pyIGuM8+BmJO
myCcevaKlKsYSJknVGJsN4HvZ83ZsEgxaOUso3houQm3N6y2BvLFQH2u1UzQ
bBNY6FkmrjeLwVDOFPAbn+Yj1d1uMyIGpi+Pafn0TvlbB+C+7IrBIhetzT3t
TTiOEconphIH+4U7LbfVNmEHlj6q3BSH/TxZZm7F0/rPpgQkSoqDj6WRy41H
mzD++G/giKw4DIfqJ9ZIbIL83JLqT3lxECrRrZPHbELZW0KGckVxiOnSnhx6
sAmMrJdnklXEYX1Lg8SadxMCcLdLgtTFQZFOjfvk1ql/HUk3Ry1xyBVSVg7j
3IQnO0+kDHXEgVhPwYGFbRNUiPiF/qmJg5GnXByWYRO+6EgvCAqKQ22qTK0E
3SZcL9FMjGEUB7pGydFuqk2IOmumsEEoDg7TYkTPyTaBUN/5WGlODNpJEOfO
2U2wLQsoym8TA+6bDx8HEmzC6Lk4Q9IyMQhUELS5fLQBSkbZF55/FIPJV/xR
uTsbgP+QPZ3RVAxEI3irhNc3YGbvvaEahxgklt0dal3cgN+VWwyB86Kw23sL
T39mA8oc9QZrC0RBfY/r2srYBiTwNsWt2YhC8VVOWa+hDfBe49Zk5xOF85jr
lhf6NuCP/g2OimUE5oasYWkdG6BQ5B7TbYyg0YepjLd1A4gu6DUpf8IAUyb9
38bmDYizE9ls7RMB1++XDzXqN+BmNwPbIyoR6J2jYZ75sgET949Vmh4/BJ7z
lyRdKjYgPnbYSyxAGEJvXzAnLdkA1T1c0dd6IZhXJg+Jz9uAc7rJw4KHgiBt
/1/xzawNmLUypfl69ADSokm6a1M2QHGy9AXZjAAcV57ZVUjYgAodwq967fyg
M0BAPxK9AQwdqpSF1feh4vAE2YRtgJ9MmslxGh9QMR2Z4AdvwPzXtQrFEF6w
FtsPiHh7Gp9P7FyyIw/8NNnJY/PagDdaIG+icg/Y/Tf/lLlugJ35znv8P3fg
389l2r5XG/B3YNbVmYMLHiwtCJu/3IAfkUa2WDUOiKKYM9gz3QCkMGC25HkN
Vu9N+wYZbEA5sZo+Zz4LPFaf+HxVZwO0vGJzmosZINtp9Fe++gYYzF6x/Y2h
BaKP/1ZElDagh2R15osqJdT+6xMwlNyAY4XO/ObuCRwdXo/uGmYDbmmJt403
rWEcWDs9fQQ3oGDe6fWlL8SI26z1e8btDXjwgF/jl+JllLhapzVHtwGEHmk5
1u3cyI0w19luaR3849u0ObIRsv6oT2w4uw7J/7kWXx4XRcZ3LkYrTKxD04+Q
MqZVMSSn647l7F8HKgYrn/arkoiuVHFpuHEdzkWnZDakyaIy4w1j+cR1sH8l
cqQxr4yydz+vPYhdh1wKsjdnPFVQQuhTL/aIdTguGjouu6iKfGqaPuEHrsNe
v9yNNCE1pEIV97fSfh3uWJ2JZH+jgZbrHypek1+HQ8qCmfs/n6BxrbWhC9Lr
UNyVusOtqIN6ljItTkTXwTMm5uy1Th1Ue5ni3QD/OvycPLyX2aaLiou+0bbc
WwdeUrPzWsJPUYaUS1Y59zok3eqYJsl+ioJtx76FsZ7yd8pMsPTWQ2/Oxqi+
YVgH4gQKJ8ZlPWT3SW7Mgm4dXsFr5XYdffSc9+TVk4vr8Hdigsvnuz7S+VF6
LE2+DvgtpFzj1w2QooH5ez7SdZDw0ae5YmOAxLbo6VmJ1iHqYSmBao0B4mTx
FzzaW4No7cIlQw5DRF8p1DK/uQYV5X8n3B8bIgqFFc2/K2swQkU4EGdriAgm
0qea5teA1OZWe1mMIdp20XYonVqDjKhHWIIyQzRPTkaYOroGyf3YsWsNhuhf
Rn146OAaJDLSX5BpN0SN7VxFLzpO42UvvwpeNERVz0dEtFrX4MOSVnLBviHK
O4xslfy+Bu956tv+kBihpAhZXZ6GNQhy5jpeozFCEZxHc0xf1yBTlYs7jMEI
+eNKXMiq1iBque32Qwoj5Kr+/OwBdg38guzvzeIZISOvP9d6s9fAsKGWX3TS
EGn2J2P+pa+BE1WbEV+vIZLjsdGeTDr1bzwSwtliiFCwqN3CxzVIwa5W0tcY
Ir5JypD1qLXT/dOs2SLbEN0QGcvc+7AGsa9q7P+8NkSMMSWAF7wG9n5kLLzy
hohEVnWD3HsNNJ+a7WwOGqCjFFYyGvc1OO9Pplr7xgCt762zMzivQWNRab4v
iwGaVv0mes1uDcz7n5yVb9RHg3mROjet1oCFEM+YykwftROZOvCYr0Fu8GrJ
1k891KjHFyposgYonbiv9boeKqToqZd5sgZFnTwsboO6KN08c1BRfQ2ez8tK
q/Lrorh6xy0NpTVgJDCwuBGug0KuSFPoya1B6WXHMLzFJ8jbnuaGqdQaWNwL
Lu+TfoKcWqfFLUTXIK0nTm3GVhu9vF751E54DfanBJILvbWQep9WmNe9Uz5n
nfhFUjXQo7ucuQHcp/2kpfYhKlFHmHe730I51oCBs+z3rzo1xDve8i+adQ0+
P1C7HNmuijiFP+4kMqzBnUfrpjqjKogh6sWFDLrTfno0k491KiOqJcGbeRfX
QJ9ZlzGFRwkdJA3oV5Oe6u3lDtPTx3JodSfXpY7olM+HJmahfhk0qewW8f1k
FcpKI1nonkuhNgL65p6tVRg+usPW7SmK0p7r3VofWwUylYOeEIVrSPb26AFX
zSq4VF1N9m2XAJGAYmqe8lVw8FYs+HRbBnhGve4IFq+CjZz3l8oQObgawWIi
k7UKQdYbC44ZyrC8ZfzTJGIV8MTN6QpKtSD661Rc4stV+LFyn9CexgT0XeLf
CDxbhRHfd3O3LpoCJ6+SaafBKjTR/vszS/EMarKr7pBorMIq8kvUJzU7vfcG
N9ujVcj98+pGXddL+Kwomk8utAr+lJ8VJOotwIZ0KzyHbxVMVYZtmwstgcBT
X2/kxiowdj2uaX1nDRwv723KXVqFRObfniELNrB6bbp/inwVskdOZkRVbKF6
JB68SFehNIlHeavCFnzilTKvEq0CTu9ZVQ69HcTmktBYHa1APX0cs76PHXAx
242lra8AZSmDgt6gHdRGD+b/nVmBCk9ux1B2exj1KpSQ7FwBgstyTau19mC3
TUvh+n0Fsqe0l1hIHIDI0nugqHYFFLBm1GpqDhAzNp85VbICG2+cRPySHOCG
lrrt1c8rECH/9ln5nAPUtn59qJK4Ave8JBgbqB1BUZyDJCB8BdCN+yJ9Io5g
d2s/ad1tBZ640bnhhzoCUbrJS07bFXh+7Vw8TYUjxND9vq//fAUcfh9U3Rx2
BM5Qfvwo3RXwdlrqEyV2gi+EKa0/lFfA59lQzD6LEyi+Jo07kVqBpTpjZRZm
JxhdtjO5L7wCWvRzpLKMTkA0ILWfcn0FbnZtuUdfcYIYpaKm3isrEH3bnb+W
zgk4m+jCz1OuwMk7gtVxGieoEfJ5Kn5mBV5MBeaQUjuBQvECh8v+MsjKncto
XHeE0esaGwUry0CxzNnf0HDKJwGHm5hcho5wGfL6iNP8/cM1lP4sg0a/n8tX
ntP8D/eZ3zYuA61HesEXAkeosTVdrKlehn7mhvHqTgd4PPO7crVwGW4nuCX5
f3KAkacCvuwZyxB4IrGmiXEAu84Uxacfl2HM5Lwkx4g9EMmeuxIRugz3Wrpj
djztT/X4r/jI5TR+2LOHcfV2p3qUdue1XgaWrVsfzI3t4DFjscwLk2WwfbI9
9oDQ7lSfly8may8Dz5Gx63SILdiS+g53KyzD7JJJ81l8WyDyXMw5J7EMScOm
VDccbSBmU8NR9MEyvE/6VRvV+QpqRjjP57Oe2hv9WbycbgXuD/EL4ulO+Xz8
FHIpyRJEPvYrvCNfhuedFtwUHy3geKtk2ZnoNP9y6F7SfQl1qkEfnu8vwbMX
HBa55C/ge9MCFUvnEmgKNDcm9ptAd17h5RjvJeAtEokat1aGGJKAGj/nJYg/
9Lhl+ksOtJ4Z6Npbna7He/EQVkvCACPlJ+UnSxA2I3OBneUOjIXbMv93bwmS
P63cIkoRR8vOfBxeo4tQyUx45zylMSruPt9i3bsIW6bjAQ/rTJDtvSlzvdZF
0MupH7W0eYY256NzhapOsZFa5Kev5uhAb+fW1odFeHLQRriBXqHamj9tE28X
4WB1+46kjQ16Q5v9qtNtEfhNiYdDRW0RQYd2SZHZImTqdE0I/7JDJJI1fC/R
Ivyw9rW5X+uIfqZE9GjfP8X2RV32Lk4o5Oilk8zNU+wyyI/lc0YUlVerrtEu
gqlZ4XmnDy6IhstDeGR5AeTxXYmoiNzQX3+Nod+TC1A/Y0kgmOqGPk7c8qgd
WADpNgM8Q4w70hElZsxrX4BfZarH/oPuiP7TMO5j8wIIpkROFWl5oOG9CoPA
2gXQThXwD2v1QCmaH/CcsQvgkDbIbiv2BrFRioqrJy1ATQabOc9NTxR6d8z1
ZeQCyIhzPJ7I8US7yj6lXoELsPqKmk7ukhcytmVbjPFYgFoMbVCamhdqDW+8
VmC3ANd40MGhqxfixz7T+2a2AP1vH136leKFUjqJY/qfLkBov9qtj81eyOHi
o7PEMguw42VucJ/KGw3zziP6hwuQ123nQvjAG8mqB7vw3FsAQ06P8A49b4R1
4C6RZV+A+ffKNyOdvRFD9O85/asLYLNg/znY2xsFlluzOlIuwLZsLJtfsDda
76HQDT6zAB5ZNcnu0d6omUa1tXJlHkKM8OOscrzRXYENorbJebgI1y49L/VG
8VpRIpP98xBPLxum/9UbEbncd9pvmwfJPWb5X/ne6FVcbyFl4zwIGbQOXY33
RgNVzjPs1fNwp8nZ2jLAG0n20zGLFM7DtZtseF8dvFHhXrW2Wvo80IW3hZMZ
eyO6K7rhL+Lm4fzOazZ9JW/kI3T4w/P9PODpXS8vfOiNFnU+EcT4nMbDXy4W
ZPRGmm4Y4XzneZj9NJjvteKF6hNG7Bss5yFc6Ef29zovxF3rlf/XaB4E+yoy
yCO8UMwQy9Sy5jz8s89I0TDxQnhHDQxnHs+DN2VEYiKfF3rJYKp5VWwerhd4
xk2c8ULdImc+3OOfh4jIAU6NQk+E0c/6LnNzHpg+BeaJsHii7DcyePrM85DQ
TE6e+uENupg8+8CB+tR+NcqG6NgDvYF3tkHn5qH48tUuM0sPNDvClZtyMgfc
Eqn3fw24I1W81vGKzTnIteSIu/3IHdUyW139PTcH7DEF++GVbohdjFx9YngO
mgJ5eWQvuqEwo6KQva45+DRD0/5NzRU9S1s7uo6bA93Mf/996XZB5NecRt9E
zEELs4VvTq8jcpGkvRwdMAf/PtER8G85oHHTKpU89zk419Mwi0fpgCoz9xv6
ns+BiwRtRYyUHTLk8My8KzwHFlTSae7yVgjLFfhyfGIWmn9LVXPx6SCmDsPq
m/2zQPF7CJN5rIFCnAVJHNtmQavVvpHphwp61jifebZ6FgijJZJv1IojOn2F
Me7QWfjTyq+/ro4Bj3AqbecHs2A0xp3wfNEU5gUWsupuzYI27xV2chIz0Bz+
tkXKNgveb8+WlLO9gLs3HSMTyWbB5sZ4M5GuFYw39rXVj8/AJ5IRcvwmO5Dd
TZQ6/34GXHfEJG46ukJ5kmOUhs8MrK9T2gZouwGrlOJEkvMMvFweSZoQdoeD
8BOve8Yz8GrKYz+B4A0U3jSu1RSYgdRns6TTcV5wtVPovxTu0/V88xdru14Q
6HJRZ45lBjAbsy2H2t6wybiYzUM7AzRCLzhJqr3BqKlxx+38DEx5zQVcvOwD
bRafpJvwZ+BWcE5zmIsPCFE5RZPvTIN5rek3rm8+cMmAgzd1bBr+MA7W6mv7
gvcZPJ/53mkgVI6p3k3zheW8v+28rdPA761SEbHkCzqqJUwe9dNgiz1fyv3A
D77vvrNurpiGzInvRc0+fsCXbPyVIn8a/N+Xhl1u9IMUKeHzT1Kn4bnIDK34
th+4RizmLARPA+MnRfZInbcw/aBpl897Go4f+xR8CXkLaiOfZN44TUP/YTnf
JO4t1L11ivluMQ0V+XNfzq+9BW5upSlKo2mIecogcZ/NHz52cvDpaE7DicjF
lSkxfyB+jeebLj8NTlPxZt5P/GGkqYSZn38azPhytasC/cFdbU/yAfc0TOvT
B9Um+QPdmOgLIdbT9XehX+rK/KHMOvD9Q7ppmC3FW2r86Q/Kh39KMOTT8HLY
jvHHqD8svqPtFSWaBnlu3t9E4/4QSGuwL74/BR2Sbpl3h/3hWmYWo9TqFGjq
ffN4OuAPdTzL4jLTUzDo+J9mYK8/PK27b/ZoaAqMQtVul3X6w66CR7B85xRM
ZyUQj7b5Q9RgY5FCyxRYwMTwf7/84e6L891KuClY7btZKfDdH1q31XZVyqbg
g/r3prRSfzD3S6BXz52CV4FzBC3R/kBENSGqmTIFSrX/iS45+0NKMtcz7Zgp
uLt6y4NKxx8e3rJ7pxMyBZTXlGsEHvrD35rqgqc+p/617HaeMvqDgyx+p77L
KZ/gKD4fPH+g7JXdNrSeghKosP08/hbyTcKumJhOQVZXBrlvzVuQXevDPNM5
xfYJutq+b8H7vFnAC+kpyC0N3CKgfguM8YV5Fg+noEjNU/zvPz+o4dj+Y8Uz
BYUbjh8KsvxAs1xk8xXnFBREWg75vPKDdfG3dHaMp5jX5Ib2qb5C21sfOlya
grmQT1vo0Be49C8ZOZ2bgqpOpi9aBb5g/Do9x3V7EjT1r0kHUPjCMfHCb/fF
SbiekfVfcp0PxEfxrL8Zn4SNOc6OClsf4Gd1pfH+OwkNd/Ji2lh9oLOoXsi3
bRLCHW89ne7yBmsRUoO3jZPgS/jNrc3PG879UvYNqJmEtyHx9wOYvUFieuRX
cNYkRCc9ytnV8oJRe47V94mTIK4k3mw84wnu+K8uhUVMgozRmmA3oyeU0R8/
jXozCcpvlVgq33vANTX65UTNSWgizKwsJ3KFulETquTHp/GoBjCRtK/hqXUe
f6r4JIixUDTbcLlA1Dshz8zbk/AV87r7pvLpfFynTVlIPAmUpHnp5kp2MMUd
zQMVE/BSIHaDOtoEuN5kLs/mTQCTk1jvbXYjsP5TnkuVOgH3XvTZfrDWg13b
XtbnwROAZ+p1uI5Vg3OVtBfJDCdg99wQgxjRBuauWPyGDukExJb0HV12MUWO
EblFfsfj8DmeYlb5jBmqmaixKNwYh0pfmc6AiBdIwn9wAn94HKg1K7O28q2R
5i/67mzsOKyZ3KyRU3dAbhrJZdu640CfbuApcOKB6rKKbJhVxiGflyvsyem8
QrQL3HLS43DT2LX9600vFBo/mvHp7jhMZpN6dqt4o5QRlmjJM+Pg/JrwcaCt
L5q6y6NivT8G0UtiyHHPF3H5iJPFrYxBmZEXj7G3Hyq9ZvJ2oX8MCtXx7Y69
3qLmFxmOEYVjwPuZLemfRgD670vZvdr0MegQ5n5B/SsAKZ9vWpqKGwObdj4+
BdFA1F849UzQdww8BeqtVs6/Q4x42ywmLmOgZfGVxtjiHTJWIR4OsRoDgeRq
6P7xDi1usGuOao3BLDH2Qo1/ELorJUB1TmEMWoQKa7ingpBjjEwbr/gYpFjn
miRLBKOaGa0gPYEx0FASybIMDUbHD8ylA7jH4H58Jn9OZzCSCHIhKGEZA/Ip
su9TNCEocDAQN0Bz6v+Okxarbgi68CaH/zb+GKQ2SbskTIQg/wrOFsqdUUiW
TeB9zPYe7S9/frKxOAoGy7QbmkbvkTUHx0LP+CiIr1A9J/Z/j8YNstyr/o7C
tVWy/vLc90gz7jp5QtsonF0jefzsz3v0sz0j2aNxFObWCOHS5nuEFUtvEC8e
haKNvQx7kVDE7sqqfj1rFMI2N2nZjENRPDZ16mziKDhsrQR1+oci8gVm5/nw
UcBpdSu0fghFPmwpJL8DRsFM2IegKDYUbesyxRd5jAIl093K8ORQ9DIq6WaE
/ShUEwxbOHwORapnPilqGYzC+Z+CPYKVoahZhH5UUGMUKgpm3tFDKBJySrCl
lx8Fw/BozElzKCosvEJ4IjoK+pXylDfKQxHrzMeoMf5RCHpS1I9O/ccwXWZv
5D61P6BK13wXis5px1VmsY7C+CcnSyv7ULTREjNgQT4KD8dFTuJlQpEZPo2l
ItHo6b6a2lJyLxRV2HMdGG2OQCT7mYiWq6EoaZKTkWN0BF4P/8HbXX6P/DU4
xBZ/jUCtg+E+7ZfTejdfNy2pHAG8/9Y2BAJO6ytwLcApfQQkUr2XtNTeI47L
LL/x3Ebg9++00diFEEQZxLTa9HwELpnyDlRWhqDdfYaLwaojoL3/ravPNwSN
WtDzK2NG4NPlftXXD0NQy9CVJ9RcI3CxvFhCcSEYFStcdh+gHoEg5UA+tvhg
FIejTU7GH4GTBYPru7LByDzl0tSN/mGYZ6U4m5YVhJQvXCRZaRwGQ9z0jpNG
EHrgc+FmWfEw9D3BzcoTBSHmDQrF14nDIPC84rJR+jtEakpuiwkcBmNcmdRL
/ncol4PkSFVgGA4ZC7dCfQJQRBwxMx3bMLA657PEUQcgV9IzEv/Ih0HmT65C
arY/klvAf2c2/Q8+C1mySea8RQuFB5fco//B96KzzsYffBE3/wp35sYQNJQo
yUw2eaDntz09q/8NAUZe+NU3W3eUzE7R+fv7EORNssemMbghKto7ztsJQyCW
R+vNJOiCdnas62Ukh+CGRWPWn9N5saF6WWM+ahAErzJZpbzTRNoiy2/u8A+A
5diPhzYJjhBx/02HBPMAkL87HpzWcIZft8ivaZ8bAIkqudclFK8Bw3j7h9dw
P8TRTJRK+7oD24nVxU7/fhAt5/roVuYNy3VLnx36/sJ8/b30IL1A4Kj22A+s
/wt/u46JD9nfgWEJmcKnvL/QPPXrpdXqO+hKvbXe5PkXPpI+51H2DYYqH6uH
tJx/IX7EveJTZCj4Si61V7v0AZNF3YL2hQhokF1U4jPpg4Wh1N96BhGAp7DQ
VqjQBzWKvkXGBRHgrjHXms7aBzo80vaWjyKh5smsPCNZH9zI4NCwjY2EPb2Z
n3E7vXBy/u/Y1kQkPDCefnRxvBdIfF6/LmCLAqfnUy3vW3vh4s6VC89MoqDs
5aQMSWUvMFnWZtOnR8G69USzT2ov3BzTE+0ej4K79uNSR8G9IKB50hfMGg2v
nMcanZ16Af1KeSVhHA2FbqMS64a9ICsqfvYgNRoWPUcaLOV7IXV3WjukPxq4
/IbFZu73wgFfSWQZSQyYB/6rM2LuBU1bt7YhgRjIChlCQ+d6obhAivSMWQxM
hg3iNLd64L95CslbMTHAGj0g0jHSA8/YB95oNMWA0cf+WvmfPfDVOKPaYzMG
Uj79FW4u6wHqZOvNTLZYGE7tqxFN7gH/2HiaAPFYoM/qFfzyrgfwqlZJuA1i
QSe3p+q+Qw+4/ZU+aHeLhbjCboFi/R7Y3E1ccoyLhV5sVwXXox6wvrwxcqU8
Fi5Vdt7P5O2BOcFHndARC2pfOsqYGHvASCe50XQ5FiKgnTee5DTeGb2qgjNx
0P7tD/bSRje0nWx38pHHAXlL270P/7qBZj9s6QtNHDxu/V1M2tIN+ptcJBJM
cRDU3nrHD9sNn5cbWX9yxEFL96/C48RuWJnVF1G5GwfE/T9vvQ7oBoGJXa2/
D+JA6t+P/A3bbvD6F2FnIBYHfmMtN62fdsMzSuupTeE4aJj6njsr3Q0p7k84
2e/EAd588w2Te90wNCtpocUaB5jlpux/V7uBTuNuYSB1HLivN3JoE3eDev3V
tWqSOKjZ/pbVudoF4bfO8i0cxMLufsN1hcEuaP247kS/EgsCJ/UZ35u6gK4n
cff5WCw4EdaziRd3QYDaf4f2uFgoO1uXVhvfBVsdr0+8EmLhLiUupeRVF/xp
0yRO0IgF60tfmbh1ukBEoYk0mycW8ulqk7IkuyDvFy9ZOUUszNN/YWC5c+pf
Lo2yYTEGbrDUJCZc7gJiL7EW7rpT/VyvvkpD1AXkWTre5f6n+rlRFR+23AmX
Wu2FMAqneuGpiHv7rRMY6bLylQaiwZC/nBavsBNYMfDsb0o0JAuVxbjGdQKX
6V9GI7NoGMaUUm/5dAJP0Frf3K1ooJfARr2y6oTHIzbK7Kf615EpuTiv1Qnv
SAv8hSOiIE6+OMJUvBOaeedqlcWjgFq9MOwJbSdIBhrdcEuLBCx7cI0UYSe8
7BWiXtKKBOU9s8l7Kx0Qde0SvgFZJAQlsTw4970DNssJuZtMIoDD9thoG9sB
HCt5UjiiCGiUGAweT+oAHU51g8rMcDiejRqpceqAhviMiJyZMEj4Ykv62bgD
trse56cFhsGDUEXeSMUOuEG21ZRwIwzseEkCLNg74At/FOPNilCY9nC7Td/b
DnGNBx73WILBV1lbm6ShHSiye6g3hIOAme2+z2ZBOwQEFxWUab4DnZblnta3
7cB6tnld1j4A2qiMPTzut0OW5R2XAnlfsFYKj/t64w/QLDniXfjlANmbcovR
+H9ASIRs7bWDHYx/JBK17m8D/fcZY+MMNqA56TzD+K4NVJXqvKgqnwN6rc/v
NfsbcOyt7iPa94Ay/Wa3+OdWKBSN9AiVcUDY7SaKlms/YbkymoYLG4ZCc9Ma
MHs/4IIB27ShXziy0Pd0LP/9A+4Sl5THakaga80PBtOcfoDf19ybogeRKCY6
L8ujpQUOWxybNTRjkStfuAiv5XcQvspmcXQhCWnOWq3miH4HAg0Fqb25JMSb
KJfOTP0dGkKdmbbqk9EiIREpOa75dF9XKfxbmYL0u5y6ZymaoThaRUXTJA2J
2z21SCptBNW2V+cjcjMRI7sgI3VgIySp670No8pCB/3UHcFPG2FmQO441DUL
lYn94X99phEIpLms3oh9RuwXxAnUtb5B7pWpo762bHSumOMj6UE99GSuwt26
PDRtQvTY6089rK9QBVIz5KNvtGPH2+n14Jdg2ZFml4/cPeNNJx/XA02BC+va
1QK0rEh2F5LqQLg9rPG9dSH6STA/ft++DkIbQ18FQSH6XNEcnS9TB05t3Jks
54pQ3UO8Hd4xALlxc0rl5CKUOTj1fs4PBzt+Nva9psVowJ0m+RMvDu68bGEm
8y1G5IwyxSrjX+GuU3WxfEoxcjLM7qxGX4E3NKG9ZaAY5eL3T1gt1wJffIjh
2d1iNJxGusXyqRbuZ3msSlGXICpJIeJe+Vrgx1p7+fGUIOmpl7RB+1/gAc6A
8ptSCXL1T+DE5HwB8cCXvUTmJaiQo1VwXesLlL7xvIp7U4JoX956qlNeA5EW
OZl380vQ4//0rchNa4DQGDc/11CCvPJD3zRQ1YC9dted9P4SVKYAH5zqq2FC
cdbh6WoJml1eSeGyqQZ1qaNq6rNYRB/GjB1mrAZ2TW11ZzosUr6n8i3idxUk
eihFxnFgUZU9dmqfqwr8W0UuDEph0eKlie3C/ko43OBTPlTHIuaKiyQmgZVg
e5X7A4MpFqlrSV6mFaiEGXG2Now9Fr3bdeD6NVUBT19eITP0wSLcx0xhz6gK
aDgQN/wejEXrQr2PeSUqAMw+TR6FYxH7ELH+zFo51HbtmPPFYZGOh8CrhJRy
qEaqSy+TsCiU0dxLSakcKvLybVMzsKgB4sIJj8uglPbsdl8uFm0b/kirzC+D
Il8jV/ISLOIi2C+10C2DgpUvx5KVWKSfztXEdK4M3L4WRomd4ghJ3d6uqlKI
m+qeACwWNU8FzwSYlUIp2QEPphCL9v1rd4VpSqH9PotPbQ4W3eZcIl1txMKC
nkyHUCYWGf9guJphjwUSfyvm6hQsinmpyK3NigW2wshXAolY9Os/T5HzHSUg
2luNK4/FIryCIsU6zxJ4ixd79X4IFvEpjho43C4BIdbZWWFXLDJfobTl/FcM
KxKCFeLmWJQYJuYzFFwMmc+CfB9pYlH7PbvIMKFi0AkYVFaWxCKSLKlH7zqL
gCKHm1GLB4tsZrMs1u4UQdNPjwU9Ziz6y0US+uR9IbgutlWZkmORqNWL4vr5
AuCiycPQbJag7KKfnTdkC6Clb7hi8U8Jes33nnafIB/O6Ep//hhQgsadlgWN
DfMgnd6VycakBMlVKz39+TUXxIYLYqVRCcIeFL/huZoLI8ljFAxXS9AVDFVq
vEsOeBhRB25sFyMfL/tvBL3ZcOIY+nH8ezFaaOieesmbDcPK2UqYwGJUKxPL
JbycBYnEQ1+2SIrRtaDdx+nyWbDZsDCRFlGEQlqfvPovJxOwLkzKOheL0Cb5
l3B74kywua1WeyGqEOmp0JcNmmTArUl/zh+XCk/vn1uCjo3poErmKjTnUoDc
Y/4A+fV0qCzxjPqUkI8SB31+iU2ngvd+kCzxWC7ifvNUZVA6FaaTwtJqCHPR
F2b+PofPKfBIIubQmj0HyX2j0CMnSYH8mQRNtkfZqOxXZ5NSRxJQhaQW91l8
Rt2U/h0+EZ8ghZFr49A5C21oCP4rV0uECh9etojKDESVsDg7eykBfk0/VOPY
SUM8o8mbV3s/woSctG8tfypSua6GpxQbB5t6yc/TF5OQzUvi8z7ascDEjm3+
bZGAwoqqacsvx4DyciP77nwsKtq0ZJsdiAKPij5/1pdRqE2Q+c7VxEjIeTM/
/XguDC2/6RJS1IuAXy1zyrXIHZE1+kt7M4ZD26/GsA92VqBN5ZBhDh9AWq5v
9Xp/CMQmDnxpE3sPv4pxx11cH6GXXayLrzEIBIcDfYI2U+FSyef5eOlAoDDF
nslT+wxqwuQE+D/ewsTcYOAvbD5ENDlcNjs9BwcrCYi3SUrA57i5/NtrH4j/
+P+nGv4HkJNnwA==
          "]], 
         LineBox[CompressedData["
1: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
uMPDQ6g/1SyVoFeJ+R+0rClN
          "]]}, Annotation[#, "Charting`Private`Tag$851#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
Bbk3jT8YlveBxA//fyrR/wAobSp4
          "]], 
         LineBox[CompressedData["
1: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
5AsZOc5Wif0PzVy/Xg==
          "]]}, Annotation[#, "Charting`Private`Tag$851#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
ea7IQ39IS/3/qIL/AVJo7G4=
          "]], 
         LineBox[CompressedData["
1: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
7wPHfJPfwNtKzP8AhK2Gzg==
          "]]}, Annotation[#, "Charting`Private`Tag$851#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox["\"\[Chi](\[Omega])\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-0.1, 0.1}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822796427353816*^9, 3.822796458765138*^9, 3.8227967012753997`*^9, 
   3.8230585698556366`*^9, {3.82306052670042*^9, 3.8230605398986764`*^9}, 
   3.8230793018853874`*^9, 3.8230832454412336`*^9, 3.8230851979528008`*^9, 
   3.823097253939587*^9, 3.8230986298420224`*^9, 3.823098905181678*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
D179G0KqexF3DD2rgeL/v2H0f6vQR98=
          "]], 
         LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAA0VDFjAsnsb8AAAAAAADgP5yQQYLc
i7C/FFrPPPdj3j/QMXKTkDqwvz986bAcjN0/CKZFSYnSr79qngMlQrTcP3Do
pmvxL6+/lcAdmWfc2z/YKgiOWY2uv8DiNw2NBNs/QG1psMHqrb+k7X43Sf3Z
P6ivytIpSK2/KHREefK92D95NI0X+gKsvzOBz/xEP9Y/4nbuOWJgq7+5B5U+
7v/UP0q5T1zKvaq/Po5agJfA0z+y+7B+Mhuqv8IUIMJAgdI/Gj4SoZp4qb9G
m+UD6kHRP4KAc8MC1qi/+HpcGsaAzz/rwtTlajOov1bpqo98tMs/vEeXKjvu
pr8Kxkd66RvEPySK+EyjS6a/YjSW759PwD+MzFlvC6mlv3VFycmsBrk/9A67
kXMGpb8kIma0GW6xP11RHLTbY6S/v/0FPg2roz/s8/U5dcSjvwAlJAD+MWo/
fJbPvw4lo7+oQw2lyP6mv5zbgstB5qG/5xPLa6YQwr8sflxR20ahv2X1Do0g
Oci/uyA213SnoL/u1lKummHOv0rDD10OCKC/O1zLZwpF0r+0y9LFT9Gev/pM
bXhHWdW/1BCG0YKSnb98+QVKX7rYv/NVOd21U5y/nLduNWDU3r8X3j/Vjhac
vwAAAAAAAOC/Wrv6kg==
          "]], 
         LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAfTPU3/RXnD8AAAAAAADgv2w+kAge
9Zw/LIfcLglx3b9N+dz86jOePxPH4fdwQNi/LrQp8bdynz/6BufA2A/Tv4g3
u3LCWKA/tN9Bx+p0z7/4lOHsKPigPxTuZp1T8sm/aPIHZ4+XoT9z/ItzvG/E
v9hPLuH1NqI/phVik0ravb+5CnvVwnWjP1A82a+3P5+/oC0V068ipD86eYjR
iZKQP4ZQr9Ccz6Q/n4u61DIZsD9tc0nOiXylP56Grq7Jt7g/VJbjy3Yppj85
ql2d4Q7APzu5fclj1qY/IxFkY97Bwz8i3BfHUIOnPw54ainbdMc/8CFMwird
qD/iRXe11NrOP9dE5r8Xiqk/Zta+vehG0T++Z4C9BDeqP4r7mH0QCNM/pIoa
u/Hjqj/23KD/z0HUP4uttLjekKs/Yr6ogY971T9y0E62yz2sP8+fsANPtdY/
WPPos7jqrD86gbiFDu/XPyY5Ha+SRK4/FETIiY1i2j8MXLesf/GuP38l0AtN
nNs/835Rqmyerz+K1mIjGpzcP+3Q9dOsJbA/SO+cgKpw3T9g4sJSI3ywPwUI
1906Rd4/1POP0ZnSsD/FIBE7yxnfP0cFXVAQKbE/gjlLmFvu3z9lxyxqPTCx
PwAAAAAAAOA/I/n5Tw==
          "]], 
         LineBox[CompressedData["
1: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
0+skcw+xQZB/kxl//wbIux+fOiHOCfRqqTqhwxugYV52sQG4IJbaR3ViYgMG
UgpbcCI8wNN0XV5jbgPiToQSE+TOQHaUoHDa8gbwko6NiKjwgrzR3qlDGxuQ
rGb67jA9H+DYupjtdjaAI/y9wWIPH3R+erLFR7UJCoz8dYWuAnDbwWw+hH4T
/undDYhREYQZUanhceZNMH2be96DXgjclqk61Vk2obMXjzfuFQLit4Ffnzk2
oZmFvr3jlTCEe38ro+TZhOOZyjvWPCJwVOV5vq3AJngquPCtfBUBwV/n4/ik
N4HbousRc58oFD5neh5ydhMcFqg/Jt8XA6Xrk/7jSpuQ56/4W2JPDGqPVzxU
V92EdSanlYoocbjeF2P/WXMTnpiNaVATxKE/6d4Nyqub4GgodijYWALsrFV1
bfU2Qf2aR81ekQR4zy3K81kcxKtTq23clwSKglrhEKsDvdh18of1kvDK/T3n
uP0mfFdM+LnAJwVsCm5H1B0P9F24wujpIwWpRK1Dn103IdY40VE2XQrEq7i3
KTw34bDrfMNSmxSUhG3O2zzehODnysI5RCloYkrr5A3fhHJLl9WjotJg0ulb
H/xiE3YX4s/gQRpG4vXLx6I34ZzvT70WY2m4f1O4QC1uE8Js0iJeWknDOg8p
NfX9gb+8yBg2a2kImOyOo/i0CX7b3klpB5guO/e5TcYmeKvbZkjbSAOXnLkb
b9EmuP49X6ZlKw1ZW9IOwSUH+eDnre06wLIVNOZj5Ztwx4WhxcpOGiqChnTV
qjaht/laSL6RNFzW/H4x9dcmvLxgFy+nLg0ddC/PUjRvglq2T06pjDTcbLER
sWnfhB22KKTCIw2upkeO8g5sQs+Ce2vUjhTYZEklCoxuwgcrppNrf6XAmHCN
T2TqwP/cRv7h71Kgpe2cKz6/CfdNzaYpDvKp9P7VWWn8JgjWlnHvKEuBxEIu
Tm5jE7qlT5utkEkBj0rz5fM7mxD6ITB6plYSqIbpzbFDW7DsqUHeqyMJ21Ki
4xfptiB5PEOx5YgkzAVdcdJk2gJzPTq3ui4JGGy/u6F1fAve9k2mVoVIQBtv
RIAO2xZcLKx67CUrAYkOVJ/NxbeAjVlm+NqiGLz8j1/8tswW9EwxlB5KEoNA
Wo3v1ue2IBQ3E12mLQZ22cH1d1W3QCfOfE/lpShILZHmPY22QHOXVSuHTgRq
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
          "]]}, Annotation[#, "Charting`Private`Tag$1005#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
/wB2gbR1
          "]], 
         LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAApclD4aWZsr8AAAAAAADgP2LJHRuk
c7K/6IyuWi+h3z/LC389DNGxv1Lq1enR6d0/AK2vTsB/sb/8KZgdf/7cPzRO
4F90LrG/p83lPIMI3D+ckEGC3Iuwv7LYvb1089k/0DFyk5A6sL/+ox1/wdLY
PwimRUmJ0q+/F4sDgTCi1z/YKgiOWY2uv4Z0DAY0DtU/QG1psMHqrb/+gRtf
+K3TP6ivytIpSK2/Knh6Uts/0j8Q8iv1kaWsv3VwNp9jvNA/eTSNF/oCrL92
G/iOj0POP+J27jliYKu/n+Xvmnzcyj9KuU9cyr2qvxCFrWb7P8c/Gj4SoZp4
qb8Ytb6dxLC+P4KAc8MC1qi/5IuAdic9tj/rwtTlajOov7jg2O46D6s/VAU2
CNOQp78gnyLJNM6QP7xHlyo77qa/+PNCeFVGl78kivhMo0umv/KsxT5WmrC/
jMxZbwuppb8gF/x0QTm8v11RHLTbY6S/KYtCe+Mhy7/s8/U5dcSjv9rtYQIU
+NC/fJbPvw4lo78QywugHlDUvww5qUWohaK/EJB3ShEB2L+c24LLQeahv8tF
QrHkGty/0hsebn1eob8AAAAAAADgv1KI7Dk=
          "]], 
         LineBox[CompressedData["
1:eJwB0QEu/iFib1JlAgAAABwAAAACAAAAHO+wU3RtoT8AAAAAAADgv2jyB2eP
l6E/AFzY5Wut3r/YTy7h9TaiP6JnXNiKJdq/SK1UW1zWoj9sGsKGsAvWv7kK
e9XCdaM/QP259AFU0r+gLRXTryKkPwTqyf6cWc2/hlCv0JzPpD+EeHytG7jG
v21zSc6JfKU/vh4kprARwL9UluPLdimmP+y5awN0abO/O7l9yWPWpj/ARZyg
H3WevyLcF8dQg6c/kDAeVYSZij/wIUzCKt2oP5cqRIs86bY/10TmvxeKqT/L
y1Uj67K/P75ngL0EN6o/h/fZa2v8wz+kihq78eOqP3UVy4wQCcg/i620uN6Q
qz9ek/dqzdfLP3LQTrbLPaw/bg3eJERszz9Y8+izuOqsP+ePfmwLZdE/Jjkd
r5JErj8xv+9ULHjUPwxct6x/8a4/dQHQAQbg1T/zflGqbJ6vP3R9Y/kTOdc/
YOLCUiN8sD9nlqGkibvZP9Tzj9GZ0rA/d+ixx7bi2j9HBV1QECmxP4Qd11uo
+ds/Lij3Tf3VsT98TryPQfrdP6I5xMxzLLI/U1mqi53l3j8VS5FL6oKyPwV7
F8m4x98/92HbxFOasj8AAAAAAADgP7gC5eE=
          "]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[{{-0.009766712931747011, 
          0.5}, {-0.009668530942333643, -0.5}}], 
         LineBox[{{0.011461943091042369`, -0.5}, {0.011555596024701627`, 
          0.5}}], 
         LineBox[{{-0.018815641139483086`, -0.5}, {-0.01862782969882155, 
          0.5}}], 
         LineBox[{{0.020619528127377596`, 0.5}, {0.0207778550344506, -0.5}}]},
         Annotation[#, "Charting`Private`Tag$1005#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
UE1dqygaRDRS38btVPBA8f/fEPofN4qDFw==
          "]], 
         LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAv2W+suByrb8AAAAAAADgP6ivytIp
SK2/Klo5+YnS3z95NI0X+gKsv+nDdUcSY94/4nbuOWJgq7/Fdjd+RaDdP0q5
T1zKvaq/q0scEdfV3D8aPhKhmnipv7zFcUBSKds/goBzwwLWqL99z/WK9EXa
P+vC1OVqM6i/4yjoM+tY2T+8R5cqO+6mv2Z2V6P9Zdc/XVEctNtjpL/BsdJ4
Ph3TP+zz9Tl1xKO/fl9zg6b00T98ls+/DiWjv5x6/xGftNA/nNuCy0Hmob9r
czl9iU/MP7TL0sVP0Z6/fPbTefcuwj/UEIbRgpKdv3Q0wJL7yr4/81U53bVT
nL/7KspfzdOyPxKb7OjoFJu/zXFGumYenz8y4J/0G9aZvyS5ai8ugXq/USVT
AE+XmL88w7dtV5Ohv3BqBgyCWJe/R3RWXkjXqb+Qr7kXtRmWvz/T41vfuKq/
r/RsI+jalL8OSXoqA9Wiv845IC8bnJO/rNWHxlETWb8erNssRYGTvwAAAAAA
AOC/lIDNVw==
          "]], 
         LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAco0mRzRplT8AAAAAAADgvyjdw05Q
fJU/Bzn0+P4Tt78JmBBDHbuWP+DTCTAOVnM/6lJdN+r5lz+AAnvcYQd7P8oN
qiu3OJk/0IsodGFykT+ryPYfhHeaP9h87S8Ow6E/jINDFFG2mz+0lniLA86t
P2w+kAge9Zw/fZKJ3ccUtj9N+dz86jOeP6pcjdaYEr4/LrQp8bdynz9SOfsT
GkTDP4g3u3LCWKA/j8Y3i4wtxj/4lOHsKPigPzbzzV1Wq8g/aPIHZ4+XoT/4
gswmtSnLP9hPLuH1NqI/imw5vf2lzT+5CnvVwnWjP/sTO9fPRtE/oC0V068i
pD+zPLbLl5PSP4ZQr9Ccz6Q/5t4uQ7vY0z9UluPLdimmP3qNlGcLKdY/O7l9
yWPWpj/c0GenY0DXPyLcF8dQg6c/0u/Iry5O2D/wIUzCKt2oP1xj0S57Tdo/
10TmvxeKqT9gCcevKz/bP75ngL0EN6o/tIFFhHkn3D+LrbS43pCrP0JCpdPi
2t0/j1y+cZR+rT8AAAAAAADgPyrJxOQ=
          "]], 
         LineBox[CompressedData["
1:eJwdV3c8Vu/7t0NWSmUU2dmJQjpXGZEoK2QUQirJqtSHEjLK3klkhBBCtufO
qox4bMl+7PnY6+H5+v3OP+d1va7rvN/v632uc+77PmX9WN+WioKCwpiaguL/
7kuvcCPeWB1Q/P81DElOt+sultRBBEfQrUHcICSYM+RGD9WBo5ZJMrPOIMRp
FsXOH6gHXYvjAwt/ByCMj/HhR5N6KIxO019e7Acv/PdDu1v14C2ySCvG8g+s
ZJjvVCr/AnPKWKtunh4QIFZsKdU0wNveg59jk/6Axx9V39X5BrgwW3CPyqMZ
urOaWHI5GyF0bEA3yKQJ3tr+Ezjl3AgU1pM+99gbgNi3rXOArwkSYg4yiwbV
Aa5eMaXDsxnOWJKdX1qUwPHUaongL83wLeqo4KDsd3DxulpypasZTq+Jn849
WAhCF241l0n8gbCyBLHSsK8QlO++nvTvD0wNGtwz/fMeTD+UaDkotoJBZNyn
KxEpqMgduoRsW+G42tpT/evpiMXo152hsFaQtcn1Ytn7gqrZetz0p1rBLer1
auGHfHRE9b8bCdfwYPJvrUDctwRVn0FHnlvhoabTZ6tIogw58lH33XyGB9Px
ykekP+Xo9+5bG9ZUPNzjfqqivl2F/iuNf+69jYec+x8P/NmuRqIZg9gdtjbw
Of/W5FJ+DeqM5qdRFm6D+5ULY0lWtUjKNStkTa8NnF3DHxNL6tA/qwWD9ntt
0OzIJ5FvXo8CdGU58zzb4D0uU55/tx6NSpan2n9pg+TUzerDZ36hUJ49e3XU
BpXVAcVedb+Q8kEVKf6uNsBTjXH4GvxGMVMNpf8o2oHXt4j5lE0Dupr69891
k3bApRlWel9vQsQ3uXb1j9rBhkHP/EtFE4qz9yFf8GmHQ8p66aaCzWhKUvLM
6dx2MDF0/S4z1YzC2Kgak2rbgb3vU/9l1T9IYaXb+ujfdnj9BX63vP+DAkq9
oqhpOqAU+b+8qdiCZD7clHzB2QFJBkzs2t4tqNdT7CdRqgOeNZXulPxsQV6W
5Nv31Dog9IaLagxdKxJV7dwYuNUB1yK+sNVfbkV4oS9hho87gOdZu4y9eyty
p395usm3A+hmNwpfZ7Uivln9msvxHcD4TzDrcG8r+v1HxKw0rwM4uAoOhVHg
kVM+aUWqvgOKnYdjO9nx6HhkW9Dnvg6YnEl53MuPRz+epAvxEDsAPeMKipbB
I3uT/3ARtJ1w/8eNu4zKeMR2QdeYgbsTMmznJdXU8aj0hBDxlUwnBDi8rVHX
xiNLiu2AdfVO4Oqr2jikh0f0hJZTj8w6waHwZFq2AR7l16eWE5w6IWhXNZHD
EI9MMt0NTP06wb+qrlJfH48o3unM4T90wue8NbLJdTzKfMT/RuNbJxQcNYiQ
18QjXd2NE7if+3HR7gAR8GhTtrlYrr8T+vP73ELl8egTR/KN7KVOsJVtneI4
jUcam0+mTh3oAj/LH00BXHi00Kf1Oo6nC9ysI/PmGPAopoqXi1W2CwzNG7b9
F1oR9mm14I1GF1iGSX5gq29FE94N10jmXTAaXngzPrYVhdgmjrm4dEEdXi3w
jF0rOqfp6jnt3wXEysaoUZlW5Md8Iq+7oAt6zU3zastbkBRxSUPndxfcJ57z
YHrRgrrbfw7XDnQBq1iYTYR8CxKOc2L/Rt8NjYc26D4m/0EtL9SzRU52g2P2
J93r+n/QUwsutcSz3dCZzZbiR25GP/nrnry73Q0ZDVneDTeakSPtexYqt25w
MaP/vLzchI5OPcpwD+yGizcNdxsjmpDd12N/bYu6wd/9Nz99QyOiU3iofImx
B3QErSfQoQaUy3Wpq5i3B1p0nWsHEn4jo90jjpLyPVB9wM8QhH6j9BpcEpdl
D5xRMjquJfULqeuwU69974Hj1aqbXwTqUYgVw9JWQw/MFDMu56TVod4nFEN7
Az3Q+W0ycUigDj1IXCinp+sFljApKvETtShksdGFx6gXZI0KY2D3B+oN9xlV
Xe8FJdfGHSraMvSge7U64lwf/Gm3qetgeI8KZ2bzYrX64NWZgRfBZlGItDf6
MeF2H9htKzqZWoeiEJG25+l+fSCTlra6lf4cFbp/PVPe3QfEAxqD49X+QOKy
Sx55+g+OT/f43n+SAerSFqETb/+BXK4ffVTIFwhRNfScTfwHmuZanKHJ2XDK
QeXW2s9/cEZS+ChfUR5cqTp5iOFYP2Sdbu3TrS2E0DYOMrN4P6TTLxpbFBVB
7zjTPDv0w6erdp8fJX+HByw7v3nu9cPDhsuGhx+XQOidHi+Zkn6Yj9k71tVd
Dn5zyjDR3A9WegXOxcUV8PJ5yu6H0X6I03k3tRNWCY6Rj14cYBkAFoV7O4fl
cGDH16FQJTAA+jwfikdJOLj9VWHDRXEAxrSPdVYiBNd/UbsN2gzATHM8Kfb9
D7hieF826sUAtPHAt6alH4CNtBCvhg1A/Z9Cs4or1SC18/7R94oBSJ11PtE/
UQ3CAWTxh20DwCCcSqSVrYGTHLYzfJMD4B2DlQw9rwEWaZl7QeyDsG1z/YgX
uQboKqOFVEQHQUylUk36Yi3sae4QNi4OwudtqgztZ7Ww3mWZ8tVgEEJMcuuW
v9bCgvVPy7v3B0GD7U0bz0gtTCyK83K+GgSZbh3Kn2x1MOgRPtASNQg5t1v9
p5XroJth44Nv1iBw38bHedvWQUuMuanSj0EYCDhmH/S2Dn4K1Bwndg3C2DzS
m8neXy/zRXo+zw7Cr2yGqJSGOii+GBxtRjkE70SX+msJdZDbuGxw6NgQHNKg
8dPZroN0YxP2XxJDoDiDn8KY6yFxrArvoTIEhNWx27E89RDjLBAqazIEC1db
LhuJ1kPIXoDO1KMhuD2ycNddph783i0cTPQZglsSFXV9cvXw8rhho8H7IXi1
QeBLl6+Hp5/LAhjyhiDo52fWQdl6cJTl1UB1Q3DpxEVRP4l6sEO+tE/6hsDo
1QRlCn893NaeqRUjDkGI0+BZeY56yJ4TuUykGoY0N6ubqjT1IFJoytfEPAxG
txgSKxbrIPV5MPnz8WGYPG/E8rmnDngv/Rj0EhgGn8OlgVyVdfCBbqXKTGoY
fj2U7xL4WAfH/gh9PKc4DAY/Or//flEHkZEmHofUhuFnWAKR7WYdsJq+M5u7
PgzIPFKLRqIODkwSOVNshkGB6+yZydZa8PkqsOXxeBi+BL3bm0qoBbKrUa/x
i2HY4303WmlXCxsUlTHMYft8Irb0jEs14Ppr4clU/DA8NZPtif9WA4vBp27W
fh4GD6mgbonHNTDJ5X/4ecUw8IhcCDIYqYa7I2XLBj+H4VDisfrDMdUwlDHX
JtU2DGbbTHLMmtXQI6cfNjYxDG7tcwHTqT/g1/UTzLrsI7DHJ7z85jkOjkiN
HHXhGYG5CVXs+88qsGT+zBclPAIPvGZ0VlirYLtJQq5XaQQaCRLXOWIrQOKq
spnl3RHYEN0jLbwohTBVsy9ORSNQVyMQE1X8DUwV3quHG43CiE2MaemKP6Qf
s7hRaDkKT9a6E095e8HKOt+trgej4Cf4npIo5gJB3zMdOF+NQm+oTLTdDzuE
ZEsjkzNGYbGmmU7XJhwxsXt8rP02CpZKZZoNG1HIZAkyxitGIeTz6Pthnzi0
nPer/DR+FEYLKNV8fJKQoGTPyLfNUSDUej1/7Z+OnJg+zHZQEaDv7me24+KZ
qGr29toaEwGKvl+Kzfj9BRllTdArndrP87gwxBFzUIDIunTNVQJIC4s8rnjy
DXXSlSuOGRAgsqDJxUa8AJ2a8FSlu00Ar9cdCaT+AlSeRmus5UKA/ENPv70+
W4TmT3G8bI8nQMSL+7yyWcVI4b9k5+o0ArjXJ1tsKJQg705J2/xcAjjSdNCR
akrQUf8r2iE1BFgO0nj68HcpshxuB89mArx/lCiWpVqGshTvnHXoJkCME4cw
vqwMYXPPuLRmCJAmGbx6LKYcBajTsCiuEsA4AJ/MRypH7YlhlKJ7BJhIshJo
MK9APJs8a0fpx4Bga2NEXVqB7PS+TNGyj8FQE+lYNXMlys+S71/lHoNHtdfV
Vy0q0TZ1TStBaAx4sZcVIZmVSM3iem279Bj4SeYZe89XotDivuJqxf18+snF
exJVqI/1Xla+6hhoC8u5+NpWIcH7Kx+TdMZA3WCxZTiuCjnWvAoPMR4D6uFA
ZvefVaiUm+mNp9UYeLy6eE59oQpRPYlzd3g4BmljqnqqbDik3SLoYPZkDB7X
dNs9ksChGJFvd7RejUF7k/QrnAoODXtdNFAMHIPVlO85s/o4JNbXcEU0cgyE
JSq32SxwyO2skdKxj2PwZLUv8bYVDuGCRiXpMsbAcGcz/e8dHKKfcDy1lj8G
Zy7t8vmb4JA+7BwZKx8Dz5oWLodrOJQQ50/fUTcGGa8NU4IVcGhi6TCpumUM
+Dyf1BN5cejMtU+L+b1jwCTjdvQxJQ55pEkQkkb3+TDutZX+KvRzt7Q7ZG4M
GoQia3sKqhCbsXqj5/q+f7sKo6d9qpBpfluVA8U4iA/c/7alU4XSGG5/M2Mc
B8V+73Cjw1VowXomTevIOMiwj4ze6KhE3hzUQaKi4yDLb3BVQ7USNTuGvjom
Ow4CA8/u0qxUoKO/uV3plMdh7/tqRPrHCpT1Qs507MY4nP2de4VMKEerHT90
Om6NwyKN5s2pV+UIk9S5XHN3HEzsloK5j5WjjiFb0U/PxmHio0RE/fkydFJx
mTv09TjglpXyOKtLkX3ES9aX78aB4j+6yuNXShFJLXbdLGkc4h6+P1qrWoIE
s37XHfs1Dn4/a6peHvqOHKlvltK1jcPb8SenaT2KUKn5SPZa3zhI0ElUKREK
kTbrdkTHwjg48e0R0jML0BM3cavQoxMg2MrCTjycj44yLlYanZoA4eEdyz9F
uag0qeD4SYkJ8DkTXU9W/opIjYr4nMsTQH3/10Tw5SzkfUoTGh0m4KiEhVGK
SBoKabE5QVs7AYyyV7atTociGRvR581/Jvb1HOCaZwlEbVuznZG9E8C0Toes
97zRESHXIP6FCXATN1Q/R+eA4v97vQOck4BX+qc5f94LlA+pGx8QnATDu/rz
TB1vYCCdvrBFahJk8/hES4zfAV976AMLtUlo8Y3iFGKKhHTRxL8vHk+C2/rT
Oy+EP4Imzkpe5cUkuL5Syqt8kwTTBkLhDG8mIaaRrGoz8wkkXuVoxsVPQtOc
79xpvlRoOeKUdufzJCRY/ry/KJkGj7POUojkT0KNwU/Jz7KfoaCrvOR7/SRY
qX5jvn8yAwwfvjzsiZ+E0BO/SpJoM2GNQuWx2r9J+CorfIqTkAkKEg3CHcRJ
UAkuv2folQV91UHe8TuTcJN9/k43ZMN/xrqDVnRTEKF3V4d7LRtw3j3RRO4p
8HS4l+GBfQXL4x+WSoSnoPp500nPjq9AmXtb59WZKVhY0I7muJ0LKar8X64o
T4FilBiT2mAuqP0dp2HRmIKuM6m+dIZ5MOH4xbJLbwoGQ9fIpigP/GkeVSaY
T4GpZociJVs+iMbLHLe5NwUlfsNUFUr50Ci96iruMgUPyqizrlnmg0N9Seuy
xxQI/FEeRF75wGz2n3i5/xRE5767LpiQD7lEzP91xBQ81SJ+eVOQD7p+VATN
j1PgEfwgiVibD8vcPzG2zH0+m+0BZ3w+RH0LjO8pmAKhJtO8jp58OKehs55Y
NQVqjpcvqPflQ08/m77d7yko49hjou3NB613tr1u7VPQnrOXWdeWD5WK5bd9
+qfgvlnuTvSvfJCaYhkPn5iCJG8EQWX58Cnm7sNPxH19PmN55Rn5wK5eupS7
vd8PavWTi8gH3xUm9yqaaYisGdQZds+H9WSrvSaWaSCL6lnOmeWDvW6xb9/x
abh2vDDF/0I+9O0xHpzmn4aDJSzGTcfyQfvrnfANiWn4ZNz/MnkkD3BmRcfo
zk+DqVLJBevgPDjDyJB45PI03L5bY3/wbB6klVoIClybhj5e9ret7blw9F5B
1pmb0xCfctseOeTCdq1ZyfX706CCuPwEw76Cg0v+RQvXaWAtf/VAlOsrDPLR
1j30nAYpKVZ1k6QcqPHMxQeET4MZB++REwnZ8O485UxN2TQ87xw/Zmv7BfbG
bzq11U7DZs7lj0stmeAUlbU+9Gca9EJS9B3kM8FwyYB6d2QaijDZK8zb6cCT
nc5znnEGXL7cTIqwT4OQWzsp6kdm4N3u09A+lAoU9LqnDU/OgFUMbreGIxXG
bLbknWVnwN/q6Y4KLhm+ntS+kW06A9oL9j5JbImARSy95s2eAYkJh0vXb0RC
/qUr9FLfZ8D8bk3YMDkc+BfjQ5TRDLAdYYiTKQwDOm21D7c6ZmBwmXpL+EoQ
tNLGFkXuzEAgwxX3x1beoFI0q5RCOwuFgU6e+aRXUGR9qTqfdRbOWdqr9Gn+
B3Fo+s8fgVmYTU8cOMjtApbPlScPaM8ChWATncYBURCz+d21YDQLMnZOIhWf
dNDKdcO6LqtZKMrMXL3MZYn8BB2SU5/NglCjIpPJQyeky7oZ+tZ7FvTjRv19
Hrshzm2fl87Bs0CapR4wMXJHOa0fzPYPH3CxkqeAs+4VelouoiWcOwufxMtN
ltNfI/hcqMBcNguGP1Yli819UPuLJo5/Lft4dzfUAuP9UIKtMU3N31nQoM6v
dOIPQHa6hOXMsVnwcpbovBgfiLaEdlqfbs9CHweRrGgahGrY/HEWtHNgav7Z
XC41GAXtsH9VY5uDH4fry+b6QxBfm9hbduE5OM/r6OYQHoZmKordt2Tm4NLK
jfKYY+GoMF3l3vCFOdh0/s+2PjocXfEwVcvVm4OQLa6Dq/9FILZ7E7LR5nPg
rXYl4tRYBPqr53LK494cKHIzBQupR6IU5T3Wuy5zQJW6XMKRFIkcRN7uXfWc
A3FKr9YDy5HoHPvReZmAOVAvqbWcvhiFyKTkf8ci54B6UkWz1TsK/Z6UbNz7
OAcefqiStjoKRbSXlY5nzkG7N31C9mYUMq9Sz2gunAOehrnaodPRSCizLboQ
NwduVy6wVxtGo4UIC9/4hjkgTdbYOD6PRqWe0y6vO+egI17/PV1cNPK2f2Jl
PzQHJpftU1/kR6NrBpS6N2b29eyMsXPVRqMjWDB2bm0O7jy+IXgQH40GRTkl
T1DMw8FVownnnmiUefgzN83Becgdyrrn8jcaOe/JMM5yzENewHaxTHc0Upqu
3GzjmwcX9bVR/J9oRNOpOVkqPg+zIT2aj39EoxZcZ1fSuXn4N9hbLZUbjWK/
WNb5Xd7Hb3q3hMVGI8uouYJH2vPAei2mpv6/aCT2yj3Z0Hgenhsl8k6bRaPV
+zRhF6znYWzs6krL+WhUZRj2kv/RPEzNY6IfWaORH/A8YnCfB877Al+eE6KQ
rlimGdF7X8+m50BYYRTi4pDT6gmeh1LLQBoqryhEICMFXNw8NF2YrVnSjEJP
u3o4gnLngTBCkT2Cj0SXftylcS2bh+JNMxGJsEjEkL24fKtuHtY4zYcDtSNR
gtcBvEjfPLwhfJiTr4pAteLn39bSLkCNk09mwetwdFvaMHWJdQFI3DrsZ8+G
o01Z50pergUoHFybOk4IQxJK2Qv/SS1AkMgXT4SFoShNXgM54wWQDfnR8aUl
GNnZHuD5nLkA/J2RTVwiAYjivqB8R8EC5N7vtwl19EfxDpevU1YtQNa/Ci3c
dz/U4vqfl0XbAniwEbRfqb1B570Xxzi2FyAg4Vmotq03ok/q+ep3bRHqppbf
mqU+Rykpqz+Lbi7CZe73Frla7kg5/dDw6J1FMPsgtmOy9hQ5fb3GDm6L8NMz
kMrDyA39rUBPNxIWwVf915ZGuCNyQ/2hQhmLYB8bev47rwNiqd3KNPi2CLks
m1sXSu4jlcaz//LqFyHniMjNhzS2KKs3A+wXFkH+rKqSnKQJUu+vM4nZXAQs
83wubtoAEReJCtaURGgsqr/C9ewGervCrB92kAj9ufHXBoIwhNvW8J3jJULB
t+GmOwcweOfRHUYtRISJ6751LUJXwGTP5iOXGBGqPmimmnDpwDKld7GmHBEM
VbS/2ijdBGGGyqk0TSK8l6OKuowsYfmX1IMUHSIsqxSf3BSwBpxf8mySPhEE
TL9eS/S8C0Y0/gvx5kTQ8RB7OcxiB/y1W4/jrIhwyPPsuV9X7sHCa4elaLt9
fPGt5GpXe3hD1lsNcyJCF8cglfTXB6CLq3sS8mQf/whr3o+yh8DjeX7j3Qsi
PNfg80ytcICibZ5tP18iHCtl6WNJcgSvstD/fAOJ4Fmew9Lm9Ri03al2X4cQ
4U2V/xiPhBOMrU2SPeKIsGm78Udu1Qnyi0xfv/i4jxdpz1yo6wwern+o3FOI
UDpzal0x0xk0ZS/5PskgguVg5Uj3tjMcWSqgdc0hQvTE7bOPNV1gOE/I3+nb
vh+l/KHnw10gxzGO3rGYCN/WssLUu1xAdc7z4P0fRFgyeNv37IYrsGQTg+zq
iRB8JeUP7o0r9N2/y2LTSARxDYrKsBLX/f1kd6hVKxHccTQ7e2Ou4DKpeehO
JxGmcnx56VncAEuviDD/SwT6/PPfG2TdgNFW6ojpIBHa32YX3TFwg26B5Ghj
AhGYleIGBh67Qcro4WM3p4jwuvz7onGAGzgm+8XpzxNhnb4yayTBDZQstzh1
l4lwlv9uS8hXN6Djdfigs0EECuq7XK7lbtA+MMhzjUSEoOxrIgm1bpCYoJeo
SbkEl/yiNk40uMEDszreK3RL4M9r2X+4yQ3OcZ1PVj24BKfQp+8R+3nKv1/4
L7MtQVuO5t28OjdojuVJwziW4KaMVv3LSjeIMwoVUuZaAsfw2AqOb25gw0GV
oci7BP+OCQgHpriBTKeb6HnBJRCzvz42H+YGpIjJL3Knl+D3J4UuEw83+K1n
Ki4rtQRTJS59gzZuEMX2J0f67BLULPF0Rmm5gWUrSEkqLEFIhHFKqKQbSIQU
5IldXAKfQRWhMWY32NQWOiOqsgS9nGTljFlXCG1klBPQXoLJwlbTP0muYBro
+Z1PbwlmfxeUWz91BWFN4rmTRkuwoJKuWablCrj6LkVOyyVIu/WdbXvOBd76
alYctV0CAadmM6YKFzBSrVA+8mAJVIZm1qX9XWDhxydgdVuCrXI52OF0gROV
D9VpA5ZA1+LuG1qJ/fni3N52DF4CmS7GwoeTTsD0NCC/N2IJdNj4Ci4nOwFJ
+jN3zsclKG6k/vWBzQn6UgeX9AuXgH/3UEBD9SOIeaeX+GlwP27kKDYqsIeQ
qSEDxrElqP/Emjd4cP/7UndkcJteguV0ku9fm3vgRn7rprG6BP2DnMszHHag
71qntcCwDPrZ1Sdqn90FFrPzGxfkl+F1va1ubbo50JXW53xWWgYb2X5ffjsz
2D1iaM16aRk+Hqz4siNiCnMtTn9GtZZBNHlWL6bIGBpVslIDLZfBi/Waffay
PtQkKdxasV2G7ZGTy2mNelBG+sli8XAZLrwNKb+VrguZxYTnMk+XIWhSyWyq
Qxv8xU7o9rxbBufvvsnpqmrw0j+b9nL4MqSvXZ/elVOBp2OKFVkxy/vnJjJL
mfQlsEs0En6ZvAy/XyTdu+utAGrsYSTBkmWIrTSe+2sgAMqPTxaEVC6DByn0
SkPYcTjbnHNvs3oZ3Hmn8FcTaIHfr6G9qXkZzHOUlyCMFVFsU31xGV0Ghc5e
8odrMsiS8Hfl1eQy/LOmkDuwJ4t+NOdjwXPL8Gdt0oE6UR55Jd3uzFhfBlX8
R/3ITCU0HCDP+31nGYqvJlPJHr6ILrkwPaihWIHoueCBQw6AyGrl5H7GFaAN
vBJ8c/Uyui0VrjXDugK2Du3rHHSqCHfMPnrjyAo8LwyWqWBRQy9nOMTZeVcg
YbFBsY72CtoLdTbSOLsCt3SZzGSDrqLbzzWTDRVWwDL85JqjiRbCWfPOWV1c
genSA8Q97mvopfyf1x4aK1CrMzAv/VYbDZ5Maw7UXgGbcG7PLTkdhNH/dyxW
bwUOMv52+9Kjg3b7RL9+M1uBhSusxcy0N5B5HXkDZ7kfv5kOHwu9gSq/dqs0
266A9PHky7cZdBFP7Nfgvw9WwO5Ix9mVK7rIw8u3d+LxCtyn+8aO89JF/ffN
BFbdVoD+olVbU7EuUjaQdaR8sQJHDjDePT2ti0hCw9Q8vivwJWyw6YCqHjJn
Lbl+OnAF2ueNAlMe6KHKzeD350JWgHXWc/driB7iGbUZU41cgYFV4dBreXrI
o+mCtF7cCiiVf5J426yH+ovYX9z+uAKCri9D3Cf0kHLidN3DlBWIMzZ4JLSr
hxL8f7A+z1iBqKSC10ls+mjHKdbUL2cF2H2kfdf49JGpqePnyG8rwKFkIXlO
Sh+Vq6oTPxWvQP2Z6Ro7BX3EJclzIbdiBZgsTOmSQB+9OLrypuLHCvx9zbux
qKqP+sgN+N/1+3gPrl67r66/v7/7xN3duALxQ1OlXGr6KL79mR2hdQWMc1jW
D1/SR9sV178RO/f9jG8qtVHc5/8sRNr9uwJ0rjIlPDL7/CGkKweHVsB5/Ubj
VcF9fveO8ONjK2DveEdwl0MfPbfK6hea3p8HEs1lDVp91Kv1WuTswgpM2p9g
VVjWQwpyJi6XVlagyOON51C/Hoo7IV2ls7kCDym4/tOp10ObdHT0ZrsrUFBZ
sh6erYdMiP369lSrIP3iwlBlqB4q/Vv48cmBVXhkd05lxFkPuedYnQ07tAoU
488Krsvood5ohZcfj66C78yu5Hemfb5XrA1Z3Pv5Dx8kdCd10YZe1e16oVWw
cY7/bhWri7z/5g1g4qtwl2fnncl9XcRilWJeKrMK6touzb6KukjYyd80+8Iq
4GS9S599uYEMQ/SMwvVWQbxyeFdkSQcNc6h1MRqvQp5N45Schw56+PGcoa/5
KuSfR46jNDrIO4db/9m9VUhEU8UWrNoov3Fcx8JzFQIYHqwFM2khZf3e5m7v
VYi9Jyhe738V/frbeE03YBUk2U8YJFBeRYNTeVdVI1eh3K/OzndJAzEdeKF+
+ssqmKDt+Mh6dXRfleXiWucqKClpWf0wuYxWGykqHftWgf9DDF626RLy0l9R
mhpahY+iP7HFi5dQnFWvwr+ZVdi+R8OjcBVDP1+lyFVTrIEU7+mt1GVFxF95
TiJYYg3iJQdbTqWcQbmqp7PpZNcAGSYo6aXKIMUmbjGv82swI/nmZMp1aaTb
RyHqqrIGWY3iVjecxNHLzUaBWyZr8EPcC8dPKYj+yd3hFvJdg4TfSP4LgQHZ
bcmzvglcg+t0KujOT2pErGKiHg9Zg7tWRw0oQndwNBrlM2nv10BG8m+Q25k2
nNQtjnLBvDVQZjWvK/pIDaUn5r76Fq2B+1iG3hiOHlRGa5LHytbgnv7BwUM/
mMH4oVNgWt0aiFVdj9vKPwxenk0mgn1r8IJvK5AjhAcYVVK0fYfWAPOrvbmZ
cBKi6Z5fGhtbA4YDQ+sEHT7IChUWTVtcA+E72YmpcvwgZ7jLTbO2r49KkreQ
WwBwxztZbbbXgJ4xOb1lWwA6kl9vCNCuwzfrhvsmyUJw285k1odxHb5fll0b
sBeGKTHpIQLrOux9WhdOFBUBUmH/z1SudTg2FUEYDRMFP/fCcmq+daCqLw42
VjwNhy6+zb0rtJ9/tqQBfadB+Of5GAGZddgVXe0poBWH/Lcsb33k10EqzFLA
JkwclG6MexKU1kHwg8SDjsMSUHe40ln10jqEeIrdOxwmATd6I2xT1deBbY0B
O0IrCX0J929RX1uH6txWehpXSbCxuqRzV3cdPl4WO0TbJwnuM/NyAmbrwHPm
6Le4SCmgyqsT9bHcr88hnDWdkIJg1w88BNt1KAdc41tZaTiu4MKm+nAdPi2l
y110l4YUkiZNqtM6yF6oPeZSIg0S1bybVE/Xofm6n7ElURqK36zPWv+3DkHd
2g/CD8nAJa0/QzVe62D5sOP8jIgMNLGkdfD7rcOF9GwazQsyYNTx4pf3u3Vw
1BC7XHpNBoZj9SpGw9ZBizXNQvOWDDwwF81TiVmH+O9sIRQ2MrDKR05J+bAO
9WmjyosPZeDleFcMVfI6GJx3KxBxlgGGrJy31unrwMqG7pe6ykCUo8/Lmux1
qGqrHMjbj0+eNXXh/7YOIrz3Ann26zM3ZOy8i9eB40PJJJODDMhWHjAdrViH
61MZrqH7fJVegzoq1etAofcgJd9UBjTUv19O+bkOQlMmS17XZaCdIUieqnkd
ch209FgvyYB5i/Vp67Z1SDvt+PyBtAxMRCieqOleB4YHK3zJPDLgZMx2iL9/
HUbcGcjVB2TAOlM6Xmhkv3/rrt2ZMWm4uXVd4PTEOry4OiZFKJYGpQ/B8jLE
dRiI49We1ZUGybkc3Nm1deCV4U4V5pQGvovNGue31+Gnimy37qAU0A4xmmI0
G6D96Gpn6x0p2JQWI1xm2ICkliPJBjxSMON11UGdZQNssQgdwW5JwPMHvNQ+
vgGBAgbmnCqSEG9Hm2oqsQGlYkYXw3fFIahEUOL2mQ3QoQ6fossQh1f0at+t
zm2AeC/dA6/r4mCT5f3L/tIGsCVeeUARJwbSC+TZp4YbYKbKqT1+9DTUPdmW
i/TYgE+hg1Th3UJQ/JMTF/N6A4oPCfeIPxCCL8cUNeL9NmDxY50n064ghJQ9
u5UctgHH5174sZ4ShFu7q555aRvAyHoz+dldfljwXfzZ1LwB6z9zjlr9OAGc
UWMmNCc2ofrl2u7lc2yg4MN71I1/E/B8+iLO31jAyMW0gyCyCQNOH07+3GaC
CF28Tq3sJpRLXvn35wMDMDFXqnhrbgLX07scllzUIEZaJy/pbEK8CfuWgj8l
aM6eqbIy2AS/NyL2Sitk7E1DxvnLtzfBpm3ikc3wFrb3JlKCwm0TrlVz/vWM
nMN4nrRMP36+CWIXC7itaSexCzYMGUMv9+tpByWcwkYwd5VXp1DgJhhOCMis
9jRhS3sPjr5M2oRVI+5AF+Y+HNvC5475tE1oP2nIWVc7gpMaGA6zyNqE75HH
Iw1sJ3APKowOXvy+CTe/Cowt3VzEjT1ToSA1bkKOv1W/xtYGjuqeZ9VD/Cbw
4VaYiTNbOD6j0hf/ujZhrDG2L6hlB2chJ7VWPrwJxIs/g8kOZJyHwP0CsYlN
yHbv7tiMpEDx7GmP42c34YjjoPz3B5Som8g583x9E+75cSkw0FCj1SHDjOmd
TRjPO/U9ZP//frg11OYW5Rbw3B1rB28apPuVdkiBaQssH7/z6xmnRQ33lzo2
Tm2B2fYbO5E79GjKRCL8nsgWOA4eU344T4/oNO9d75HYgh+/tEusnzAgFeGB
38Xnt0CCIvlNmQsjsuQ47id8cQtknbRen59iRK9oDFRjVLagqTftc7bxQVQ5
+rvqic4WlARyvvwsyIT62qj/G9ffgsXMvn/i3kxo8wemcNNkC6Su+rLP/WVC
R/Ofr9VZbIERE85gW5wZyScVFcjd3QLjKOm2B+7M++v/4uM0+y044ONVqYeY
kYunmOQRxy1QfmGiUUvBgsIcbGd8XLdgkvtOaocyC8o1+5Sx4r4F10/f5w9w
ZUFyPQLbdC+3IFX1Lc1IMguq0M/Q5vLZAspzaRd+NLEglRaxJMmALcgPhpHz
Syzo99XcpUvBW7DbM8Ziys6KbtSfUTOM2AKNFJ5BBWlW1H3pe8y92C34+/yx
/YQGKzKvVJh+kbAFVHO2v9zMWRHhfOWFkOQtuEgOSlt0YEUPCiEkOX0Lrt3D
jjk+Z0VEqdrhouwt+JfczEzrzYqeZV05+zt/3+9xmYe//FjRnlDjm3/ft+Dn
fRv23/6syDdZp3ehfAsqbSwnON+wooMn2sSofmyBM/PJxtaXrCgiztCTo34L
CuNjPpHcWNHxI72too1bcOPMZe6ce6woMdSMX7l1C1wDdcvXjFiR0MEhtxud
W9Cl6xtLVGFFOX7Wv6z/bsGJbIfgfHFWJEs1wfl0cAs2K94/vXqIFZV53ncI
JOz7lfFBsnWFBV3amsMlTG0BIZQq+GYHC9IhrtytXd6fnwzDorJAFtT58Flx
98YWcL+6aFRjyYJMJ7fpZ0hbYL2bGc0pz4LsBylz2Q5sQ6geFY7cxYwWbr2h
EGTaBv9bj0KLUpjRky56g/OHtoHW4WYr9SNm5N3MumnBvQ0nJRP6f2wzIXrN
SC1nvm24osJ32BjHhEJrj370FdoGbRuN1PZXTCih/IRKtvQ2fKgx1K0lHUQl
meJBm6rbYKqJU4waZkRzvhp8kQ7bQFPv4t2+P/+uFE0u6c7bwD1Em6nGSI+2
/7teX/Z0G34HXbxbWHgAHXC9+WDYaxvWAni866gPIH6ru0WS0dsQos7Y5BhP
i4wvvtL8XbUNmY6/dcXzqFD/2gRrTc02ZJmz2OnrUyHr3Os9Fb+2oVfK86/J
GiVy4D1pl9e2DWztnbVnLlAib8oqn5jxbTDgft+RE0LG5dZv42yYd2D72EF9
YvcWTu6ltd9t9h1Qvhij/0RgC1d2rlHH5NgOXPOyI2w4beLqMt73Xzu1A/p/
m+e5WTdwfwMVtmXld+Ctuv4zx1urOJrrT+UpLXagw3Dzc4XtAu4t3SBp22oH
JJ7o1GWJzeNYkXrdqt0OZHxV3NRZmcVxyXAYTDntwMKzTm+10GmcNHuRU6vv
DrzYbnENWBnDFTVyKzQE7gD3M2Yh+W4CTsnHh1wTsgOPLG2t+apGcWqr+iHF
cTtQ922wYDhmGGfavZT9MWdfzzsDNa+1XtxwyC3X2G87YKWtuUDY6cbZalQr
hRfv43Ml6EczduGcSsMafH/swDNKgXray204v3jpyYed+88f7DxPFK7DMRnE
5tr+3YHbRtO8LBU/cOEHyU/uDO7AGmWFgkFtOS7Bo4XGYGoHItYz9mzDsnHf
bj/iVyLtQNUrDuc4/s+Y9XfiiU+UJAjEDVLO/snHjjC5cdIdIIEfnWy+92gx
9rTsBVv7of34NfVBRa1qTIRt76DCMRKMycMAL2cd1mv3+kAiDwkuZ6t5Puz8
iSkdCdi7L0ICnzOeiYFszdjsg4PbrRIkyHaMMwsIb8ESqkPW5GVJ8ObqsRtC
r/DYnmP0HOVFEhRXf7h4q7Udq2lI6XuvT4JrYw1izhQ9mCufcDfZmAQPipId
BdZ7MMFnX9psLUggFrlcxEzoxfwE83+fsScBTmu9JS2lDzv/39m62EcksDXQ
6vR48g+baitGuy4keK02q9UK/di1V1XFDZ4kGAKjRcWKAYzUdalA2ocEUT8t
OFgdBrFcibqv0QEkaLH/rJp8ZAhj62tMs4okgc74iNO68DBWLXP90684ErRy
RKU9ezyMufi3fZBMJMGpIGV6maJhrFOuN2IrkwRP3hKrwmVHsDfvzELu5JIg
Y8lH7b7DCHZudDCwvpAEDClKtihlBJtUsH4jXkaCGbEyts9dI1hc6LhXOI4E
H7jTzovTjmJXJ+w9Nmr3+6f+1Gh9ZhTbVp57ZtGwj+esV25uOorlRD52rW0h
Qdaa+cZpr1HMYmbZ8XQnCWhKy+1GU0YxlstPH4T+JcH2+Z+9kTWj2I/YLdu1
QRJoixa8uDo0ijkveFiZjZFAfuUZ/eGtUYxfncKiepoEdNSHMAo2AtbxwcdE
ZHEfr+ZpD58gAfNdpjMMXiXBf/EpYb7yBEz+6tsbK1skeEnHVKekRsAmkpiv
3SKTYCPCMwzTJWCx62FXEM0uSIrhyMW3CJimzhEVIcZdeG5Yzl5sScC2UmMv
vmPdBfn42406tgQsa5tLcenILpT5xIqE3SNgZnqJcsZcu2DxXk88dD9myjwl
U8W7Cx53n3eb79fj9tLEBYR2YYTO/x6LFQF7fFNUJFBsF0g55MhiUwLGl5PN
vyi9C6tjF7Ss9QlYO5X0yZvyuyDw0a2aX5OA+dwq4KxQ2oXp2lEZBmUCJpcv
z3Hq0i580kCtwlIEbJyujM1ffRfSjqp2BZ0kYDEWykzzWrugx5vhrs1MwDYZ
VanLbu6C5gdG64sToxj7AktUjekuKP65ObbbNoqJt/UJNt/Zha/PSUTfylHs
dqzLlaH7u/D39B3L4yGj2LMXWM+U4y54JickXnwyioVZMNovu+6Cw38KJ83M
RrFagZRA2pe78Ot9Eq5BcBTrp3PkYvXZhYzQOwZC9KPY+rRi9vGAXbig6imW
MTOCiea3NYtH7MIpzPyk1tcRLESZkk0/fRccy47/d0tsBMvk/fPJLHsXTELO
eorSj2DVVO/P2ObvAo9C/HvX8WFs9beMgXv5Lujnm5A+Jw5jpjctYxJbdqEA
Cs+XMg1jQo6IZ3Z9X5/HRFZJ1QCG6b37urqzC994at46Ow9gJnLG2B7FHuh1
3S6SFxrA3m4v3Dl0cA+yF/Ie8gb3Y0S/k6nnefdA9I/7WLLlP6wyyfO0r8Ye
2ClwVi2c+ot1e18tD9beA8uvmLTBQC+2aMtxLVZvD67f+mzn+74X45f46pBl
tge3TD9u2B/pxfxL+/Pwj/dgNbTrNDtHD/bpQ+alPrc9CEphU/vW042Vv3Rr
Izzfg9xfT5n0PnRjc2pMK+s+ezBdbn8uQ6gb02+7cO5E3B7UWk3dNtXowhgv
HKyu/LgHUfnWzh+ZurDqtL5r5ql7QCcoxa/T0YnJuD+3+pC7B2d4/0qSbTqx
qRHNOaWi/Xhbk3hAphNLunb8WV/ZHph/EuN7S+rAWHhLgjjr9+C4rob10fgO
7GeA37Gyxj0g5+9+5X3YgXku30wxwe8B56y/Qc7FDmyufrUk9t8e3GhuXjKe
bMcaHGQJHMt7UCzjaeSs0455dVM6ft/Ygy/SubhhsXZM4VLbpuHufj9xZnm9
DO1Y+mEnlih6MvCLsbwyb27DbnvC+7MsZJgI9w0Yz2vDOCZZBDsOk6Et6h0l
e3Qb5lv+VZGdlwx6nLb2w3fbMGVBz7pvgmSgTDSmfKbThq0Ea9/QEyPDAe7b
b/5TaMOyNrj7iNJkuPuFpmBKsA2ztpq1CZMnw1HrHrUy9jaMq6l8UfoCGaja
ny6yULVhbXJvX7ReIkOqj7ZX4zIeC0i8Rfv4ChmyzoW0tYzhsUv0p8NYtMmQ
PWUkx9aLxzadN7ly9cigHFu95d2Mx/L+/fqsY0yGZZh24a7BY3bqsTLz5mSw
Hp4i/inFYyfz7CqCrPf1sLrLGOXjse7j565I2JOBFt5lRWfisWBv2ramR2Ro
Pk6vNpqMx9TmOs0eupJhVEOG8VICHiPdTJtgfE4Gl2fqjIWxeKwIuTpnvSTD
F/1APYjCYw9Pq5Ku+pKhyPfi/FQ4HuOPZPefDtz3U+FCaEsYHusjjRwKDCWD
gjKlR9h+PtzuW4JoNBnsZBjfWkbiMU28l8jveDKI4cQei8XgMQol3YJ7n/b7
Czk/8vc9HitJ5b14IH3f/6u0MaaJeMyRefFXevb++4uzV41LxWPCz3D6V76R
wV7gXNLLL3hsYDh4YLyYDJ88gdUnD49FaVnYv6kkgxmDlubedzymXSSxIlhD
hrlwZTrqKjxGfZLkWfeLvP8/KhIMrsNjLkvxkdQdZKg5+3WJrwuPiZk9OJna
S4auRntj/kE8NlKn+EVlkAx/Pg4+TpvEY7pxvbjX02TgiLBgpibhMXqqzKun
Fslw/vE24TddG4YePuv8sUqGzrO+ujOH2rCnXVfuWG6TganfE1meaMOk4OgM
mbw/DzYPPgqdbsP+B11oOwk=
          "]], 
         LineBox[{{0.01116582172549036, 0.5}, {0.011198191177365478`, -0.5}}], 
         LineBox[{{-0.009323246823664286, -0.5}, {-0.009286461235815856, 
          0.5}}]}, 
        Annotation[#, "Charting`Private`Tag$1005#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Omega]\"", TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*OverscriptBox[\\n \
StyleBox[\\\"K\\\",\\nFontSlant->\\\"Italic\\\"], \\\"^\\\"]\\)(\[Omega])\"", 
        TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1.999999918367347, 1.999999918367347}, {-0.5, 0.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}, TicksStyle -> Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.822796427353816*^9, 3.822796458765138*^9, 3.8227967012753997`*^9, 
   3.8230585698556366`*^9, {3.82306052670042*^9, 3.8230605398986764`*^9}, 
   3.8230793018853874`*^9, 3.8230832454412336`*^9, 3.8230851979528008`*^9, 
   3.823097253939587*^9, 3.8230986298420224`*^9, 3.823098905447236*^9}]
}, Open  ]],

Cell["\<\
To get the time-domain waveforms, we perform the Fourier inversion. This is \
done in the next line...\
\>", "Text",
 CellChangeTimes->{
  3.8225352858130293`*^9, {3.8227967886326356`*^9, 3.822796819484009*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"time", " ", "domain", " ", "waveforms", " ", 
     StyleBox["q",
      FontSlant->"Italic"]}], " ", "=", " ", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]tdl2q0", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]fdl2q0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"\[Psi]fdl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Psi]fdl2q0", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"\[Psi]fdl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "\[Psi]fdl2q0", "]"}], "-", "1"}]}], "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"htdl2q0", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"hfdl2q0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"hfdl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"hfdl2q0", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"hfdl2q0", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "hfdl2q0", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"time", " ", "domain", " ", "waveforms", " ", 
      StyleBox["q",
       FontSlant->"Italic"]}], " ", "=", " ", "1"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]tdl2q1pls", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]fdl2q1pls", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"\[Psi]fdl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Psi]fdl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"\[Psi]fdl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "\[Psi]fdl2q1pls", "]"}], "-", "1"}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"htdl2q1pls", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"hfdl2q1pls", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"hfdl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"hfdl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"hfdl2q1pls", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "hfdl2q1pls", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"time", " ", "domain", " ", "waveforms", " ", 
      StyleBox["q",
       FontSlant->"Italic"]}], " ", "=", " ", 
     RowBox[{"-", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]tdl2q1neg", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Psi]fdl2q1neg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"\[Psi]fdl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Psi]fdl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"\[Psi]fdl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "\[Psi]fdl2q1neg", "]"}], "-", "1"}]}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"htdl2q1neg", "[", "t_", "]"}], ":=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"hfdl2q1neg", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}], 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"-", "I"}], " ", 
          RowBox[{"hfdl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}], "t"}], "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"hfdl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
          RowBox[{"hfdl2q1neg", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "hfdl2q1neg", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"\[Psi]tdl2q0", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"\[Psi]tdl2q1pls", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"\[Psi]tdl2q1neg", "[", "t", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Chi](\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\""}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Large", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Small", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"htdl2q0", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"htdl2q1pls", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"htdl2q1neg", "[", "t", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*OverscriptBox[
StyleBox[\"K\",
FontSlant->\"Italic\"], \"^\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\""}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Large", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Small", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.822535347812216*^9, 3.82253539434585*^9}, {
   3.822535679114954*^9, 3.8225357156237836`*^9}, {3.8225357550850434`*^9, 
   3.8225357935597744`*^9}, {3.8225523382580943`*^9, 
   3.8225524546684685`*^9}, {3.822555994736457*^9, 3.8225560138325977`*^9}, 
   3.8225582840714116`*^9, {3.8227968268444014`*^9, 3.822796827514089*^9}, {
   3.822796868082168*^9, 3.822796940032126*^9}, {3.822797015971775*^9, 
   3.822797025462797*^9}, {3.822797066660079*^9, 3.822797252312552*^9}, {
   3.822797283908136*^9, 3.8227972976627817`*^9}, 3.8230986134938736`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
f81P9J8=
          "]]}, Annotation[#, "Charting`Private`Tag$1089#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJwtmnk01N/7wImyRER2ZY+i7PtynxmMPUKRXcm+70TZK5UtoUSWmbFvIYm8
x5JdUZFKKqGPpI1QSb/395zfPzPnde6d+zz3We9zzoidDrI+u4OOjs4D//jf
t5P7+y///tnTSApFfZsXU7C3gk4/uLbsaW/tTFxkcT79fOqn1KY9LfJLTaVz
WgrmbTS6ZfbNnvbzyEfx7pQULOxIG2vBO3taSorZ16TEFCz919WDCt32tEqL
FfO12BSsPVvDxS3Jnnb4zFvWyYAUjLcnc4zGaE9jZvHJkLBJwYz0Xp53XTtJ
s1+7y2LBl4IJHNtg2r1+gjZi8FGpZyYZkwlP7GzesqWN7ZruaixJxupbqfpa
X2xogkez9hg6JWOT6SVlY9+taSrDru/3CiRjYedUn+u9O077Ry1ZVBhNwo4l
qSnWPbOiGb39dEolLgnL1eQftbprSftWycUieSQJi6H8erXjugVtfTTo/PuJ
RKxEI+Xm43wzWuvPAo4fkYkYcXOxPpdqQrvSsrhcyZeIPf1ywYf3ihEtKF74
mVNlAkZm63nWdN2Qxrd6PIhRIwE74671gTlUnybJnUTs9ryAFc2lmzg4EGj/
rDJ2EY3PY8q8LFj6mB7teHIt/BWNx5gnvVWns7VoWg//LHp3nMPc5gR3nypW
o5kV+rhUE2KxXGdN2eMnlWhT9ka+u/yisfmC4NkEQyXauuzmGeKZaEz1eUV2
o4oSrc4x8X6UYzQ2Zcq7ycGtRMsTkkwbNYvGBDRW+x4/UaSlz1nr8cpFY8Vc
dS7mJoo05lNiJWg5CqsaEM0x0lGgWW1ruft6RmFxZzh/nDOQo63xsjiMm0Ri
Of4xq8JScrQDWxM3ZQmRWEXE3NrDnXI0aQOhf+c1IrGnF1s2/vXL0lrP+rix
SUdi0rX2f5NNZGmYXMv2fQZ8fa2E+eqxw7Tr9Uc3z3ZEYIfSFEVu28vQjqaE
m185GIFNVVqbd/pL0mKadye0LIRhDjwczO2mkrT0wJ62E6/CsNnEkd5WGUla
4NCk88rjMOyjg4F2w7wELZ1bx3irLQzbZFM7XOYkQePo+U8m4XIYJhgiwHzJ
XJzW/J9Fwf1DYZiL5rteGzlRWhrhl1+8eyg2R7l9wYpVlNbWadVXbRuKjUne
jbw1LkJ73PQqd8QoFJudKj97zViEdraZ6PvhSChGp31RP0zjAO24mdEzq18h
mCHDsX96/MI0yZ1rs+1XQ7DH119HTr3go3Uo9999WBmMYdkmkjYFfDS3dKd6
9sJgrDGzbeKJPR9No11Gy/JaMJZ95brc0EtemgidF0t5SDBmm2w21/Gah1bb
Xy8drhmMvQrtsCh9y007UVLKVpEehI2Uq5lMP+ag7U24c1mmNACrvcNFnrDk
oNGP5tuVJQZgGYVftofH99CIbxp1f7sHYFbXqS0Pn7LTRgc/qmuLB2BTSbyi
5VO7aecUr3XSSvyxOff19YBZJtoSvRDVI9cPW0X+Jkwz/zCyk+/jr/Y+2JpF
1uGNuW3sSd0KfY0Kzo4tuz8u/cUWO/Vu63LiHLU11r/xB7si4vTmbb83tt5w
1TqNexObeFIs9UTRG/stUue40+wbFpBZ/UZvyxNToKM9DIAK7Kc3vWGfuwfG
+G8z0j4tE4lox1ocV/PAXqLirdHEZqT9L2W5ktUDW0B7/P87PoTqk2lTDXfP
YMuoX2JdcwaVSvPnPf53GvuCyv5t1a0gx/BwHa8r7tg3lBVA572NnLVLBqo7
nbBo3ol2pch/qPT7/gg3YycsYZ05WYlIB8Znrmq7PHPEWMZMnnhY0YPdnSQH
iY8OmGDsiNeQPwM81Bk8xbHzFKb7/HFBDoUJuK+GPZ/kPIEloa9dNXLMwB+7
pvD1qi3WX82x0NfMDEWZ8pEdTLbYsUQrxY1uFnhn6FPg+ssaczv6dMhxdjcQ
4xS+vRm1wgh9vvE5uzmBUXjw+mCwMTb/K5ZTxJITHBk1KCIEIyxN/kp5TQ4n
VDCZOQlzkLDhWzVDfQJ7YeB+RfOTcn3MOuQzz4Y0F9S9/OZ7xFEX8zgQWO9o
sA+MdZ47qOWIYmnRIW8l4/lhv+21lhP0BgguX9U52skPkW49lwPSDdHvmxU3
1f/wA0nqvZ8gnxEK7HhjYxojAGlZQ85p2qbo5LbJYFCEIFy9nc4u6GCFpFLE
mx4ECMNH67TxZiM7NJuru6evVhi8BPvM/JTsUQHF3m9sWRiKvn5tshU9hdgG
MqTe+eyHh0QDwuZOR7TG8ufmTs8DoNeFyoi/XNDcgA9BRl4UDHWc7nztPIOQ
1cbX2mOiUHt6xOCWmQe6PZ1SrBgoCrNE7o7y1x7o5NKdP1p1okCSafnS++8s
GmadarWQFQN5V+c2T3tvJH39jMdTUzGQlOHulfnhjVKEvnPZ+YpBz6P/5GOv
+SA9ObZgtyoxsAv+KSA95IvuWhAPh0mLwzLZNfC7XQDimHoyvUESh28uYV72
9IHI38X5YpynOIzU+G7a1wWig0HR86kUcbjpYRT5aVcwupVVX1wgIQEf8xZ2
d8eGoKRngtxdIpKwYhEf0ksLR8GbtkwfCZJANysRpKobgVz2Z/7h8JCEG1ok
kk9nBNLyYph3r5QEWafYctXeSLT6e7llp6IUDDi/NWZfjUZzIgerjtpIAemm
7mujtBg0buBWZBchBQTNhuZo4VhUm/E8tapdCm6HJi18OH4OeYg/PGlBPAhB
iyKrZ+bikbXRhmmkx0HwuR0PwxnnEfgrojtpByEpa4dao94FJHyPIv19+CAU
/17suW+bgJ6bZGzm2kiD8/7gz0YvElFP4ODnhxHSMDhnwmGtm4Qar+94v5gv
DZPyCjwNlCR09U3kkMaMNOiwJQk8iE9GhiGut2Y8ZKBHOtP7qkUqUsm7mbHz
ogxw5q9qlA2mIvGOZ0lHq/B1z5uRGCkNbTMa+yWsyMDFvpADvuYX0b0CBR3J
yEPgzqKV/uPCZUR+6KtgUXAIYoTU7rbxpKOcObJk5IND8OtO9CWNhnQUKCfA
Prh9CJgX9I+PrFxBB2n0s34XDwP/ne6a+cIMtG9B+2lu1WG4n6S+pmydiXaw
RvY/HDkM4aqrwym7stCszad6Dk5Z2OgNUXIazEL5H59eaC6QhUC5ImuqTw5K
Y2MPn3kgC27Xfy1GT+egcEUj751vZGF/Au93etPryOpch5WdmByEek2tBKrm
ImYOstifKjko/DE+ISSfh442BQenjMjBx7nEruy7eeiEjS7GviIHYkauGf80
8lFZ/pSTqMIReEuQypw9VoC0RVkKDO8dgd3Snb5Sd26hQMXAPVk9R8H28vkn
reN3UO4zLWeB+aMgepnMuUooQR0RTLVlO+WhQ6147cPtEsT8oMSk1VgetuSZ
rpNPlqJS4rOUV4/lQTp0h4/sdBn6dOh2fE6AAuSLPUuQZqCiv7E7pOzOK0CB
rY9YuC8VcY56jwplKsD4o1vDYxNUpB6oKkRpVIAmom6KREkFSrn7+H7bqgJU
OE9+DFGvQvkMqm5xjIog77B9zrSwClXbFjIReBTBMfUKxrxdhSbWvU4OqylC
y/mzedlYNTqgTb82E6MIwdy6YTpHa5HiVa/C0nRFmJngJzWm1CKDN2NEz0JF
EJXX/d0+XYv8LtzK/tqpCCwHubg/Rdeh8+N0mi1jiqDJ9IqG9dWhHDGvd9Gz
ilBun6uUzl6P7vcqy++gU4IYzXYerxv1aGTfral+TiW4ZNvVpPi8Hs2epTt/
RUwJjKYHmt05GtD3e55SVkpKsKFmeeQFqQExMo+N7tNXgr+k7yzhsQ2I75Ry
+EsbJciWD1USrm5Ah6tvChV7KMFQbHx962QD0vvzr+d0hBKsoh2PZP42oOPm
nr7SaUrQdzqVXYGzER22tTQYuaEEqc3uzTUHGhGjk8aBIIoS/OZT2UuQbURv
zohtcrUqgXbTduon1UZ0z4/16b0+JWD9/TmuXK8RZYat1jg8VwKd4u/h3oaN
yPvcTOr2B/w+7cVM6qaNiJD8yLVsVQnEiHJf2S0akeCVek0SgzK0OpTsXsF5
NSef+xOXMngEsXtNmjei0VsJK9fElYHd9pXGkEkjopb5DCgqKcPdgyz/jRg0
ogvV1qWTBGWwjA9lm9NtRPZ3tc/FHFcGgudy4F5cP6UHkif2uysD/V8LZvfD
jWh3D7t8d7AyqA06/5ve34jmh9aZzyYoAystiZLE0YgeTrydY85Shkyvhvnx
7QaU93Kws/aOMpjm8GzJvm5AQe+b8qwalMF9XuynfEsDMl66FbzWpQy1Cy52
m5cbkNj3ZNOCx8rgWN/dUebUgH5v+kvqzCoDeY/W/WNyDaiOGU0n/1WGq+EJ
Gsq99SiNU+auNLsKeEZVMrSk1yM3/r1XR4RV4DNdSVe/ZT3ikvmAuHVUYKVc
IEv/WR2KNLpYURarAhNvjxSb9NUiS8vgRFK6CkwuVFz+G1eLZOxOOX66qQIm
w6GsZSq16JWnLIdSuwoI7l3gjSmtQSjtSWT3hgpIVT6fvxxZjfgz7ludZVKF
y2wzPkuy1ejHjdLDLHyq8N7h3EzD+ypEpoTNWqmpgt2VC28kLKsQ8yM+0rtw
VbD/1HfDUq0SvR+lE01JUYXiwtmgnNUK9OD50i/pXFUg711eTLpbgQLmO+qC
mlXhSsdE0ppqBSJ9Jl/k7lUF0bxJvtbfVCS6ds297akqPHvvS1/WTUVPGdx4
/n1Xhcbekyd8T1JRzW6Tr2X0aiDpOnI8QpKKUriVhkh71aBogrl2908KchYS
Kv8kqga+DQJ9aJCC1CQY4zMU1IDFT7xLrJiCOGRXTiqBGpQdPn0Oi6Sg/5Sm
FKYs1cDipcQNSWsK6tHCWGNd1aDUmnrKQYGCComV8/uD1OC7OP2I114K6izw
es+doAavbUWZ9q2S0eyXg7Ms2WpAP7o/VXSajOgMF1/9K1WDnou7RK7RyEi8
kPLi5101IF3befNkLRkZfPd4vtyrBmNtJxsiC8norJHkxPvnanDS1VV6/hoZ
pRV9GHuxoAY337/4kJNMRpWrZcNj62rQYbf8JyyOjIZNTg/0MqkDkeHIZEQ0
GX2+I9bXzq8Orx11ISWKjPasv6M1HFKHQ5ar+ZdiyEjevOQhRUsd0sxfzvmc
JyOrMtcHhWbqkGU0tM6WRkahmwfasp3UIYw1qNg2i4xyj802XwxQB3feCJpY
ERndIxc1xp9Xh+Dt/ZdscP2nfzvVhWWqQ3wNa+bAQzL6bSVc7VOiDrzWK0wO
E2QkXPGa6tqkDiC4tLSwSEa6f2+Vn+hRB/M4V2HDbTJysXEoMXumDm4SX8qs
+CgooUqgiDCvDgUlp4feKVJQ34mCvCO7NEA6Zvr6ii8FLdbYXZfg04CXp2Uw
/ssUxLyDL0tARgPMZ06sSFVSkFn9jcs7TTXAEFOM0v+Pgp7uuh735poGqF48
c+aoPxWtOVnHPCvWgICNm2/ZrlERb/PeyKEGDRjVYczLq6OiU65ZQa0TGnB/
cuiL2AoVxbZa+tfMacDDYFW2ud0V6PZuDp/SVQ14LD5wZfhQBXrXdu30NR5N
2Fp4HFl2ugLt2GPhmnxQE2paa+mc4yuQpAebU4y6JiguHzefysPj+8GIfZCx
JtBK0oI26yuQF+eVE2dPacK+qA9eDY8q0CVPU2tHX03YFSUvtfSqAlV3slge
P6cJS3up2Te+VKBRriEzo6ua8Ory/gIqXSX64n3JWLdIExi8mWQ491YiTszI
ULleEwJDSeqDIpVIiYeJeAjThNQnL7r75SqRrV+/nsi4JnQ1WQ7s1KhEEd2p
2jzvNeHlqhwpkVCJ8vgMNXb/0ISRaFZVdZNKdD+AUZWeQQuEntyPkbasRK96
exU3uLWgOurYrI1NJdoSSD66IqkF9w8RGGknKtGBYKLsB1UtUPcoPhFyshKh
fnqZlyQteBQXvxaIr7sJd0s+sdOCie3Bym7rSpQUmiD2yFsLCi4njIYdq0Tk
QXSgI0YL+o3y1bKNK1H/gX+CTelaEJl9Q1Ia1++/8C6+ikItuKp0UMIA159l
JH5fUa0WdAq3/9w4Uom+vcD0Qzu1gF4ueq+kRCWanqcPMxrVAtPGz/VKfJWI
9l2/THhGC1wGGFmUWStR5XbqxPdlLZDkmfutslWBsnYP0g380QK5Ku4V45UK
FMXPqnB7tzawyE30XHiD+08pI4Mkqw3WMQqFhR0V6CgafyikrQ1iZSfFyVUV
iNeca+WbqTZU/JkI4c2vQAtn88wKfbWhnfm9aWIw/t64Wcz8rUobyAzOeQEi
Fcif+k79Ubs2MA3NPqGxViCbZnGvW0PawBm7ncS+TkXiY9RHBkvaUIt4aqZG
qaibriHppowOdB1ZG1yIo6JK9u9NgRo6cLmicbrPh4qyBJXf6xvrgImTyByv
HRW5qbShL146kODxedNAmYqMCb8Ce6N0wFOopUNdnIrkj2kXF1zUgd7uocnh
vVS07YVtESt04N2E77v1H3i+hdPL8bfpgIbSomzJPAU9TtR3XOnXgcDE0njW
FxR0LyM1vWdKByjZRR+1hymoqHCgPX9RB8JpAyWaXRSUUsmy5L+uA2WTcYzM
zRTk32rGT9ylC8Uxn3Kq8Xy17blmxMerC3tZLH9I3KEgnSdPIj9L6YIbHe/3
iDwKkpzZS+1W1QXpW2OXSjMoaPeSzWSeoS7Yp357T71IQT9+3mD0P6ELD97E
2acmUtCrHdPKhLO6oD1rmagdh9dvDsEzvBG6kCmoozAQRUHVwk45yym6cP3S
4/NS4RSUc6i4m5arC7c0Wp9Zh1BQjNq7bzfIuvDWs/2TaRAFuemLi/q16EJ2
lu4b5kAKMrbysIQ+XWAIlZe9GEBBCs7U8zzPdWHT2rkPw5nf97+6Tx904dTA
fq5afD9d1OE32Kou3OXQpDcMpqCPyf5sNxj0QC6bgS05FLdnVr22L7cenDhz
08AlArdn0TdfJKEHlW2yro+jKai4WunWPmU9YJo83jmM3yetLXxoiagHy6lW
Yab4fQP77m12WetBgKC5k0EaBZ2Y2JTOPa0HdecdBBuu4Pac1bLzCdWDFjN/
qcRs3J7LcWl6SXrgLbPzeWM+Ba0x0i/8V6oHl+zTmHZQKCja6iohsEkPtkMD
B5ZrKGirkK94laYHyuJn6Flx/zEqH7XbfqsHQr3vhLBuCuJ2dxziPoBAaXL4
J8c7CsqrXZS6eQTBt/nU4NKPFCS4GZJ0QBeB1Cexo2JfKUg885L2IScED9op
HKN/KUjpYWud3i0E9pwaHxkEqOgeM4G1rwrBgQ0VGy0RKtKyHfU0aUfwmiBs
JiNFRV137HofD+Jj/znDa4OHqYiwPCdiO42g9seqLq8CFfWpBca9/IjgBc+H
JTZVPN6Tfk27bCDYbe5zqVKTihY9ewRDGQDmRY/EL+ji+cPGPKSyG4D/kM9N
GoGKfO9aRG1wAci3dgirG1KRnP11qQeCALnaCa0kYyr68nf6WZw4ANPJpoQV
UypqLD+QhA4DGGrZsBy2oKJQEw+FHUoAkY1eRn+OUZHK16rZPk2AzeaAYjcr
KlrP/Xr1IgHAmiv49anjVHRfS1Xb1ATAL7lC6SPOse9il9iOA8yOtuqwWFOR
Thot/4k9QGdqwioNX9+W3UXKcQP4vHG3ngNn2oTZmq03gIHHV5ENSypKisou
4wsGELp6/1gMLt9g/wurV1EALi+FcwvMqWhXr/C/2xcAOvrl8uxw/Qe8T9e5
XgRQApJ+uxEVXdpT6SieCVBcqjdGM6Ai05YVloU8gE/N4eQQ3D5sDsr3K4oB
Vm8/C32C2+/xv2hPXyrAsMQT3lncvlmUrn1H6gF+rboVl+L2tzZj7P3aCvCh
k514QJGKpvIyRSIeAYxl74qylaaiAp3JMfUxgK4PIuJ8eD1ymBOM+/0ct8/B
JG6KMBXNHqFOX5jH/ZF/e1kVr0+LfZ3Z6QwEyC3qy2/epKCfP5YYSggEaK02
/3PyEQXNYLd6d5sSYM9Lvk8peP3puWqWHGVNgDtpCvdH2ygo42DdDsszBPDb
aev5sJqCwledex74EaAvh+IVRKYgB9qepIPhBKiiHEm2wN+HBx2C6bdTCJDR
8sexKIeC2KTFun2uESDMbYuJ9xpef1YnEiZv4PK38qmDeD3CrinT1VEJsI/w
VmExnoKoDvMYfwMB5v48uXQihoKuSt+4kNJGgMQIs2omPN/tu9e3HQcJYBV5
Ll0Trx96GRVdA+MEcD80JNDhg+ero/155ZcEsH/DyJvsSUGsMix6d94T4IzW
haLsMxT0fa39L+snAjQcRYmLbhQ03e37MPIHAS5PZBslulBQV4ZQ/NxvAuiZ
/jjq7kRBZMdRnWMMRKijQ4qpDhSULhO/1b6bCC8KFJg+21NQ8M8jnVL7iNCA
7ZLLtaOgkz2z57KFiVBY6fL+3Em8nmRmav+VJIKfsbRy6QkKknCCP95HiBA2
UfGHHmfWQ98fPFclgmnntY+FthT07WdpLOjh+6s2Y/xxnuqx1qolEaGUco4z
BOfOTIbffJZEMOti+0jFucyppT3ZjgiC1m+EduPnXTp0NuarKxHOC/A138I5
cJ1H09GbCN99zt2yxvU50du/2R9MhOCWD7XyuL46WVH3lWKIoJpX3noUv4+4
s0x0cSIRsnY9DjM/hb8XD79UZ00ngr6EW9H/7v9l/fJGRA4Rtl/Zzk05UtDz
Xq2297eIcPYw5auOMwU9yFqOtCgngtVzjdAW3J5phy3WJVuIwLw5WDjsTkEi
Lpw/n00SIXnKtEvDm4J2yXa3oFkiGC/xNT/B/fd5IyS8ZpEInFHkaRc/Crqf
/Ww1aYMIGuUBSQ54fyh2SWn+8o8I4uK+rd14v0mRVQ1zYNYHt/mH53jxfmT1
KO+HooA+BPZV5l4Iw+eXHKO7RWL6cHAqrDET71/CrpshLIf14X34yM8UPJ52
yFUpRijpA8tWcpMzPs8sbZ76/k5LHxRe3HXix/vf+CPWJnN9fWDzrSlqxvle
TkfwfTN9uM9Xb3wU7ze3Xf0VJG31YWaG5HYR5yS5/d8ynfSh29eBpwvnEVsO
Ez8Pffi0PJ05gfO+ePoykr8+NPJ/l+/H2YWy+lssXB+IkrH3C3GuGFuw+XtO
H/SvnWa3jv5fPLyonU7WhzeJD5SWcPlaB4Z3tlzRh5qr+WbuOCeTOl0yr+vD
VOhUwQNc/9HA+jbfQn3Ym0WL+onfjye/hJNUrg9UrVtuXDi7YDk+YjW4/s9F
Fvbi9qj4mNKzdVcfhsQ26tfw/vqNI0po+oE+aBoKnu/A7amp4RPe3KMP5lEE
aS+8Hye5OY5lDOPyWaxyNnF/8DShC4av9IHxrTl5HPeXy0vFadE5fRC9JBMg
gM8flfSSiltL+lBo/0XDHPe3ljXzh7u/9OGSzZ+qcA98/+o4SVTAACY9BTrX
8HiqEOq980fUAC7fVWZrwuPvm37r5pSMAbxYYXnhjsdrcu7N6msaBtDE9uQC
FZ83K1VP7/ljZwBLFi9efjDG89vZ1mvK1QCGVahFfiRcXhqJ1uRlAP41WZKr
+hQ0NnU41DvKAMRHtJd3IbweRa1OTuYZwDmbY7SzqhSkXbJwtKnYADS1qoU5
lfH4Gnxx8SrVAEIVsxX78HmWV6BTU/+eARTNMRZYyOH7H6QUNU4awCvJ/Vrb
Evj+ucj1K28M4Kzm7VIOcfy9wupj6bVgAJ/kxcQVRfH3kaMF/YGfBvC6N1id
KkxBVcnI4deWAfwZrLzwWxDXp0ax+TmjISQbyxq7CeDnbfGcvbLPEAJjk7+4
8eL6SzJ3eQobwtNGo6U/+3B9LH7zEiUN4WJD9p1Kbvz8iM9B++UMgfl7/09P
Lvz8otnBTWVDkDTYpKnh8/ePR+Niz7UN4RhpeICPE8//Lz2xDfqGoPDvTC8L
B66vXoWcp40h3Gm7h0TY8fUMxvxPjoZgQtHjVmDDz3vjTh/kYQjNm5I/rHfj
8o9gfqv+hhCFrHUusuL6xglPRUUYgg1dJGmUBZc3EgNb8YbweobLUQxnV6EX
1QlphnDzREhHKjMer74qPDszDUGnLaZkkwn314PsC5fzDcH4a6R2DM6VLF+X
2EsMwU3s0b1dOPOcMrfNqcTl9weplezC47Gyqou3yRBEXvVOG+D8bWPXocJ2
Q0jkf31vdSceX0Ye10V6DOHFTamFGpxH8rr/lg8bQhXrRpg/zhqLB7xlnhnC
dLpwsArOVNW4p7Wvcfu2X/iwA+d9qS91FOcNYQZ7NTnFSEGJz9UqWj/j9kAJ
Fg04f5HI3av10xA0WTWtruDsFPb9XNdfQ6DYaMz74Dzcc2yRuIsEu15J7TXF
WZ2r1mpgDwm8bXTeH8aZq8lTalyEBBqzLys+MeDzPF1fpq0MCaJVSocHcF6x
FPs9rUCCsywly6U4O9w57+GsSQIP+liVaJwHv7x+/J5AgoiAd9MmOKvqaWp6
mpJgLrCTjxfnsmt55Z+sSYD3PJ2ZHRTE+WaVPciRBNc0F4oLcY6XOx69eoYE
DepHqTY4fzpXPxflTwIWbo8BBpztR3ZbbIWTQNZnz8Uaegp6JOjTlhBPAoVj
JjGmOCv59ovtTCPBTrllwjs6Cippl7h6OYMEKQ1xuf44s7MkrrPnk2DQiFHl
6z8y+q9Ce4S3kgRmLoeaprbJ6ORGgWphIwlgGly0ce4lrd8RaSdBid+bnzf+
klHxQmO4zDAJnBm99h7ZIiM21T1va5+S4Mqr1AGfP2QUk+JnoviaBG/Z24Zv
/yYjW4mDB7Q+k+BUs0/y4iYZ9YQmX+paI0FuWEDT3w0yku9594P4lwSvx3cK
s+HM6l44YLbHCFrp2Wc4fpIRrZgzxFnBCPjDgtM7v5GRnOCf3oRwIzB2OKPM
+JGMtvpuDoTHGYHK910Hny6Q0ViQxoh3ihEM0V0xKJ4no8BHEU+tco1gxmlf
l9IcGTUGf3sn2mIE4v7kZ/ZvyChBKHN+X6cR5MzRDCVnyOh4/5H/mPuMwLVR
2fb7KzL6IeT39dszI8jXHn6TPU1GygMLf2mrRqDOlvp0/RkZMYam0Lf+MYIq
cS6fl0/J6LmwxM4qBmNoUjljTJsgo/BQN7ZsbmPgubpNK3xCRvf2vxZ0VzYG
euZ16YwRMkobjDlwQtsYNudS+vOHycgujF/cRN8YHk4Ht1GHyGhz8MQhRRt8
/7Lq7ecDZKQVPq5OH2YM1W5BD4L6cHuJBGn/jDWGRlkut/JeMno9xI6WkvDf
37TZMdNDRnEiZqSJHGMYP79r2rGbjLqGH9mW3jUGjjGtipwuMsqI8LC/8cAY
zCfOiyw/JCNXUQanyz3GcJxwqtQIZ7pIOBPy1BiE87Rk2TrJiCDWEUL4YQzG
BqbjXe1kxDV6KkL1tzFo3FfgV8Z5LnIz+tAOExiOfMZUfZ+MkkZVE/ZymQD/
S+cdd9rIqC+qMeO9ogl0Ne/5VNxKRsaPKTWJISYgb8c839VERp78S48sYkzg
VrzvLX2cU0/LvRNINIF6OW7dgUY8ftbv7rubZQLCO3YWDDeQkY4ILX6uwQTc
7aD9YR0ZKQS/stT/YgJR3BaN+lVkdOzBfl+OdRMQMgt4W11JRgGM7imv/5pA
nyPPBgfO1QUf74exm4L/wr7tZ1QykuxeEyPLmYLJVx5PAzIZ8XNxrDH6mYI6
o0D2k2IyUnOy3jMRagp1r9efCuB8gnpDpijWFDiD2RtOF5FRjpaws2q6KXiZ
dCZ8K8Tz48yh/rNVpjBUHkH3rwC3Z4t+Qf9HU3h1yc6M/joZLZ2I1rnkYQae
HHcFEi/i8T1w0PuvvxmEtdDb9Kfh8asxeT00wgzyw8pc2HFeE1Radkozgx8B
cm9KUvDz3i3fVKw0g//qLr2YSSQjXl/XjVfLZiAhIShNjiMj4nnS3SNh5jD7
uGDMOIyMblP3yTxLtIAQS+t6Hncy2jPO5MF4zhJKempdzunh/nA//VfniRUw
6q3vqttPRuZ9tkW/Xx+HG9YZUkJ0ZNRwPfRszZQ1zC6NtyUvlqNCo58O5xdt
wDQ1PnBptBwtepVHG8zbQlemOcvte+VoLWTBl/3NCaitT1UXLitHV9yupm9+
OgnT12FJ9Vo5SuxweTq1aAf683LyL2LLEX//eKT2sh0c8Mp9nIZz4zhRqOSr
HfwoUE5Qw3l24aCHz6YdzEgNquTFlCMdzq8//7DYQ17qvUS76HK06XFBQOyI
PdwRPcj1IaIcBe4pcfMLsweR09k7GELK0S4Brp3jUfj+0Jv0rcHlqEgipUol
Dl+v9xfywnlUw/vH3xR7MK870TYSVI4On1FIycqzh8PF8sz5geVooY1W0dpu
D0wiU3Oq/uUorkfJXLDLHvZJdip88itH+8bI38732EPUeFJyMc7EuUuaxiP2
EDr4QowJ5xK24yOvZuwh6YX92xc+5UiDrzcIvbcHNurqyhWcn4ip7iMv4Pzr
wg+E87aagHPAF3vYMcyzUuFdjvIIV+if/sD1lyCtOOJ8xPwvRW3DHjaaSBsc
OPedDDIt/GMPLfRRe/u8ytH//18MEkqIxGic/w+JV6vd
          "]]}, Annotation[#, "Charting`Private`Tag$1089#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
+vY=
          "]]}, Annotation[#, "Charting`Private`Tag$1089#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\[Chi](\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\
\\))\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8225354039924374`*^9, 3.822535806527096*^9, 
  3.8225557812082157`*^9, 3.8225561557015877`*^9, 3.8225601460315104`*^9, 
  3.8225623809060736`*^9, 3.822610358607875*^9, 3.8226148901225634`*^9, 
  3.822618398507717*^9, 3.8226232455563955`*^9, 3.8226261115227013`*^9, 
  3.8226290167037134`*^9, 3.82279703722155*^9, 3.822797327498044*^9, 
  3.823060636373288*^9, 3.823079319661585*^9, 3.823084648226708*^9, 
  3.82308521434961*^9, 3.8230972750842323`*^9, 3.823098647238101*^9, 
  3.823098921999178*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3314#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3314#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1:eJwt2nk0lV8XB3BE97muKZmTuTJV5pn7dV1zUqJu0SwkY4MhqURzmYlEUqGB
pBCRG1IyRCLNiEqjRCT0nt9a7z+sz/IM5+yz9z7nWYvylmC3bXw8PDyzyY//
fntt7vv+7x+Hq97tcVsyURTv5LxGxKc43P3eYwLvEkSx5Vn32IIJDvfXl66V
hcR+9i1TzsMcrtySbT1mxLsWVwhm9HK407LnLmyMF8WJP6cW6tzncAfWP1xa
eEoUlUkmGzYd4nA7h5vXGB4XhVRdQiuXn8OFdGy11SFR2Fu92L9xdDXXt81n
TvdOUcguH6cxfntwFz6RmMvwFoX67pjqW1PuXLOluvEqHqIoLsu3Mfu+ivtE
K0V1L1sUXSdy81p/unErdStLQwzIeKIMn1n1ruSa/7RNilIRxfJDRrpFnSu4
ZbJ3y43FRJFqKtOyotSVa2VypydhRgSRl/+85Etx4RpL+cQXfRZBrklcZtsZ
Z+41Kw/1dc9FwJr4UJya78h9XpN+OLteBE+/H9guddKeu8y997hRkQguCdV1
3kyx5WZLTwnbnhHB1s1m76mdNtw89/fJuvtFkN1/wnHdOmvulaY41lxvEehL
0WtPtFpxK7uEvNSdREB1+Rn2JJlxv9yp3E3XFsGmfjnG2hwjLs1PzuqKsAhS
15tqrVytx+VjrnIuGxLGvq1iI1FsbW6E+9otsXXC6C50W1YdoMZ1Ky3w35Ip
jHWSolSlkxrXr8TK7lKGMN7GNNeXqatxK1ptSwbPCOPjOrb5jQFVrkiXvrZv
ujAmhIw087xUuQI1kze8U4QhFypLHVumwk2xlTzheFoYG0x761dpK3HXTs86
X3FQGG0pr8K6n0tzC7VTl45uE0ZtkqPaqgxpLqcqTEGVuCShouMJR5orzlMZ
tdJbGEknU7SbXkhxvSz4o69vEYZ7rHP/3VeS3AGB3IOeG4Xxcuddlwvv5nJz
nHRGz3GE0XzRyLGnTZQrMJ0VW+gkjF/MAEfa63+1kVXuWZnawhh1SdQc75+p
XX7933CuFrHnbcbHoenamMbdQQWaxOFTrY3jf2vf5c/uuakujN83TrkdmTtR
+ycrS6taTRiTikWeAs7DtSKSH20vywtDh4dbE4iCWrfHKfX3GMLg/zcRxjmS
wLy+f35BgaAwXjBzplpibjGbnSN3J9CFMcgUCfi0solZMSnH9aQJ4wuzUfW3
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
0K+VhUXvhJX/kv6muEFsrLOLhdMVBns+E8/Wun+b+ZaF5esidfqIv46H7r72
gYVyGUvVd8RPG1QMpH+wULlQVm6A+E5S569D4yxIXJr79gdxzoa4W9//sUgf
7zLgI++L0zLctY6yQdCW971yxP4Tg3qNYjZIeff0ginxigfpI7qyNjg8c8Rg
A7FRsn1ptrIN3r/1W3WMWH7jRChd0wbV9IvlFcR82ld09+jZIEZyvcRX4qGJ
tT97zWyg92BcaQGJV/sDwZvLbGzwMtwxYQtxefLdkDvONvCqeCl2ifiQ9vzh
BC8baG2rF9Ej69PsLuq4w9sGzhmJNRHEEtG8eXYBNihe0jJwn7igdXDVdJQN
hKd7U9aR9W4JKq7wz7KBbKk1K4fkh+SZXDG7izZ4ECAQ95N4Q23yduVrNqgt
EzOyJfk1LBo+r6fKBjsH80e/EkveZB6wfWmDkBFlb2OSnxte6PYo9dtA2uDX
laPEhbxqulNDNti7Vyu9m9jMjXpf+scGRoZdZ4NJfsfunTSP52VD3mmreyVx
S97X1O10Nu7r3/jNQ+phw692OyVZNjqVtF2OExfMqz//V4mNxbtcS5uIh23K
JrrV2WgbU99CI/VkFlCwslSHDZn2CDMWcWxq5tXTJmwcOq4xby9xS/XJWdvB
hpLO6g/FxFKD0V5sBzauRroe7CUuNNwi8ncNm8xbpMaU1OvP9e6+3RvZ2LM6
T38zsdkRO+5NXza8O3KVDhPHFZvIng5mg62ZuOsycWu35k6/cDZO/jRQqCOW
+iffbHOAjdXfEyReEW9aJKqmeJSNM/Evlw0TX3HljZ6MZ+OJ4qFaXtIvRsJ/
dXWls9HepOwrSmyeO7jkZg4b5+2jIEsc9+j50VP5bKR7BjkpErcON/X6FrPh
/+/7YWViKdlqU5tyNvatmhz77+8brYuTFe6xYeh+4rwcceH23C9/HrBJXh87
Pue/9yUls7ta2chKvlfN/9/7quKyS7rYmFZ+ZDP63/z6w36ffMOG3QUerV7i
NsHtrr6DZDzBOw8+IpbW9yxkfWNDw7VhVdF/8/N04VUYI+vlsLA8/r/5xTLX
/ZliQ3jcsiqAeOSa7q1n/LaI9RDfbf/f86ckt52UsEXbloiNv0j8W9Woez7y
trj8iF3b8N/6uExKsdRs8cFLVjeF+Er220cT+rZY+fNM6SLikQftys/MyfMe
2k18I/lg8b1u7w0bW1hdfXv3JnGbVYG2zypbpPKn6uj99/d4/jOfPW2xYq/9
5iGSb1febOYN9rZFe1b84hziuH3y3eF7yPP5uIa8/52HqpIOHD9jC5fAqQ03
Sb/NN9z39PorW3Rr3Ox6TepH4vALC90BW0T3ljIPEsc8Myoo+2qLNMvYElVi
r10/o+5N20Jg1uYlO0j9id/0WdCuaAepBdKSPKR+o7VXRvzaaoeR3Ev6a+so
fI4q7g8PsMOns7zBgsScZobL1G47xBlNmtfcJ+c3/0ZlgSN2eLTrdNUi4k8F
5s1SheR6h0TbOVyyf4xnGGaV2MFyKa9EOzn/1dv9Pq9YaYeShhtFicQ5gyW7
1R/bQXCOia00sbvqQgWzr3Yw53x5YnqP7K87Y4/dG7XD68zGltnES+t6R1jT
dvjYare3i5wvBTdnPXQWsUdfS2NDOHFEyYRuu5Q9yofklzsTD/7zOOeuaI+O
yZ5NSsTcHLHQ9Tr20I9b9rOtmnyvfQ981Wdij3+cze6FxFmWzbY+1vZQX1vM
iCUOe31YLtjNHl5X75taEGvL/a0/uNseAqNPG++S8+5UQ+bD3fuI3WbGzhO3
Bps0+8XZw/9VcE8ccdCDPU9XpNpj4U/3vSuIS0KGe5Vu2+NG9obYb1UU9B8O
TnN/2eMZ23iNLjH/zjjesr/2SN6SlyNL/ExeVeDKLAc43Z++zku8e+cmoaS5
DqhWqv7SXkn67/xXcpv1HcD+8O2iP/GRR5EKHuYOKDUYfupKvGaXjIqjjQNo
vl8CDYgnHnlo6K5ywNaetLq/d0g+7W435t3lgB+VUVMxxIKKweZjex0wYdOf
vZn4VZMwc+iQAyJ2GAeCeJ+is11HsgO82wUP/q0g54nHD9wvlDpgf8zHvz7E
8Xu8OWlVDqiLbYpnEm9UmuV1vM4Bz0KHdKWJecKwNfSpA8wXi1+qLyfneeW7
odYjDgg+4qs/h1i8Ze0ew0kH+Cs+ZvaXUegPm4jQ4HOEQh3/plLiQy2GB+eI
O+K5cf8HV+KG8JL4Pl1HHI03Cz14m5z/2y5fiwl1xAe78Gt3Syn4yAw9cIl0
xM8ge7UY4sNbtHtlYxzxsq2WZkdc97tUojTREYkr4tTbyPe3hSI3uv+GI3pE
sk70lFDQCXnpavPdEc86Kqpfke9xGXHRUf4dTtg90t3VdJXsjx4RFse8nVHz
Q+2HzkUK5/Il1DtjXHBq6YP6Y+R7T6Sd5s0f5Yq7Cbrf0g6R8W3eMm3xZAW4
nq3Fb4IpLGtwz558tRKFEVs/bPaicCNl57Zr3W5QpgyYdx1JPtqPrdv/YRXG
hr7v7jcg513fixHsAXf8fptkzKdMvt9CB/2F33ig2OhkyCJhCic3nTox8Xk1
LsTcvGw3TkPM3Q1Puz+swfhn0FP7aZBpbA8z/7IGaz4WixkTl7Sz5uX+WIO5
r/jmvuyj4e3gQu/tE2sQTo5SSsQWYj/G/tI5mAw8VXbtHQ0T3gdklRdzYFbt
sKTuNQ1BIrmbduzi4LzCX4Gv3TTMlhUXaA/ngCWWEh1PnK0ad8VgHwfKGc7D
OsQtJn4j03EcBBYpPdzTRYPmVp24xHQONllfMv/XScNgBbegrJKD5QcueMzp
oGFfnd4yuXsciD3xPXqrnQaJ1kvD++s4uPtjX5kHMav/mKlDMwfBugmzzz6h
IVdoZfPL1xxk+IlEqbTRYCJdH8zs42ARZRLf0ErDE2VDiUuDHIjONcj2IZ4x
kl0f+J2D4UNWxVdbaEi3Psn7dIQDdxHFkmXEi5dNXzYa56ArMKLoezMNDauD
nbL+cnCm0yI/kfj//0+AhoitZ/WI/wdqrfqR
          "]]}, Annotation[#, "Charting`Private`Tag$3314#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*OverscriptBox[\\n \
StyleBox[\\\"K\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"^\\\"]\\)(\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\))\
\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8225354039924374`*^9, 3.822535806527096*^9, 
  3.8225557812082157`*^9, 3.8225561557015877`*^9, 3.8225601460315104`*^9, 
  3.8225623809060736`*^9, 3.822610358607875*^9, 3.8226148901225634`*^9, 
  3.822618398507717*^9, 3.8226232455563955`*^9, 3.8226261115227013`*^9, 
  3.8226290167037134`*^9, 3.82279703722155*^9, 3.822797327498044*^9, 
  3.823060636373288*^9, 3.823079319661585*^9, 3.823084648226708*^9, 
  3.82308521434961*^9, 3.8230972750842323`*^9, 3.823098647238101*^9, 
  3.8230989351311884`*^9}]
}, Open  ]],

Cell[TextData[{
 "We can see from this that the waveforms themselves will not be easy to \
compare because of the differences in overall orientation. We resolve this \
below by making the orientations at the early ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " similar..."
}], "Text",
 CellChangeTimes->{{3.8227979850128293`*^9, 3.8227980065437984`*^9}, {
  3.822798063208875*^9, 3.8227981350279665`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"scalar", " ", "waveforms"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"100", 
        RowBox[{"Re", "[", 
         RowBox[{"\[Psi]tdl2q0", "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"Re", "[", 
         RowBox[{"\[Psi]tdl2q1pls", "[", "t", "]"}], "]"}]}], ",", 
       RowBox[{"Re", "[", 
        RowBox[{"\[Psi]tdl2q1neg", "[", "t", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\[Chi](t)\>\""}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Large", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Small", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"metric", " ", "waveforms"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Re", "[", 
        RowBox[{"htdl2q0", "[", "t", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"htdl2q1pls", "[", "t", "]"}], "]"}], "+", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"htdl2q0", "[", 
            RowBox[{"-", "100"}], "]"}], "]"}], "-", 
          RowBox[{"Re", "[", 
           RowBox[{"htdl2q1pls", "[", 
            RowBox[{"-", "100"}], "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"Re", "[", 
         RowBox[{"htdl2q1neg", "[", "t", "]"}], "]"}], "-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"htdl2q1neg", "[", 
            RowBox[{"-", "100"}], "]"}], "]"}], "-", 
          RowBox[{"Re", "[", 
           RowBox[{"htdl2q0", "[", 
            RowBox[{"-", "100"}], "]"}], "]"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "100"}], ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\)\>\"", ",", "\"\<\!\(\*OverscriptBox[
StyleBox[\"K\",
FontSlant->\"Italic\"], \"^\"]\)(\!\(\*
StyleBox[\"t\",
FontSlant->\"Italic\"]\))\>\""}], "}"}]}], ",", 
     RowBox[{"AxesStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "Red", "]"}]}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
     RowBox[{"TicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "15"}], "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 0\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = 1\>\"", ",", "\"\<\!\(\*
StyleBox[\"q\",
FontSlant->\"Italic\"]\) = -1\>\""}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.005", "]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Large", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Pink"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", "Small", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Orange"}], "}"}]}], 
       "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.822798308412919*^9, 3.8227983249982576`*^9}, {
  3.822798409018453*^9, 3.8227984156545734`*^9}, {3.8230611996490593`*^9, 
  3.8230612382072*^9}, {3.8230613149687214`*^9, 3.8230613151024227`*^9}, {
  3.8230613502483454`*^9, 3.823061350709449*^9}, {3.823061490655876*^9, 
  3.82306149642314*^9}, {3.8230615792266736`*^9, 3.8230616207602215`*^9}, {
  3.823062666303371*^9, 3.8230626750737057`*^9}, {3.823098601995392*^9, 
  3.8230986040574446`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
B3nnxJA=
          "]]}, Annotation[#, "Charting`Private`Tag$5138#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJwtmnk81N/3x4myRER2ZY+i7PvyPjMYe4Qiu5J934myVypbQoksM2PfQhK5
Y8muqEglldBH0kaopN/7+3j8/pl5PB/3zj3nvs6559z7eIzY6SDrszvo6Og8
8I//fTu5v//y7589jaRQ1Ld5MQV7K+j0g2vLnvbWzsRFFufTz6d+Sm3a0yK/
1FQ6p6Vg3kajW2bf7Gk/j3wU705JwcKOtLEWvLOnpaSYfU1KTMHSf109qNBt
T6u0WDFfi03B2rM1XNyS7GmHz7xlnQxIwXh7MsdojPY0ZhafDAmbFMxI7+V5
17WTNPu1uywWfCmYwLENpt3rJ2gjBh+VemaSMZnwxM7mLVva2K7prsaSZKy+
laqv9cWGJng0a4+hUzI2mV5SNvbdmqYy7Pp+r0AyFnZO9bneu+O0f9SSRYXR
JOxYkppi3TMrmtHbT6dU4pKwXE3+Uau7lrRvlVwskkeSsBjKr1c7rlvQ1keD
zr+fSMRKNFJuPs43o7X+LOD4EZmIETcX63OpJrQrLYvLlXyJ2NMvF3x4rxjR
guKFnzlVJmBktp5nTdcNaXyrx4MYNRKwM+5aH5hD9WmS3EnEbs8LWNFcuomD
A4H2zypjF9H4PKbMy4LSx/Rox5Nr4a9oPMY86a06na1F03r4Z9G74xzmNie4
+1SxGs2s0MelmhCL5Tpryh4/qUSbsjfy3eUXjc0XBM8mGCrR1mU3zxDPRGOq
zyuyG1WUaHWOifejHKOxKVPeTQ5uJVqekGTaqFk0JqCx2vf4iSItfc5aj1cu
GivmqnMxN1GkMZ8SK8GWo7CqAdEcIx0FmtW2lruvZxQWd4bzxzkDOdoaL4vD
uEkkluMfsyosJUc7sDVxU5YQiVVEzK093ClHkzYQ+ndeIxJ7erFl41+/LK31
rI8bm3QkJl1r/zfZRJaG5Fq27zPg42slzFePHaZdrz+6ebYjAjuUpihy216G
djQl3PzKwQhsqtLavNNfkhbTvDuhZSEMc+DhYG43laSlB/a0nXgVhs0mjvS2
ykjSAocmnVceh2EfHQy0G+YlaOncOsZbbWHYJpva4TInCRpHz38yCZfDMMEQ
AeZL5uK05v8sCu4fCsNcNN/12siJ0tIIv/zi3UOxOcrtC1asorS2Tqu+attQ
bEzybuStcRHa46ZXuSNGodjsVPnZa8YitLPNRN8PR0IxOu2L+mEaB2jHzYye
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
          "]]}, Annotation[#, "Charting`Private`Tag$5138#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
+vY=
          "]]}, Annotation[#, "Charting`Private`Tag$5138#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox["\"\[Chi](t)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.822798512936412*^9, 3.8230612679856296`*^9, 
  3.8230613816292796`*^9, 3.8230615196710606`*^9, 3.823061600402838*^9, 
  3.8230616378600335`*^9, 3.8230626925807867`*^9, 3.823079351227854*^9, 
  3.823085244087025*^9, 3.823097306082418*^9, 3.823098674997163*^9, 
  3.8230989510729513`*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[0.005]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$7068#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Large], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0.5]], 
         LineBox[CompressedData["
1:eJwt2nc41d8fAPBrFRq0hIprJEnZ2RyyskdGkiQkhMqI1k2UECohottEU0Ol
1PtcK3uT1XXvDRkN2RX6ne/z/P75fp/X8x6f8zk+94znSco7xNGXm0KhvCf/
+e//HvvZP/79c8P0hZsKBYIM6BP3GF8554YphocZssTebR1TG2dJPK86ii7A
AH/zujmrMTeMJQ7ZZvIz4NjW14KZLDeMxPOPX1zEgITfSXLKDDdMY7WsOsLN
gOLLWp5eMaSf+m4zpz8YREpT6jGvG2ZtHXA+NoLB3KDr9L5JF0wLF3QvrsYg
ZjuzeMm0M8bC1Nmwxxjkw86WvJjbhSnfo65Kp2F4UnR/h84PJ4yvxXvkncDA
nSN92WLECXvVq6g6ErvG5jJdBp0w5ZTf9vloDBSn9KhjTJKf2dzoROw0Fvf0
UYMTZs00BvJEYZhV8F0n+dQJo28zfIcjMBjTZSZ4Qp0w9cLtKr8jGNoT6Lfr
fzliSkmb3eRBDJlMv4MXvjtiekjKmvvE7qpbFY2GHTHtptxqN2JmV3HRS5Yj
RmFPcYkfhiH51qrsRhJvmeG56IthrpLv56HHjhg/TcvddgCDLE+g7qJDjphq
IqP7xBPDoIsKBfsQR8zv8CcueDBTHuVF8rFngjTxNsdY2++uxP227Rl7MWjd
ytnfZkbGl/86Lc4Dg7Vh04XbssTvw6VD3DEcO6HRZsBywLQNXTejXDAknym4
tLTXAXudfXNNn/jBuQ3m3Z8cMLr8qZaLmJXI9za80QFjga6FBGcMtjfabz76
4IBZLU7P6LswKLwPDxTPIf3E2dndjiR/oYh7ejfp96tQ9oIdeT9uhZIyZ+I+
eaVdxGsX54ZfdiD1qqdPSxHbCp0fUtzpgClH+MZLbDGUSLo0HNAiz59+tW/G
BkMGmr7eLELyfba/OGFN8mO2qzxutcf01g/VeCeGN50CEmWN9pg6sskyi1ha
6bNgV609Zmk3CIYRT/ec6+ctt8e0Y8sd5YlzNZozPF6Seq8NMmkWGL4PBS4s
uUbiFtG80eYYXAwNR6Uu22OUbLjRjRhfW9mpeckeU/K+pW0nTjMufnYgjvjB
/b2TZhj0bizyfRdO+o25hx0jTrK7VRvgYo+9LLsfnDYlz78X9obmSPJP3NPb
T+w1Z34v3Zb091dfYUKsXvDjdKkZqb+16bwgcS+3nqq4Jql/HVuWZYJhy6uO
zOq15H0KZr5U78BwbemDuL5VpN9sgOEz4n/ep45OCf03numfmcStQrLWUvyk
vkHa7hDxVAtn4deYHaZYCI4tI07TFq2zf26HWe9nH/kaYzABp7TWAjuMG6/s
sCeeMEnxcLllh6nhuVt1iR3tF33fk0rqB7vnVxALH5xcdjCY5DtUPC0zIvPz
Talj2JfEX/j/KyQOORqYG7SX9M+VfJJL3HCKs+2otR32OhatcoL4UlqT3SkF
Up94kVebWE98qShFmjyPseHsZuJvN81ZMWIkfz7RX5zY+uGH0Hh+O0yLPh05
j8j3pPxHawmF1Pe05vwkfvhKgyt5xhbjuCJFDrFg6aPLVwdtMaXQ73QV8Vvz
od0iTFvMqujXLyE+VC8jfb2d5Csf3VdIXNWZ9Ty3nMTDXjKuE5//Gd9acNsW
02vHukOJt4eXZytm2WIvrW3nDhIP/Pl34OllEjejxXkSmyyKnHxJI3aby7Ih
nkx8XqJ5nPSLOlhoSnx3xY/YtyHkeXddZQ2IeTb4rsGethjNpCkpEz+/Tf9s
7EL6N2vWbib2lu+9V2FD4uv662WIVz5ZG2xhaoupUt3aEsSlak7ba/VInKW/
Qoz4aHHygo06ed8HPC6riaUMayqbtpDx3GYKCBM3lfOlOMmQeLPKtqXENEsj
1w5xMh4T3nJ+YuWmk5K7VxKPzdbyEfc5v/naI0DsaWnGQ5zcM/HUk8sW09Jr
VLmIDfYrHWfP2mC89mvqP0MMPwYDkM+YDaZ2Fe5bIM4Jus//9Svx768588TW
4+ymQ302mJIhaPmf5yI3XP/WQeIBft7/+dG82/6QBhtM26Y48J/3nEvbPF5B
4t6xTf/1ExRo+hX23gYj67vSlP/+nslL3s68JP2ucrr+G0/AavOY6Ec2mHWj
ZvK/8YpnxVjO3yHx1q1HFxHXSH5YScsmcU1VBwHiqHu/u7mvkn6P9l7+bz4q
GycERBJJvLr7l9B/8/3nu9bmc8TCmnmriPfJDh3UO0HyRfifryV+ZMtJtztm
g+k8KqvWE88e763wDiTPe91bSyU2vdMxGX6AxH3CP28kZs7UON5wIt66cqUK
sYJ0xdmnVqRfE2hpEkdaQ2HpDuKfqaBPLHzrxfJhNTIfHtunrIg9ah/rz20h
812cledEXDCVFyQka4O9xuQYe4iNLW/UaKwm9RefbTv8398rLP23xVJSH3oy
NoK4JzdV3oOXxFv+mtCIwyZiz8dMWmOqm+Gia8SMDWeKrn2zxqy7tovoxMst
ovrz+61J/fOQh8R5Nw4bN7ZZY3oDNbrsv++78uARTh2Jj18UbSJGv/bTp8qJ
4yXXfSbuNnVZWFdkjb1EXpjNEi/9afDW/5o1RhWLV6iR37ObmPbwiUskfnbm
gTHxvR1qoilxpP/6Q3RHYoPMTRFF4daYEqKbe4z4iJGwKrcLGZ/x3j/FxB8C
BfevsSX9rkXE1BELpvOmypuReGF0cB/x3ZHZ77bbrTF+pRK9iKxXHVfZBdki
ZHxWGem7iaU/9HQ+WU7iJWrHQohDhtoXly4i/ZRtGXHE/Po1vkPTVpjyMOfl
C2LdwedSGp+sMO3Zu5nVZP2ka8Veb8gg8RN31n4jzi3reiaQaoXxu836/GS9
zrFVqjGJt8JI5VmpLHGWT/eft8etsFfE6KgncVqqskfebtJv9Zp3n4jjh3ol
aOusMNUi2q6XrP/nj6lqvltlhenu0bULxHELF+yml1hh1totb6XI/hKzWo0W
NGeJKe7lk/7EJ9FFtttn4n8T43PERzI17qrctMSslD7QIftbqExiSVCGJcYL
usE+xMFPWG15KZaYmr/5QjJxUHkinwTNEqM3DpNfiP3G2H6C+4nNlR5eJful
u0Xy5i/SpJ99BtdiK/K9zQ4+Sbu/E1M+6j43J/v1eo/mIrncnZhl9vdJLPE0
vCt5c43E5T5plhI/vJBa0xu7E+NfboMGZL9fvVZnUPbATkwdlEk2sCfnG41L
G4okiZVb+MkxBvD1SFnztTsxyuRcvkGcNb9/S9dy0m+5fCGH2K5iu/b8vAVZ
v4ZekWMZvNnF2mXaa4FZN30V0sh5JOGYWlJ7pgWmfKqy+E3OLz6fNlw9mEry
H799ZuFKvi9d/qzfFywwrdXoeSbxBPfnvA2RJD/j2FEdN/J7u3K+zNfZAlMn
+z/G7ibnq2ddf6ZWWGC6C5WlTs5TLT/OHBJJNMdUXbHtwt4Yds7If9I6Z45Z
3Vcmg4jxv2aTPSeIL7kY1xA/FZal0gNJ/uyRuPPkfJekWtWx2doc02vq4/nI
+c8sQthEfxlxRX7cBn8M7+bpEj4pZph2+eUgDsagusgy6fwFM8wSsExUDiHn
s+UTv/PPmGEU/riRTpwpadr+PcSM7L8CKudCMUQYDSdG2pN6pcbNdkfJ+h6n
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
79ThtJsY/v/vdxHuelr05hqG/wGZ6HG4
          "]]}, Annotation[#, "Charting`Private`Tag$7068#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Dashing[Small], 
          Thickness[0.005], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
////BJBf4+m+vJSH/wd864UH
          "]]}, Annotation[#, "Charting`Private`Tag$7068#3"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, -1.2022375368522034`}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\)\"", 
        TraditionalForm], 
       FormBox[
       "\"\\!\\(\\*OverscriptBox[\\n \
StyleBox[\\\"K\\\",\\nFontSlant->\\\"Italic\\\"], \
\\\"^\\\"]\\)(\\!\\(\\*\\nStyleBox[\\\"t\\\",\\nFontSlant->\\\"Italic\\\"]\\))\
\"", TraditionalForm]}, AxesOrigin -> {0, -1.2022375368522034`}, AxesStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15], DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], LabelStyle -> Directive[
       RGBColor[1, 0, 0]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}, TicksStyle -> 
     Directive[
       RGBColor[1, 0, 0], 15]}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
0\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = \
1\"", "\"\\!\\(\\*\\nStyleBox[\\\"q\\\",\\nFontSlant->\\\"Italic\\\"]\\) = -1\
\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.045]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Large], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[Small], 
                    Thickness[0.045], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           RGBColor[1, 0, 0]], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Large", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.33333333333333337`, 
                    0.33333333333333337`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0.5]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", "Small", "]"}], ",", 
                   RowBox[{"Thickness", "[", "0.005`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.822798512936412*^9, 3.8230612679856296`*^9, 
  3.8230613816292796`*^9, 3.8230615196710606`*^9, 3.823061600402838*^9, 
  3.8230616378600335`*^9, 3.8230626925807867`*^9, 3.823079351227854*^9, 
  3.823085244087025*^9, 3.823097306082418*^9, 3.823098674997163*^9, 
  3.823098984622834*^9}]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{782, 852},
WindowMargins->{{Automatic, 1147}, {Automatic, 70}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"ReverseColor.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 4, 111, "Section"],
Cell[765, 28, 497, 10, 87, "Text"],
Cell[1265, 40, 297, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[1587, 51, 219, 3, 49, "Subsection"],
Cell[1809, 56, 127, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[1961, 61, 152, 2, 50, "Input"],
Cell[2116, 65, 10609, 311, 474, "Output"],
Cell[12728, 378, 2399, 72, 130, "Output"]
}, Open  ]],
Cell[15142, 453, 922, 29, 68, "Text"],
Cell[CellGroupData[{
Cell[16089, 486, 1346, 34, 154, "Input"],
Cell[17438, 522, 9118, 274, 336, "Output"],
Cell[26559, 798, 1973, 58, 98, "Output"]
}, Open  ]],
Cell[28547, 859, 312, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[28884, 871, 1018, 27, 89, "Input"],
Cell[29905, 900, 11215, 273, 95, "Output"],
Cell[41123, 1175, 11153, 276, 102, "Output"]
}, Open  ]],
Cell[52291, 1454, 1054, 34, 125, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[53382, 1493, 177, 2, 41, "Subsection"],
Cell[53562, 1497, 350, 8, 68, "Text"],
Cell[53915, 1507, 1611, 45, 89, "Input"],
Cell[55529, 1554, 119, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[55673, 1559, 950, 28, 187, "Input"],
Cell[56626, 1589, 9442, 289, 426, "Output"],
Cell[66071, 1880, 2099, 65, 131, "Output"]
}, Open  ]],
Cell[68185, 1948, 166, 3, 29, "Text"],
Cell[68354, 1953, 3494, 102, 347, "Input"],
Cell[71851, 2057, 242, 7, 30, "Text"],
Cell[CellGroupData[{
Cell[72118, 2068, 471, 15, 30, "Input"],
Cell[72592, 2085, 532, 9, 40, "Output"]
}, Open  ]],
Cell[73139, 2097, 242, 8, 29, "Text"],
Cell[CellGroupData[{
Cell[73406, 2109, 2777, 81, 245, "Input"],
Cell[76186, 2192, 5206, 105, 243, "Output"]
}, Open  ]],
Cell[81407, 2300, 581, 18, 68, "Text"],
Cell[CellGroupData[{
Cell[82013, 2322, 2562, 67, 245, "Input"],
Cell[84578, 2391, 2575, 76, 88, "Output"],
Cell[87156, 2469, 1540, 47, 86, "Output"]
}, Open  ]],
Cell[88711, 2519, 124, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[88860, 2524, 2028, 55, 265, "Input"],
Cell[90891, 2581, 5788, 170, 252, "Output"],
Cell[96682, 2753, 862, 20, 31, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[97593, 2779, 159, 2, 41, "Subsection"],
Cell[97755, 2783, 315, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[98095, 2792, 139, 1, 39, "Subsubsection"],
Cell[98237, 2795, 345, 10, 30, "Text"],
Cell[98585, 2807, 2657, 81, 167, "Input"],
Cell[101245, 2890, 141, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[101411, 2895, 498, 15, 50, "Input"],
Cell[101912, 2912, 563, 16, 30, "Output"]
}, Open  ]],
Cell[102490, 2931, 469, 15, 49, "Text"],
Cell[CellGroupData[{
Cell[102984, 2950, 762, 22, 50, "Input"],
Cell[103749, 2974, 606, 18, 30, "Output"]
}, Open  ]],
Cell[104370, 2995, 406, 11, 52, "Text"],
Cell[104779, 3008, 2578, 76, 204, "Input"],
Cell[107360, 3086, 138, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[107523, 3091, 532, 15, 50, "Input"],
Cell[108058, 3108, 641, 18, 41, "Output"]
}, Open  ]],
Cell[108714, 3129, 193, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[108932, 3137, 762, 21, 50, "Input"],
Cell[109697, 3160, 682, 21, 41, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[110428, 3187, 258, 7, 31, "Subsubsection"],
Cell[110689, 3196, 310, 7, 49, "Text"],
Cell[111002, 3205, 2706, 81, 148, "Input"],
Cell[113711, 3288, 132, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[113868, 3293, 629, 18, 50, "Input"],
Cell[114500, 3313, 615, 17, 30, "Output"]
}, Open  ]],
Cell[115130, 3333, 127, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[115282, 3338, 829, 24, 50, "Input"],
Cell[116114, 3364, 606, 18, 30, "Output"]
}, Open  ]],
Cell[116735, 3385, 137, 1, 29, "Text"],
Cell[116875, 3388, 2514, 75, 184, "Input"],
Cell[119392, 3465, 115, 1, 29, "Text"],
Cell[CellGroupData[{
Cell[119532, 3470, 638, 18, 50, "Input"],
Cell[120173, 3490, 689, 19, 41, "Output"]
}, Open  ]],
Cell[120877, 3512, 177, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[121079, 3520, 840, 23, 50, "Input"],
Cell[121922, 3545, 686, 21, 41, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[122657, 3572, 107, 1, 31, "Subsubsection"],
Cell[122767, 3575, 268, 5, 68, "Text"],
Cell[123038, 3582, 1205, 22, 109, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[124292, 3610, 170, 2, 41, "Subsection"],
Cell[124465, 3614, 131, 1, 30, "Text"],
Cell[124599, 3617, 282, 8, 50, "Input"],
Cell[CellGroupData[{
Cell[124906, 3629, 112, 1, 38, "Subsubsection"],
Cell[125021, 3632, 141, 1, 29, "Text"],
Cell[125165, 3635, 2012, 55, 226, "Input"],
Cell[127180, 3692, 145, 1, 29, "Text"],
Cell[127328, 3695, 1893, 51, 226, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[129258, 3751, 97, 1, 30, "Subsubsection"],
Cell[129358, 3754, 362, 7, 68, "Text"],
Cell[129723, 3763, 2506, 63, 220, "Input"],
Cell[132232, 3828, 115, 1, 29, "Text"],
Cell[132350, 3831, 875, 24, 86, "Input"],
Cell[133228, 3857, 156, 3, 29, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[133421, 3865, 114, 1, 30, "Subsubsection"],
Cell[133538, 3868, 259, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[133822, 3877, 23338, 553, 1815, "Input"],
Cell[CellGroupData[{
Cell[157185, 4434, 185, 2, 22, "Print"],
Cell[157373, 4438, 183, 2, 22, "Print"],
Cell[157559, 4442, 183, 2, 22, "Print"],
Cell[157745, 4446, 182, 2, 22, "Print"],
Cell[157930, 4450, 185, 2, 22, "Print"],
Cell[158118, 4454, 183, 2, 22, "Print"],
Cell[158304, 4458, 185, 2, 22, "Print"],
Cell[158492, 4462, 185, 2, 22, "Print"],
Cell[158680, 4466, 185, 2, 22, "Print"]
}, Open  ]]
}, Open  ]],
Cell[158892, 4472, 99, 1, 30, "Text"],
Cell[158994, 4475, 919, 21, 50, "Input"],
Cell[159916, 4498, 556, 19, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[160509, 4522, 365, 9, 30, "Subsubsection"],
Cell[160877, 4533, 295, 9, 29, "Text"],
Cell[161175, 4544, 505, 11, 89, "Input"],
Cell[161683, 4557, 191, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[161899, 4565, 10093, 301, 1041, "Input"],
Cell[171995, 4868, 47011, 850, 260, "Output"],
Cell[219009, 5720, 47118, 848, 265, "Output"]
}, Open  ]],
Cell[266142, 6571, 244, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[266411, 6580, 5232, 136, 548, "Input"],
Cell[271646, 6718, 94684, 1636, 258, "Output"],
Cell[366333, 8356, 99952, 1725, 258, "Output"]
}, Open  ]],
Cell[466300, 10084, 179, 2, 29, "Text"],
Cell[CellGroupData[{
Cell[466504, 10090, 10223, 279, 1086, "Input"],
Cell[476730, 10371, 130953, 2232, 257, "Output"],
Cell[607686, 12605, 131782, 2258, 253, "Output"]
}, Open  ]],
Cell[739483, 14866, 221, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[739729, 14875, 11252, 310, 940, "Input"],
Cell[750984, 15187, 56792, 1012, 248, "Output"],
Cell[807779, 16201, 53733, 961, 252, "Output"]
}, Open  ]],
Cell[861527, 17165, 414, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[861966, 17178, 5460, 143, 451, "Input"],
Cell[867429, 17323, 56521, 1008, 248, "Output"],
Cell[923953, 18333, 54081, 968, 262, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

